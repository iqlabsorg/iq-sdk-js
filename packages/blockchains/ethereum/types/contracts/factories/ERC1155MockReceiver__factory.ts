/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { ERC1155MockReceiver } from "../ERC1155MockReceiver";

export class ERC1155MockReceiver__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155MockReceiver> {
    return super.deploy(overrides || {}) as Promise<ERC1155MockReceiver>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155MockReceiver {
    return super.attach(address) as ERC1155MockReceiver;
  }
  connect(signer: Signer): ERC1155MockReceiver__factory {
    return super.connect(signer) as ERC1155MockReceiver__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155MockReceiver {
    return new Contract(address, _abi, signerOrProvider) as ERC1155MockReceiver;
  }
}

const _abi = [
  {
    inputs: [],
    name: "lastData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastFrom",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_value",
        type: "bool",
      },
    ],
    name: "setShouldReject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldReject",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107ef806100206000396000f3fe608060405234801561001057600080fd5b50600436106100bd5760003560e01c80638044337811610076578063bc197c811161005b578063bc197c81146101e9578063c1292cc314610333578063f23a6e611461033b576100bd565b806380443378146101c0578063a175b638146101c8576100bd565b80631dbb9381116100a75780631dbb93811461017a57806343183834146101825780636eb3cd491461019c576100bd565b80626e75ec146100c257806301ffc9a71461013f575b600080fd5b6100ca6103d0565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101045781810151838201526020016100ec565b50505050905090810190601f1680156101315780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101666004803603602081101561015557600080fd5b50356001600160e01b03191661045d565b604080519115158252519081900360200190f35b6101666104c6565b61018a6104cf565b60408051918252519081900360200190f35b6101a46104d5565b604080516001600160a01b039092168252519081900360200190f35b6101a46104e4565b6101e7600480360360208110156101de57600080fd5b503515156104f3565b005b610316600480360360a08110156101ff57600080fd5b6001600160a01b03823581169260208101359091169181019060608101604082013564010000000081111561023357600080fd5b82018360208201111561024557600080fd5b8035906020019184602083028401116401000000008311171561026757600080fd5b91939092909160208101903564010000000081111561028557600080fd5b82018360208201111561029757600080fd5b803590602001918460208302840111640100000000831117156102b957600080fd5b9193909290916020810190356401000000008111156102d757600080fd5b8201836020820111156102e957600080fd5b8035906020019184600183028401116401000000008311171561030b57600080fd5b509092509050610506565b604080516001600160e01b03199092168252519081900360200190f35b61018a6105f4565b610316600480360360a081101561035157600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561039157600080fd5b8201836020820111156103a357600080fd5b803590602001918460018302840111640100000000831117156103c557600080fd5b5090925090506105fa565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104555780601f1061042a57610100808354040283529160200191610455565b820191906000526020600020905b81548152906001019060200180831161043857829003601f168201915b505050505081565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b0319831614806104c057507f4e2312e0000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60005460ff1681565b60055481565b6002546001600160a01b031681565b6003546001600160a01b031681565b6000805460ff1916911515919091179055565b600280546001600160a01b03808b1673ffffffffffffffffffffffffffffffffffffffff199283161790925560038054928a169290911691909117905560008686828161054f57fe5b602002919091013560045550848460008161056657fe5b60200291909101356005555061057e600184846106c3565b5060005460ff161515600114156105c65760405162461bcd60e51b815260040180806020018281038252602d815260200180610765602d913960400191505060405180910390fd5b507fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b60045481565b600280546001600160a01b0380891673ffffffffffffffffffffffffffffffffffffffff1992831617909255600380549288169290911691909117905560048490556005839055600061064f600184846106c3565b5060005460ff161515600114156106975760405162461bcd60e51b81526004018080602001828103825260288152602001806107926028913960400191505060405180910390fd5b507ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826106f9576000855561073f565b82601f106107125782800160ff1982351617855561073f565b8280016001018555821561073f579182015b8281111561073f578235825591602001919060010190610724565b5061074b92915061074f565b5090565b5b8082111561074b576000815560010161075056fe6f6e45524331313535426174636852656365697665643a207472616e73666572206e6f742061636365707465646f6e4552433131353552656365697665643a207472616e73666572206e6f74206163636570746564a26469706673582212205bd08149e1ea348d725ab62ce56a64af904d2e7829967d21f847212399a5182b64736f6c63430007060033";
