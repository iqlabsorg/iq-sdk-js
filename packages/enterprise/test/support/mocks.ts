import { BlockchainEnterprise, BlockchainProvider, BlockchainService } from '@iqprotocol/abstract-blockchain';

export const blockchainEnterpriseMock: jest.Mocked<BlockchainEnterprise> = {
  claimStakingReward: jest.fn(),
  decreaseStake: jest.fn(),
  estimateRentalFee: jest.fn(),
  getAvailableReserve: jest.fn(),
  getBaseUri: jest.fn(),
  getBondingCurve: jest.fn(),
  getChainId: jest.fn(),
  getConverterAddress: jest.fn(),
  getEnterpriseCollectorAddress: jest.fn(),
  getEnterpriseOnlyCollectionPeriod: jest.fn(),
  getEnterpriseTokenAddress: jest.fn(),
  getEnterpriseTokenAllowance: jest.fn(),
  getEnterpriseTokenMetadata: jest.fn(),
  getEnterpriseTokenType: jest.fn(),
  getEnterpriseWalletAddress: jest.fn(),
  getGCFeePercent: jest.fn(),
  getInfo: jest.fn(),
  getProxyAdminAddress: jest.fn(),
  getRentalAgreement: jest.fn(),
  getRentalTokenAddress: jest.fn(),
  getRentalTokenIds: jest.fn(),
  getRentalTokenMetadata: jest.fn(),
  getRentalTokenType: jest.fn(),
  getRenterOnlyReturnPeriod: jest.fn(),
  getReserve: jest.fn(),
  getServiceAddresses: jest.fn(),
  getStake: jest.fn(),
  getStakeTokenAddress: jest.fn(),
  getStakeTokenIds: jest.fn(),
  getStakeTokenMetadata: jest.fn(),
  getStakeTokenType: jest.fn(),
  getStakingReward: jest.fn(),
  getStreamingReserveHalvingPeriod: jest.fn(),
  getUsedReserve: jest.fn(),
  increaseStake: jest.fn(),
  isRegisteredService: jest.fn(),
  registerService: jest.fn(),
  rent: jest.fn(),
  returnRental: jest.fn(),
  setBaseUri: jest.fn(),
  setBondingCurve: jest.fn(),
  setConverterAddress: jest.fn(),
  setEnterpriseCollectorAddress: jest.fn(),
  setEnterpriseOnlyCollectionPeriod: jest.fn(),
  setEnterpriseTokenAllowance: jest.fn(),
  setEnterpriseWalletAddress: jest.fn(),
  setGcFeePercent: jest.fn(),
  setRenterOnlyReturnPeriod: jest.fn(),
  setStreamingReserveHalvingPeriod: jest.fn(),
  stake: jest.fn(),
  unstake: jest.fn(),
};
export const blockchainServiceMock: jest.Mocked<BlockchainService> = {
  estimateRentalFee: jest.fn(),
  getAccountState: jest.fn(),
  getAvailableBalance: jest.fn(),
  getBalance: jest.fn(),
  getBaseRate: jest.fn(),
  getBaseTokenAddress: jest.fn(),
  getChainId: jest.fn(),
  getEnergyAt: jest.fn(),
  getEnergyGapHalvingPeriod: jest.fn(),
  getEnterpriseTokenAllowance: jest.fn(),
  getIndex: jest.fn(),
  getInfo: jest.fn(),
  getMaxRentalPeriod: jest.fn(),
  getMinGCFee: jest.fn(),
  getMinRentalPeriod: jest.fn(),
  getServiceFeePercent: jest.fn(),
  isSwappingEnabled: jest.fn(),
  isTransferEnabled: jest.fn(),
  setBaseRate: jest.fn(),
  setEnterpriseTokenAllowance: jest.fn(),
  setRentalPeriodLimits: jest.fn(),
  setServiceFeePercent: jest.fn(),
  swapIn: jest.fn(),
  swapOut: jest.fn(),
};

export const blockchainProviderMock: jest.Mocked<BlockchainProvider> = {
  service: jest.fn().mockReturnValue(blockchainServiceMock),
  enterprise: jest.fn().mockReturnValue(blockchainEnterpriseMock),
  deployEnterprise: jest.fn(),
  getChainId: jest.fn(),
  getTokenBalance: jest.fn(),
};
