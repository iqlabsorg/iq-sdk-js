/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  WarperContext,
  WarperContextInterface,
} from "../../../warper/utils/WarperContext";

const _abi = [
  {
    inputs: [],
    name: "CallerIsNotMetahub",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotWarperAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractIsAlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractIsNotInitializing",
    type: "error",
  },
];

export class WarperContext__factory {
  static readonly abi = _abi;
  static createInterface(): WarperContextInterface {
    return new utils.Interface(_abi) as WarperContextInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WarperContext {
    return new Contract(address, _abi, signerOrProvider) as WarperContext;
  }
}
