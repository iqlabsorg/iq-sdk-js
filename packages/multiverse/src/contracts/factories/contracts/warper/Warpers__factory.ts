/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Warpers,
  WarpersInterface,
} from "../../../contracts/warper/Warpers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "IncompatibleAsset",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "UnsupportedAsset",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "WarperIsAlreadyRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "WarperIsNotPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "WarperIsNotRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "WarperIsPaused",
    type: "error",
  },
];

const _bytecode =
  "0x610ded61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c806344ef51261461005b5780635e327ed514610085578063c73a080a146100a7578063ef6c202d146100c7575b600080fd5b61006e61006936600461095c565b6100da565b60405161007c929190610999565b60405180910390f35b81801561009157600080fd5b506100a56100a0366004610acd565b610114565b005b8180156100b357600080fd5b506100a56100c2366004610bd9565b6101df565b61006e6100d5366004610cc1565b61036e565b6001600160a01b038316600090815260048501602052604090206060908190610106908790868661038c565b915091505b94509492505050565b6001600160a01b038116600090815260058301602090815260408083206003808201548552860190925290912061014b90836106ac565b50805464010000000090046001600160a01b03166000908152600484016020526040902061017990836106ac565b5061018760018401836106ac565b506001600160a01b0382166000908152600584016020526040812080546001600160c81b03191681556001810180546001600160a01b0319169055906101d06002830182610861565b60038201600090555050505050565b6101ec60018401836106ca565b61021857604051632ccbd64f60e01b81526001600160a01b038316600482015260240160405180910390fd5b6060810151604051637aa9c1d760e11b81526001600160a01b0384811660048301529091169063f55383ae9060240160006040518083038186803b15801561025f57600080fd5b505afa158015610273573d6000803e3d6000fd5b505050506001600160a01b0382811660009081526005850160209081526040918290208451815486840151948701511515600160c01b0260ff60c01b19958716640100000000026001600160c01b031990921660e09390931c9290921717939093169290921782556060840151600183018054919094166001600160a01b03199091161790925560808301518051849361031492600285019291019061089e565b5060a0918201516003918201559082015160009081529084016020526040902061033e90836106ca565b506020808201516001600160a01b03166000908152600485019091526040902061036890836106ca565b50505050565b60008381526003850160205260409020606090819061010690879086865b606080600061039a866106df565b905080851061040d5760408051600080825260208201818152828401909352909190610402565b6040805160c081018252600080825260208083018290529282018190526060808301829052608083015260a082015282526000199092019101816103c15790505b50925092505061010b565b6104178582610d09565b84111561042b576104288582610d09565b93505b60008467ffffffffffffffff81111561044657610446610afd565b6040519080825280602002602001820160405280156104a557816020015b6040805160c081018252600080825260208083018290529282018190526060808301829052608083015260a082015282526000199092019101816104645790505b50905060008567ffffffffffffffff8111156104c3576104c3610afd565b6040519080825280602002602001820160405280156104ec578160200160208202803683370190505b50905060005b8681101561069e5761050e610507828a610d20565b8a906106e9565b82828151811061052057610520610d38565b60200260200101906001600160a01b031690816001600160a01b03168152505089600501600083838151811061055857610558610d38565b6020908102919091018101516001600160a01b039081168352828201939093526040918201600020825160c081018452815460e081901b6001600160e01b03191682526401000000008104861693820193909352600160c01b90920460ff16151592820192909252600182015490921660608301526002810180546080840191906105e290610d4e565b80601f016020809104026020016040519081016040528092919081815260200182805461060e90610d4e565b801561065b5780601f106106305761010080835404028352916020019161065b565b820191906000526020600020905b81548152906001019060200180831161063e57829003601f168201915b5050505050815260200160038201548152505083828151811061068057610680610d38565b6020026020010181905250808061069690610d88565b9150506104f2565b509890975095505050505050565b60006106c1836001600160a01b0384166106f5565b90505b92915050565b60006106c1836001600160a01b0384166107e8565b60006106c4825490565b60006106c18383610837565b600081815260018301602052604081205480156107de576000610719600183610d09565b855490915060009061072d90600190610d09565b905081811461079257600086600001828154811061074d5761074d610d38565b906000526020600020015490508087600001848154811061077057610770610d38565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806107a3576107a3610da1565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506106c4565b60009150506106c4565b600081815260018301602052604081205461082f575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556106c4565b5060006106c4565b600082600001828154811061084e5761084e610d38565b9060005260206000200154905092915050565b50805461086d90610d4e565b6000825580601f1061087d575050565b601f01602090049060005260206000209081019061089b9190610922565b50565b8280546108aa90610d4e565b90600052602060002090601f0160209004810192826108cc5760008555610912565b82601f106108e557805160ff1916838001178555610912565b82800160010185558215610912579182015b828111156109125782518255916020019190600101906108f7565b5061091e929150610922565b5090565b5b8082111561091e5760008155600101610923565b6001600160a01b038116811461089b57600080fd5b803561095781610937565b919050565b6000806000806080858703121561097257600080fd5b84359350602085013561098481610937565b93969395505050506040820135916060013590565b6040808252835182820181905260009190606090818501906020808901865b838110156109dd5781516001600160a01b0316855293820193908201906001016109b8565b50508683038188015287518084528184019250600581901b8401820189830160005b83811015610abc57601f1987840381018752825180516001600160e01b0319168552868101516001600160a01b03908116888701528b82015115158c8701528a820151168a86015260808082015160c09187018290528051918701829052600091905b81831015610a80578083018a015188840160e0015291890191610a62565b5080821115610a9357600060e082890101525b60a092830151928701929092525096860196601f011690920160e00191908401906001016109ff565b50909b9a5050505050505050505050565b60008060408385031215610ae057600080fd5b823591506020830135610af281610937565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715610b3657610b36610afd565b60405290565b8035801515811461095757600080fd5b600082601f830112610b5d57600080fd5b813567ffffffffffffffff80821115610b7857610b78610afd565b604051601f8301601f19908116603f01168101908282118183101715610ba057610ba0610afd565b81604052838152866020858801011115610bb957600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610bee57600080fd5b833592506020840135610c0081610937565b9150604084013567ffffffffffffffff80821115610c1d57600080fd5b9085019060c08288031215610c3157600080fd5b610c39610b13565b82356001600160e01b031981168114610c5157600080fd5b8152610c5f6020840161094c565b6020820152610c7060408401610b3c565b6040820152610c816060840161094c565b6060820152608083013582811115610c9857600080fd5b610ca489828601610b4c565b60808301525060a083013560a08201528093505050509250925092565b60008060008060808587031215610cd757600080fd5b5050823594602084013594506040840135936060013592509050565b634e487b7160e01b600052601160045260246000fd5b600082821015610d1b57610d1b610cf3565b500390565b60008219821115610d3357610d33610cf3565b500190565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610d6257607f821691505b602082108103610d8257634e487b7160e01b600052602260045260246000fd5b50919050565b600060018201610d9a57610d9a610cf3565b5060010190565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220035457f9ef1737d68b507681dc46e89c326124aa770275e7ca9345c79d88571564736f6c634300080d0033";

type WarpersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WarpersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Warpers__factory extends ContractFactory {
  constructor(...args: WarpersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Warpers> {
    return super.deploy(overrides || {}) as Promise<Warpers>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Warpers {
    return super.attach(address) as Warpers;
  }
  override connect(signer: Signer): Warpers__factory {
    return super.connect(signer) as Warpers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WarpersInterface {
    return new utils.Interface(_abi) as WarpersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Warpers {
    return new Contract(address, _abi, signerOrProvider) as Warpers;
  }
}
