/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WarperManager,
  WarperManagerInterface,
} from "../../../contracts/warper/WarperManager";

const _abi = [
  {
    inputs: [],
    name: "InvalidWarperInterface",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "UnsupportedAsset",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provided",
        type: "address",
      },
      {
        internalType: "address",
        name: "required",
        type: "address",
      },
    ],
    name: "WarperHasIncorrectMetahubReference",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "WarperIsAlreadyRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "WarperIsNotPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "WarperIsNotRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "WarperIsPaused",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "WarperDeregistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "WarperPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "warper",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "original",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "assetClass",
        type: "bytes4",
      },
    ],
    name: "WarperRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "WarperUnpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "original",
        type: "address",
      },
    ],
    name: "assetWarperCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "original",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "assetWarpers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "original",
            type: "address",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
          {
            internalType: "contract IWarperController",
            name: "controller",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "universeId",
            type: "uint256",
          },
        ],
        internalType: "struct Warpers.Warper[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "checkRegisteredWarper",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "checkSupportedAsset",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "deregisterWarper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IWarperPresetFactory",
            name: "warperPresetFactory",
            type: "address",
          },
          {
            internalType: "contract IAssetClassRegistry",
            name: "assetClassRegistry",
            type: "address",
          },
          {
            internalType: "contract IUniverseRegistry",
            name: "universeRegistry",
            type: "address",
          },
          {
            internalType: "contract IACL",
            name: "acl",
            type: "address",
          },
        ],
        internalType: "struct WarperManager.WarperManagerInitParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isWarperAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metahub",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "pauseWarper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "universeId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
        ],
        internalType: "struct IWarperManager.WarperRegistrationParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "registerWarper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMetahub",
        name: "metahub_",
        type: "address",
      },
    ],
    name: "setMetahub",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "warpers",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "setWarperController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
    ],
    name: "universeWarperCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "universeWarpers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "original",
            type: "address",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
          {
            internalType: "contract IWarperController",
            name: "controller",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "universeId",
            type: "uint256",
          },
        ],
        internalType: "struct Warpers.Warper[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "unpauseWarper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "warperController",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "warperInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "original",
            type: "address",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
          {
            internalType: "contract IWarperController",
            name: "controller",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "universeId",
            type: "uint256",
          },
        ],
        internalType: "struct Warpers.Warper",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "warperPresetFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

type WarperManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WarperManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WarperManager__factory extends ContractFactory {
  constructor(...args: WarperManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WarperManager> {
    return super.deploy(overrides || {}) as Promise<WarperManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WarperManager {
    return super.attach(address) as WarperManager;
  }
  override connect(signer: Signer): WarperManager__factory {
    return super.connect(signer) as WarperManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WarperManagerInterface {
    return new utils.Interface(_abi) as WarperManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WarperManager {
    return new Contract(address, _abi, signerOrProvider) as WarperManager;
  }
}
