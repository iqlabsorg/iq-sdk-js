/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721WarperController,
  ERC721WarperControllerInterface,
} from "../../../../contracts/warper/ERC721/ERC721WarperController";

const _abi = [
  {
    inputs: [],
    name: "AlreadyRented",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "provided",
        type: "bytes4",
      },
      {
        internalType: "bytes4",
        name: "required",
        type: "bytes4",
      },
    ],
    name: "AssetClassMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "AssetIsNotRentable",
    type: "error",
  },
  {
    inputs: [],
    name: "FunctionMustBeCalledThroughDelegatecall",
    type: "error",
  },
  {
    inputs: [],
    name: "IncompatibleWarperInterface",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "InvalidAssetForWarper",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "InvalidERC721Value",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "RentingHookError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentTime",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "availabilityPeriodStart",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "availabilityPeriodEnd",
        type: "uint32",
      },
    ],
    name: "WarperIsNotAvailableForRenting",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "requestedRentalPeriod",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "minRentalPeriod",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "maxRentalPeriod",
        type: "uint32",
      },
    ],
    name: "WarperRentalPeriodIsOutOfRange",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "AssetTransfer",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "assetClass",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "warper",
            type: "address",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "rentalPeriod",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
        ],
        internalType: "struct Rentings.Params",
        name: "rentingParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "universeFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "listerFee",
        type: "uint256",
      },
    ],
    name: "calculatePremiums",
    outputs: [
      {
        internalType: "uint256",
        name: "universePremium",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "listerPremium",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "checkCompatibleWarper",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "class",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Assets.AssetId",
        name: "assetId",
        type: "tuple",
      },
    ],
    name: "collectionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rentalId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "warpedAsset",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "collectionId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "startTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "endTime",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "listingParams",
            type: "tuple",
          },
        ],
        internalType: "struct Rentings.Agreement",
        name: "rentalAgreement",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "enum IPaymentManager.EarningType",
                name: "earningType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct Accounts.UserEarning[]",
            name: "userEarnings",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "universeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "universeEarningValue",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "universeEarningToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "protocolEarningValue",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "protocolEarningToken",
            type: "address",
          },
        ],
        internalType: "struct Accounts.RentalEarnings",
        name: "rentalEarnings",
        type: "tuple",
      },
    ],
    name: "executeRentingHooks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "isCompatibleWarper",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "metahub",
        type: "address",
      },
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
    ],
    name: "rentalBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "metahub",
        type: "address",
      },
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "rentalStatus",
    outputs: [
      {
        internalType: "enum Rentings.RentalStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "returnAssetFromVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "assetOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "transferAssetToVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "warper",
            type: "address",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "rentalPeriod",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
        ],
        internalType: "struct Rentings.Params",
        name: "rentingParams",
        type: "tuple",
      },
    ],
    name: "validateRentingParams",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "warp",
    outputs: [
      {
        internalType: "bytes32",
        name: "warpedCollectionId",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Assets.Asset",
        name: "warpedAsset",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161208861004c60003960008181610820015281816108e70152818161094201528181610c870152610e8201526120886000f3fe608060405234801561001057600080fd5b50600436106100e15760003560e01c8063b42ca9e311610086578063c95eb64d11610063578063c95eb64d146101d3578063e4f75ad3146101f4578063f19e254e14610207578063f55383ae1461022f57005b8063b42ca9e31461018c578063b7cc2e7b1461019f578063bfe0af99146101c057005b806369bdbd0e116100bf57806369bdbd0e1461013e57806386c9de051461015157806389897ace14610166578063997f62131461017957005b806301ffc9a7146100e35780633f09518c1461010b57806361f806471461012b575b005b6100f66100f1366004611337565b610242565b60405190151581526020015b60405180910390f35b61011e610119366004611379565b61026d565b60405161010291906113d0565b6100e1610139366004611422565b6102ed565b6100e161014c366004611604565b610816565b6040516339d690a360e11b8152602001610102565b6100e1610174366004611655565b6108dd565b6100e16101873660046116e1565b610938565b6100f661019a36600461175c565b610ae3565b6101b26101ad366004611779565b610b55565b604051908152602001610102565b6101b26101ce3660046117ad565b610bd3565b6101e66101e13660046117ed565b610c5c565b6040516101029291906118de565b6100e16102023660046118f7565b610e78565b61021a61021536600461192e565b610ee1565b60408051928352602083019190915201610102565b6100e161023d36600461175c565b611074565b60006001600160e01b031982166380e9fe1560e01b148061026757506102678261109d565b92915050565b6000836001600160a01b03166333a9320361028885856110d2565b6040518263ffffffff1660e01b81526004016102a4919061198c565b602060405180830381865afa1580156102c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e5919061199f565b949350505050565b6102fe6102f9836119c0565b611161565b6000610310604083016020840161175c565b9050600061032f61032185806119cc565b61032a906119ec565b6111d1565b9150600290506103a1836001600160a01b0316635a70a2836040518163ffffffff1660e01b8152600401602060405180830381865afa158015610376573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039a91906119f8565b848461026d565b60028111156103b2576103b26113ba565b036103d057604051633c42e29760e11b815260040160405180910390fd5b60408051600380825260808201909252600091602082016060803683370190505090506370c8db7160e01b8160008151811061040e5761040e611a15565b60200260200101906001600160e01b03191690816001600160e01b0319168152505063331f761f60e01b8160018151811061044b5761044b611a15565b60200260200101906001600160e01b03191690816001600160e01b0319168152505063ca7cee2f60e01b8160028151811061048857610488611a15565b6001600160e01b0319909216602092830291909101909101526040516307e78cc160e21b81526000906001600160a01b03851690631f9e3304906104d0908590600401611a2b565b600060405180830381865afa1580156104ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105159190810190611a89565b90508060008151811061052a5761052a611a15565b60200260200101511561061357600080856001600160a01b031663d1958f2c6040518163ffffffff1660e01b81526004016040805180830381865afa158015610577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059b9190611b47565b915091508163ffffffff164210806105d7575063ffffffff81166105c56080890160608a01611b81565b6105d59063ffffffff1642611b9e565b115b156106105760405163a01a0f1b60e01b815242600482015263ffffffff8084166024830152821660448201526064015b60405180910390fd5b50505b8060018151811061062657610626611a15565b60200260200101511561072857600080856001600160a01b031662eb6ac76040518163ffffffff1660e01b81526004016040805180830381865afa158015610672573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106969190611b47565b909250905063ffffffff82166106b26080890160608a01611b81565b63ffffffff1610806106de575063ffffffff81166106d66080890160608a01611b81565b63ffffffff16115b15610725576106f36080880160608901611b81565b60405163420ba8b160e11b815263ffffffff918216600482015281841660248201529082166044820152606401610607565b50505b8060028151811061073b5761073b611a15565b60200260200101511561080e576000806001600160a01b03861663ca7cee2f61076a60608a0160408b0161175c565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526024810188905260208b01356044820152606401600060405180830381865afa1580156107bf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107e79190810190611bc4565b915091508161080b578060405163b0df8c7b60e01b81526004016106079190611c4d565b50505b505050505050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361085f57604051637170f3db60e01b815260040160405180910390fd5b61086882611161565b60008061087884600001516111d1565b60405163be2b9a7960e01b81526001600160a01b038084166004830152602482018390529294509092509084169063be2b9a7990604401600060405180830381600087803b1580156108c957600080fd5b505af115801561080b573d6000803e3d6000fd5b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361092657604051637170f3db60e01b815260040160405180910390fd5b610932848484846111f5565b50505050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361098157604051637170f3db60e01b815260040160405180910390fd5b61099761098e83806119cc565b6102f9906119c0565b6000806109b16109a785806119cc565b61032190806119cc565b6040516301ffc9a760e01b8152636459d68d60e11b600482015291935091506001600160a01b038316906301ffc9a790602401602060405180830381865afa158015610a01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a259190611c60565b15610adc576000806001600160a01b03841663c8b3ad1a8885610a488a806119cc565b602001358a8a6040518663ffffffff1660e01b8152600401610a6e959493929190611e5c565b6000604051808303816000875af1158015610a8d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ab59190810190611bc4565b9150915081610ad9578060405163b65087ad60e01b81526004016106079190611c4d565b50505b5050505050565b6040516301ffc9a760e01b81526394d008ef60e01b60048201526000906001600160a01b038316906301ffc9a790602401602060405180830381865afa158015610b31573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102679190611c60565b80516000906001600160e01b0319166339d690a360e11b14610bc25781517f73ad2146b3d3a286642c794379d750360a2d53a3459a11b3e5d6cc900f55f44a5b604051632e82eea160e11b81526001600160e01b0319928316600482015291166024820152604401610607565b610267610bce836112cc565b6112e6565b6000836001600160a01b0316631e347878610bed856112e6565b6040516001600160e01b031960e084901b16815260048101919091526001600160a01b0385166024820152604401602060405180830381865afa158015610c38573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e59190611f55565b6040805160808101825260009181018281526060808301528152602081018290526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610cc657604051637170f3db60e01b815260040160405180910390fd5b610cd26102f9866119c0565b600080610ce261032188806119cc565b91509150856001600160a01b031663f46c73c66040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4891906119f8565b6001600160a01b0316826001600160a01b031614610d8c576040516307a3e91560e41b81526001600160a01b03808816600483015283166024820152604401610607565b6040518060400160405280610da188846110d2565b81526020898101359101529250610db7866112e6565b93506000610dc630888461026d565b6002811115610dd757610dd76113ba565b03610e5057604080516000815260208101918290526394d008ef60e01b9091526001600160a01b038716906394d008ef90610e19908890859060248101611f6e565b600060405180830381600087803b158015610e3357600080fd5b505af1158015610e47573d6000803e3d6000fd5b50505050610e6e565b604080516000815260208101909152610e6e908490309088906111f5565b5050935093915050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610ec157604051637170f3db60e01b815260040160405180910390fd5b610edc838383604051806020016040528060008152506111f5565b505050565b600080610ef06102f9876119c0565b610f00604086016020870161175c565b6040516301ffc9a760e01b8152633573c0bd60e21b60048201526001600160a01b0391909116906301ffc9a790602401602060405180830381865afa158015610f4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f719190611c60565b15611064576000610f8561032188806119cc565b9150610f999050604087016020880161175c565b6001600160a01b031663d5cf02f4610fb76060890160408a0161175c565b8360208b0135610fcd60808c0160608d01611b81565b6040516001600160e01b031960e087901b1681526001600160a01b0390941660048501526024840192909252604483015263ffffffff1660648201526084810188905260a4810187905260c4016040805180830381865afa158015611036573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105a9190611f9e565b925092505061106b565b5060009050805b94509492505050565b61107d81610ae3565b61109a576040516347ac7e5360e11b815260040160405180910390fd5b50565b60006001600160e01b031982166335c66d6d60e01b148061026757506301ffc9a760e01b6001600160e01b0319831614610267565b60408051808201909152600081526060602082015260405180604001604052806111197f73ad2146b3d3a286642c794379d750360a2d53a3459a11b3e5d6cc900f55f44a90565b6001600160e01b0319168152604080516001600160a01b03871660208281019190915291810186905291019060600160408051601f1981840301815291905290529392505050565b8051516001600160e01b0319166339d690a360e11b146111a4578051517f73ad2146b3d3a286642c794379d750360a2d53a3459a11b3e5d6cc900f55f44a610b95565b806020015160011461109a5780602001516040516383f261dd60e01b815260040161060791815260200190565b60008082602001518060200190518101906111ec9190611fc2565b91509150915091565b6111fe84611161565b60008061120e86600001516111d1565b604051635c46a7ef60e11b815291935091506001600160a01b0383169063b88d4fde90611245908890889086908990600401611ff0565b600060405180830381600087803b15801561125f57600080fd5b505af1158015611273573d6000803e3d6000fd5b50505050836001600160a01b0316856001600160a01b03167ff65cd7509f02971efd9615ae50140cecf872cd4a266e3f6cac29f9b091fb32c788866040516112bc92919061202d565b60405180910390a3505050505050565b6000816020015180602001905181019061026791906119f8565b604080516001600160a01b038316602082015260009101604051602081830303815290604052805190602001209050919050565b80356001600160e01b03198116811461133257600080fd5b919050565b60006020828403121561134957600080fd5b6113528261131a565b9392505050565b6001600160a01b038116811461109a57600080fd5b803561133281611359565b60008060006060848603121561138e57600080fd5b833561139981611359565b925060208401356113a981611359565b929592945050506040919091013590565b634e487b7160e01b600052602160045260246000fd5b60208101600383106113f257634e487b7160e01b600052602160045260246000fd5b91905290565b60006040828403121561140a57600080fd5b50919050565b600060a0828403121561140a57600080fd5b60008060c0838503121561143557600080fd5b82356001600160401b0381111561144b57600080fd5b611457858286016113f8565b9250506114678460208501611410565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156114a8576114a8611470565b60405290565b604051601f8201601f191681016001600160401b03811182821017156114d6576114d6611470565b604052919050565b60006001600160401b038211156114f7576114f7611470565b50601f01601f191660200190565b600082601f83011261151657600080fd5b8135611529611524826114de565b6114ae565b81815284602083860101111561153e57600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561156d57600080fd5b611575611486565b90506115808261131a565b815260208201356001600160401b0381111561159b57600080fd5b6115a784828501611505565b60208301525092915050565b6000604082840312156115c557600080fd5b6115cd611486565b905081356001600160401b038111156115e557600080fd5b6115f18482850161155b565b8252506020820135602082015292915050565b6000806040838503121561161757600080fd5b82356001600160401b0381111561162d57600080fd5b611639858286016115b3565b925050602083013561164a81611359565b809150509250929050565b6000806000806080858703121561166b57600080fd5b84356001600160401b038082111561168257600080fd5b61168e888389016115b3565b9550602087013591506116a082611359565b9093506040860135906116b282611359565b909250606086013590808211156116c857600080fd5b506116d587828801611505565b91505092959194509250565b6000806000606084860312156116f657600080fd5b8335925060208401356001600160401b038082111561171457600080fd5b9085019060e0828803121561172857600080fd5b9092506040850135908082111561173e57600080fd5b50840160c0818703121561175157600080fd5b809150509250925092565b60006020828403121561176e57600080fd5b813561135281611359565b60006020828403121561178b57600080fd5b81356001600160401b038111156117a157600080fd5b6102e58482850161155b565b6000806000606084860312156117c257600080fd5b83356117cd81611359565b925060208401356117dd81611359565b9150604084013561175181611359565b60008060006060848603121561180257600080fd5b83356001600160401b0381111561181857600080fd5b611824868287016113f8565b93505060208401356117dd81611359565b60005b83811015611850578181015183820152602001611838565b838111156109325750506000910152565b60008151808452611879816020860160208601611835565b601f01601f19169290920160200192915050565b63ffffffff60e01b815116825260006020820151604060208501526102e56040850182611861565b60008151604084526118ca604085018261188d565b602093840151949093019390935250919050565b8281526040602082015260006102e560408301846118b5565b60008060006060848603121561190c57600080fd5b83356001600160401b0381111561192257600080fd5b611824868287016115b3565b600080600080610100858703121561194557600080fd5b84356001600160401b0381111561195b57600080fd5b611967878288016113f8565b9450506119778660208701611410565b939693955050505060c08201359160e0013590565b602081526000611352602083018461188d565b6000602082840312156119b157600080fd5b81516003811061135257600080fd5b600061026736836115b3565b60008235603e198336030181126119e257600080fd5b9190910192915050565b6000610267368361155b565b600060208284031215611a0a57600080fd5b815161135281611359565b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b81811015611a6d5783516001600160e01b03191683529284019291840191600101611a47565b50909695505050505050565b8051801515811461133257600080fd5b60006020808385031215611a9c57600080fd5b82516001600160401b0380821115611ab357600080fd5b818501915085601f830112611ac757600080fd5b815181811115611ad957611ad9611470565b8060051b9150611aea8483016114ae565b8181529183018401918481019088841115611b0457600080fd5b938501935b83851015611b2957611b1a85611a79565b82529385019390850190611b09565b98975050505050505050565b63ffffffff8116811461109a57600080fd5b60008060408385031215611b5a57600080fd5b8251611b6581611b35565b602084015190925061164a81611b35565b803561133281611b35565b600060208284031215611b9357600080fd5b813561135281611b35565b60008219821115611bbf57634e487b7160e01b600052601160045260246000fd5b500190565b60008060408385031215611bd757600080fd5b611be083611a79565b915060208301516001600160401b03811115611bfb57600080fd5b8301601f81018513611c0c57600080fd5b8051611c1a611524826114de565b818152866020838501011115611c2f57600080fd5b611c40826020830160208601611835565b8093505050509250929050565b6020815260006113526020830184611861565b600060208284031215611c7257600080fd5b61135282611a79565b60008235603e19833603018112611c9157600080fd5b90910192915050565b6001600160e01b0319611cac8261131a565b16825260006020820135601e19833603018112611cc857600080fd5b820180356001600160401b03811115611ce057600080fd5b803603841315611cef57600080fd5b60406020860152806040860152806020830160608701376000606082870101526060601f19601f8301168601019250505092915050565b818352600060208085019450826000805b86811015611d9d57823560018110611d4d578283fd5b885282840135611d5c81611359565b6001600160a01b0390811689860152604084810135908a015260609081850135611d8581611359565b16908901526080978801979290920191600101611d37565b50959695505050505050565b60008135601e19833603018112611dbf57600080fd5b820180356001600160401b03811115611dd757600080fd5b8060071b3603841315611de957600080fd5b60c08552611dfe60c086018260208501611d26565b9150506020830135602085015260408301356040850152611e216060840161136e565b6001600160a01b0316606085015260808381013590850152611e4560a0840161136e565b6001600160a01b03811660a0860152509392505050565b85815284602082015283604082015260a060608201526000611e7e8485611c7b565b60e060a0840152611e8f8182611c7b565b6040610180850152611ea56101c0850182611c9a565b905060208201356101a0850152602086013560c0850152604086013560e0850152611ed26060870161136e565b6001600160a01b0381166101008601529150611ef060808701611b76565b63ffffffff81166101208601529150611f0b60a08701611b76565b63ffffffff81166101408601529150611f2760c0870187611c7b565b848203609f19016101608601529150611f408183611c9a565b9150508281036080840152611b298185611da9565b600060208284031215611f6757600080fd5b5051919050565b60018060a01b0384168152826020820152606060408201526000611f956060830184611861565b95945050505050565b60008060408385031215611fb157600080fd5b505080516020909101519092909150565b60008060408385031215611fd557600080fd5b8251611fe081611359565b6020939093015192949293505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061202390830184611861565b9695505050505050565b60408152600061204060408301856118b5565b8281036020840152611f95818561186156fea2646970667358221220d20f9c2dd76b541fe4ae1e40fc1432fda216c30bdfbc91a7d012e4895e4bef8d64736f6c634300080d0033";

type ERC721WarperControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721WarperControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721WarperController__factory extends ContractFactory {
  constructor(...args: ERC721WarperControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721WarperController> {
    return super.deploy(overrides || {}) as Promise<ERC721WarperController>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721WarperController {
    return super.attach(address) as ERC721WarperController;
  }
  override connect(signer: Signer): ERC721WarperController__factory {
    return super.connect(signer) as ERC721WarperController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721WarperControllerInterface {
    return new utils.Interface(_abi) as ERC721WarperControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721WarperController {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721WarperController;
  }
}
