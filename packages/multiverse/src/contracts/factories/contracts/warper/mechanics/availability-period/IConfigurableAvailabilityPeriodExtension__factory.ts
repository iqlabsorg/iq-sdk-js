/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IConfigurableAvailabilityPeriodExtension,
  IConfigurableAvailabilityPeriodExtensionInterface,
} from "../../../../../contracts/warper/mechanics/availability-period/IConfigurableAvailabilityPeriodExtension";

const _abi = [
  {
    inputs: [],
    name: "InvalidAvailabilityPeriodEnd",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAvailabilityPeriodStart",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentTime",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "availabilityPeriodStart",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "availabilityPeriodEnd",
        type: "uint32",
      },
    ],
    name: "WarperIsNotAvailableForRenting",
    type: "error",
  },
  {
    inputs: [],
    name: "__availabilityPeriodEnd",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "__availabilityPeriodRange",
    outputs: [
      {
        internalType: "uint32",
        name: "availabilityPeriodStart",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "availabilityPeriodEnd",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "__availabilityPeriodStart",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "availabilityPeriodEnd",
        type: "uint32",
      },
    ],
    name: "__setAvailabilityPeriodEnd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "availabilityPeriodStart",
        type: "uint32",
      },
    ],
    name: "__setAvailabilityPeriodStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IConfigurableAvailabilityPeriodExtension__factory {
  static readonly abi = _abi;
  static createInterface(): IConfigurableAvailabilityPeriodExtensionInterface {
    return new utils.Interface(
      _abi
    ) as IConfigurableAvailabilityPeriodExtensionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IConfigurableAvailabilityPeriodExtension {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IConfigurableAvailabilityPeriodExtension;
  }
}
