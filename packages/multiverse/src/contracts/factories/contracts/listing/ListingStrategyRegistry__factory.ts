/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ListingStrategyRegistry,
  ListingStrategyRegistryInterface,
} from "../../../contracts/listing/ListingStrategyRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidListingControllerInterface",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "strategyId",
        type: "bytes4",
      },
    ],
    name: "ListingStrategyIsAlreadyRegistered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "provided",
        type: "bytes4",
      },
      {
        internalType: "bytes4",
        name: "required",
        type: "bytes4",
      },
    ],
    name: "ListingStrategyMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "strategyId",
        type: "bytes4",
      },
    ],
    name: "UnregisteredListingStrategy",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "strategyId",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newController",
        type: "address",
      },
    ],
    name: "ListingStrategyControllerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "strategyId",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "ListingStrategyRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "strategyId",
        type: "bytes4",
      },
    ],
    name: "checkRegisteredListingStrategy",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "acl",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "strategyId",
        type: "bytes4",
      },
    ],
    name: "isRegisteredListingStrategy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "strategyId",
        type: "bytes4",
      },
    ],
    name: "listingController",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "strategyId",
        type: "bytes4",
      },
    ],
    name: "listingStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "controller",
            type: "address",
          },
        ],
        internalType: "struct IListingStrategyRegistry.StrategyConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "strategyId",
        type: "bytes4",
      },
      {
        components: [
          {
            internalType: "address",
            name: "controller",
            type: "address",
          },
        ],
        internalType: "struct IListingStrategyRegistry.StrategyConfig",
        name: "config",
        type: "tuple",
      },
    ],
    name: "registerListingStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "strategyId",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "setListingController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b5060006200002460016200008b565b905080156200003d576000805461ff0019166101001790555b801562000084576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50620001ac565b60008054610100900460ff161562000124578160ff166001148015620000c45750620000c2306200019d60201b620008381760201c565b155b6200011c5760405162461bcd60e51b815260206004820152602e60248201526000805160206200157f83398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b506000919050565b60005460ff808416911610620001835760405162461bcd60e51b815260206004820152602e60248201526000805160206200157f83398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000113565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b60805161139b620001e4600039600081816102440152818161028d0152818161046b015281816104ab015261053e015261139b6000f3fe6080604052600436106100915760003560e01c806352d9a2c91161005957806352d9a2c914610143578063c4d66de81461017b578063c8f249cc1461019b578063c94d3be6146101bb578063d6324606146101db57600080fd5b80631582016d146100965780633659cfe6146100cb578063441e3fc6146100ed5780634f1ef2861461010d57806352d1902d14610120575b600080fd5b3480156100a257600080fd5b506100b66100b1366004610f99565b610213565b60405190151581526020015b60405180910390f35b3480156100d757600080fd5b506100eb6100e6366004610fcb565b61023a565b005b3480156100f957600080fd5b506100eb610108366004610fe8565b610322565b6100eb61011b36600461103f565b610461565b34801561012c57600080fd5b50610135610531565b6040519081526020016100c2565b34801561014f57600080fd5b5061016361015e366004610f99565b6105e4565b60405190516001600160a01b031681526020016100c2565b34801561018757600080fd5b506100eb610196366004610fcb565b610633565b3480156101a757600080fd5b506100eb6101b6366004611103565b6106c3565b3480156101c757600080fd5b506100eb6101d6366004610f99565b6107d3565b3480156101e757600080fd5b506101fb6101f6366004610f99565b610805565b6040516001600160a01b0390911681526020016100c2565b6001600160e01b0319166000908152609860205260409020546001600160a01b0316151590565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361028b5760405162461bcd60e51b81526004016102829061113c565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166102d460008051602061131f833981519152546001600160a01b031690565b6001600160a01b0316146102fa5760405162461bcd60e51b815260040161028290611188565b61030381610847565b6040805160008082526020820190925261031f918391906108c4565b50565b6097546001600160a01b03166001600160a01b03166312d9a6ad6000336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b15801561038457600080fd5b505afa158015610398573d6000803e3d6000fd5b506103b592508491506103b090506020840184610fcb565b610a34565b6103be82610213565b156103e8576040516301dfbfcd60e11b81526001600160e01b031983166004820152602401610282565b6001600160e01b031982166000908152609860205260409020819061040d82826111d4565b5061041d90506020820182610fcb565b6001600160a01b0316826001600160e01b0319167fd4617075a3f4d736889329108102247ce46fae9247c3be2faa7dca3d4d59c6c460405160405180910390a35050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104a95760405162461bcd60e51b81526004016102829061113c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104f260008051602061131f833981519152546001600160a01b031690565b6001600160a01b0316146105185760405162461bcd60e51b815260040161028290611188565b61052182610847565b61052d828260016108c4565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105d15760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610282565b5060008051602061131f83398151915290565b604080516020810190915260008152816105fd816107d3565b50506001600160e01b031916600090815260986020908152604091829020825191820190925290546001600160a01b0316815290565b600061063f6001610b12565b90508015610657576000805461ff0019166101001790555b61065f610b9a565b609780546001600160a01b0319166001600160a01b038416179055801561052d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6097546001600160a01b03166001600160a01b03166312d9a6ad7f060c8eced3c6b422fe5573c862b67b9f6e25a3fc7d9543b14f7aee77b138e70d336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b15801561074457600080fd5b505afa158015610758573d6000803e3d6000fd5b5050505081610766816107d3565b6107708383610a34565b6001600160e01b0319831660008181526098602052604080822080546001600160a01b0319166001600160a01b03871690811790915590519092917f809a4d189cd54182a3cd3512e88f54fcbc7a8e56c4ebdd67d37e5985a521e70591a3505050565b6107dc81610213565b61031f57604051631e34d40b60e01b81526001600160e01b031982166004820152602401610282565b600081610811816107d3565b50506001600160e01b0319166000908152609860205260409020546001600160a01b031690565b6001600160a01b03163b151590565b6097546001600160a01b03166001600160a01b03166312d9a6ad6000336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b1580156108a957600080fd5b505afa1580156108bd573d6000803e3d6000fd5b5050505050565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156108fc576108f783610c07565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610956575060408051601f3d908101601f19168201909252610953918101906111fd565b60015b6109b95760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610282565b60008051602061131f8339815191528114610a285760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610282565b506108f7838383610ca3565b610a4e6001600160a01b0382166301ff9c1f60e11b610cce565b610a6b57604051637a0825c160e11b815260040160405180910390fd5b6000816001600160a01b031663492f4e186040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acf9190611216565b90506001600160e01b0319808216908416146108f75760405163dc5b665760e01b81526001600160e01b0319808316600483015284166024820152604401610282565b60008054610100900460ff1615610b59578160ff166001148015610b355750303b155b610b515760405162461bcd60e51b815260040161028290611233565b506000919050565b60005460ff808416911610610b805760405162461bcd60e51b815260040161028290611233565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff16610c055760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610282565b565b6001600160a01b0381163b610c745760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610282565b60008051602061131f83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610cac83610cf3565b600082511180610cb95750805b156108f757610cc88383610d33565b50505050565b6000610cd983610e27565b8015610cea5750610cea8383610e5a565b90505b92915050565b610cfc81610c07565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b610d9b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610282565b600080846001600160a01b031684604051610db691906112ad565b600060405180830381855af49150503d8060008114610df1576040519150601f19603f3d011682016040523d82523d6000602084013e610df6565b606091505b5091509150610e1e828260405180606001604052806027815260200161133f60279139610f43565b95945050505050565b6000610e3a826301ffc9a760e01b610e5a565b8015610ced5750610e53826001600160e01b0319610e5a565b1592915050565b604080516001600160e01b0319831660248083019190915282518083039091018152604490910182526020810180516001600160e01b03166301ffc9a760e01b179052905160009190829081906001600160a01b0387169061753090610ec19086906112ad565b6000604051808303818686fa925050503d8060008114610efd576040519150601f19603f3d011682016040523d82523d6000602084013e610f02565b606091505b5091509150602081511015610f1d5760009350505050610ced565b818015610f39575080806020019051810190610f3991906112c9565b9695505050505050565b60608315610f52575081610f7c565b825115610f625782518084602001fd5b8160405162461bcd60e51b815260040161028291906112eb565b9392505050565b6001600160e01b03198116811461031f57600080fd5b600060208284031215610fab57600080fd5b8135610f7c81610f83565b6001600160a01b038116811461031f57600080fd5b600060208284031215610fdd57600080fd5b8135610f7c81610fb6565b6000808284036040811215610ffc57600080fd5b833561100781610f83565b92506020601f198201121561101b57600080fd5b506020830190509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561105257600080fd5b823561105d81610fb6565b9150602083013567ffffffffffffffff8082111561107a57600080fd5b818501915085601f83011261108e57600080fd5b8135818111156110a0576110a0611029565b604051601f8201601f19908116603f011681019083821181831017156110c8576110c8611029565b816040528281528860208487010111156110e157600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806040838503121561111657600080fd5b823561112181610f83565b9150602083013561113181610fb6565b809150509250929050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b81356111df81610fb6565b81546001600160a01b0319166001600160a01b039190911617905550565b60006020828403121561120f57600080fd5b5051919050565b60006020828403121561122857600080fd5b8151610f7c81610f83565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60005b8381101561129c578181015183820152602001611284565b83811115610cc85750506000910152565b600082516112bf818460208701611281565b9190910192915050565b6000602082840312156112db57600080fd5b81518015158114610f7c57600080fd5b602081526000825180602084015261130a816040850160208701611281565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212202dae0f3537428f2f9eb597b9ba23d643a835d6d7b4be9c862c9a74394f2872d864736f6c634300080d0033496e697469616c697a61626c653a20636f6e747261637420697320616c726561";

type ListingStrategyRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ListingStrategyRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ListingStrategyRegistry__factory extends ContractFactory {
  constructor(...args: ListingStrategyRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ListingStrategyRegistry> {
    return super.deploy(overrides || {}) as Promise<ListingStrategyRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ListingStrategyRegistry {
    return super.attach(address) as ListingStrategyRegistry;
  }
  override connect(signer: Signer): ListingStrategyRegistry__factory {
    return super.connect(signer) as ListingStrategyRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ListingStrategyRegistryInterface {
    return new utils.Interface(_abi) as ListingStrategyRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ListingStrategyRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ListingStrategyRegistry;
  }
}
