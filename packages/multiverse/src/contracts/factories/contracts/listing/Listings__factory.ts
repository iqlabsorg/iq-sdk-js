/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Listings,
  ListingsInterface,
} from "../../../contracts/listing/Listings";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "period",
        type: "uint32",
      },
    ],
    name: "InvalidLockPeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "ListingIsNotPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "ListingIsNotRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "ListingIsPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "NotListed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "strategyId",
        type: "bytes4",
      },
    ],
    name: "UnsupportedListingStrategy",
    type: "error",
  },
  {
    inputs: [],
    name: "FIXED_PRICE",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61130e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100875760003560e01c80637bc13e01116100655780637bc13e01146100de578063869cdfc31461010c578063d6628cd41461014c578063f7596f991461016c57600080fd5b806368ec67e71461008c5780636f8beb0e146100a15780637608f874146100cb575b600080fd5b61009f61009a366004610ce1565b61017f565b005b6100b46100af366004610d28565b6101b1565b6040516100c2929190610dd0565b60405180910390f35b6100b46100d9366004610eff565b6101eb565b8180156100ea57600080fd5b506100fe6100f93660046110f3565b610209565b6040519081526020016100c2565b6101337fce9777391fa247355879fc92b08060840e80f62fb5e0475cfb28c8a89bfff98381565b6040516001600160e01b031990911681526020016100c2565b81801561015857600080fd5b5061009f610167366004610ce1565b6103d2565b6100b461017a366004610d28565b610592565b61018982826105be565b6101ad5760405163775bac4b60e11b81526004810182905260240160405180910390fd5b5050565b6001600160a01b0383166000908152600685016020526040902060609081906101dd90879086866105e4565b915091505b94509492505050565b6060806101fd856002810186866105e4565b91509150935093915050565b8154600190810180845560008181526004850160209081526040909120845180518051835463ffffffff191660e09190911c17835580840151805195968896949593948694859361025f93850192910190610b7e565b5050506020918201516002919091015582810151805160038401805463ffffffff191660e09290921c919091178155818301518051929391926102a89260048701920190610b7e565b505050604082015160059190910180546060840151608085015160a086015160c087015160e0909701516001600160a01b039096166001600160c01b031990941693909317600160a01b63ffffffff938416021764ffffffffff60c01b1916600160c01b9183169190910260ff60e01b191617600160e01b921515929092029190911761ffff60e81b1916600160e81b9415159490940260ff60f01b191693909317600160f01b9215159290920291909117905561036d90600285019083906109bf16565b506040808301516001600160a01b03166000908152600585016020522061039490826109bf565b506103cb818460060160006103ac86600001516109d2565b6001600160a01b031681526020810191909152604001600020906109bf565b5092915050565b600081815260048301602052604080822060058101548251608081018452825460e01b6001600160e01b0319169381019384526001830180546001600160a01b0390931695946104c694929384928491606085019190610431906111f7565b80601f016020809104026020016040519081016040528092919081815260200182805461045d906111f7565b80156104aa5780601f1061047f576101008083540402835291602001916104aa565b820191906000526020600020905b81548152906001019060200180831161048d57829003601f168201915b50505050508152505081526020016002820154815250506109d2565b90506104d560028501846109f0565b506001600160a01b038216600090815260058501602052604090206104fa90846109f0565b506001600160a01b0381166000908152600685016020526040902061051f90846109f0565b5060008381526004850160205260408120805463ffffffff19168155908181818161054d6001830182610c02565b505060006002929092018290555060038301805463ffffffff19168155906105786004850182610c02565b50505060050180546001600160f81b031916905550505050565b6001600160a01b0383166000908152600585016020526040902060609081906101dd90879086866105e4565b60008181526004830160205260409020600501546001600160a01b031615155b92915050565b60608060006105f2866109fc565b905080851061063f5760408051600080825260208201818152828401909352909190610634565b610621610c3f565b8152602001906001900390816106195790505b5092509250506101e2565b6106498582611247565b84111561065d5761065a8582611247565b93505b60008467ffffffffffffffff81111561067857610678610f2b565b6040519080825280602002602001820160405280156106b157816020015b61069e610c3f565b8152602001906001900390816106965790505b50905060008567ffffffffffffffff8111156106cf576106cf610f2b565b6040519080825280602002602001820160405280156106f8578160200160208202803683370190505b50905060005b868110156109b15761071a610713828a61125e565b8a90610a06565b82828151811061072c5761072c611276565b60200260200101818152505089600401600083838151811061075057610750611276565b6020908102919091018101518252810191909152604090810160002081516101808101909252805460e01b6001600160e01b0319166101408301908152600182018054849261010084019285928492918491610160880191906107b2906111f7565b80601f01602080910402602001604051908101604052809291908181526020018280546107de906111f7565b801561082b5780601f106108005761010080835404028352916020019161082b565b820191906000526020600020905b81548152906001019060200180831161080e57829003601f168201915b50505050508152505081526020016002820154815250508152602001600382016040518060400160405290816000820160009054906101000a900460e01b6001600160e01b0319166001600160e01b0319168152602001600182018054610891906111f7565b80601f01602080910402602001604051908101604052809291908181526020018280546108bd906111f7565b801561090a5780601f106108df5761010080835404028352916020019161090a565b820191906000526020600020905b8154815290600101906020018083116108ed57829003601f168201915b505050919092525050508152600591909101546001600160a01b038116602083015263ffffffff600160a01b820481166040840152600160c01b820416606083015260ff600160e01b8204811615156080840152600160e81b82048116151560a0840152600160f01b90910416151560c090910152835184908390811061099357610993611276565b602002602001018190525080806109a99061128c565b9150506106fe565b509890975095505050505050565b60006109cb8383610a12565b9392505050565b60008160000151602001518060200190518101906105de91906112a5565b60006109cb8383610a61565b60006105de825490565b60006109cb8383610b54565b6000818152600183016020526040812054610a59575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105de565b5060006105de565b60008181526001830160205260408120548015610b4a576000610a85600183611247565b8554909150600090610a9990600190611247565b9050818114610afe576000866000018281548110610ab957610ab9611276565b9060005260206000200154905080876000018481548110610adc57610adc611276565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610b0f57610b0f6112c2565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506105de565b60009150506105de565b6000826000018281548110610b6b57610b6b611276565b9060005260206000200154905092915050565b828054610b8a906111f7565b90600052602060002090601f016020900481019282610bac5760008555610bf2565b82601f10610bc557805160ff1916838001178555610bf2565b82800160010185558215610bf2579182015b82811115610bf2578251825591602001919060010190610bd7565b50610bfe929150610ccc565b5090565b508054610c0e906111f7565b6000825580601f10610c1e575050565b601f016020900490600052602060002090810190610c3c9190610ccc565b50565b604080516101808101909152600061014082018181526060610160840152610100830190815261012083019190915281908152602001610c9c604051806040016040528060006001600160e01b0319168152602001606081525090565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c09091015290565b5b80821115610bfe5760008155600101610ccd565b60008060408385031215610cf457600080fd5b50508035926020909101359150565b6001600160a01b0381168114610c3c57600080fd5b8035610d2381610d03565b919050565b60008060008060808587031215610d3e57600080fd5b843593506020850135610d5081610d03565b93969395505050506040820135916060013590565b63ffffffff60e01b81511682526000602080830151604082860152805180604087015260005b81811015610da757828101840151878201606001528301610d8b565b81811115610db9576000606083890101525b50601f01601f191694909401606001949350505050565b6040808252835182820181905260009190606090818501906020808901865b83811015610e0b57815185529382019390820190600101610def565b50508683038188015287518084528184019250600581901b8401820189830160005b83811015610eee57601f198784030186528151610100815181865280518c83880152610e5d610140880182610d65565b92505087810151610120870152508682015185820388870152610e808282610d65565b9150508a820151610e9b8c8701826001600160a01b03169052565b508982015163ffffffff908116868c01526080808401519091169086015260a08083015115159086015260c08083015115159086015260e091820151151591909401529484019490840190600101610e2d565b50909b9a5050505050505050505050565b600080600060608486031215610f1457600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610f6457610f64610f2b565b60405290565b604051610100810167ffffffffffffffff81118282101715610f6457610f64610f2b565b604051601f8201601f1916810167ffffffffffffffff81118282101715610fb757610fb7610f2b565b604052919050565b600060408284031215610fd157600080fd5b610fd9610f41565b905081356001600160e01b031981168114610ff357600080fd5b815260208281013567ffffffffffffffff8082111561101157600080fd5b818501915085601f83011261102557600080fd5b81358181111561103757611037610f2b565b611049601f8201601f19168501610f8e565b9150808252868482850101111561105f57600080fd5b80848401858401376000908201840152918301919091525092915050565b60006040828403121561108f57600080fd5b611097610f41565b9050813567ffffffffffffffff8111156110b057600080fd5b6110bc84828501610fbf565b8252506020820135602082015292915050565b803563ffffffff81168114610d2357600080fd5b80358015158114610d2357600080fd5b6000806040838503121561110657600080fd5b82359150602083013567ffffffffffffffff8082111561112557600080fd5b90840190610100828703121561113a57600080fd5b611142610f6a565b82358281111561115157600080fd5b61115d8882860161107d565b82525060208301358281111561117257600080fd5b61117e88828601610fbf565b60208301525061119060408401610d18565b60408201526111a1606084016110cf565b60608201526111b2608084016110cf565b60808201526111c360a084016110e3565b60a08201526111d460c084016110e3565b60c08201526111e560e084016110e3565b60e08201528093505050509250929050565b600181811c9082168061120b57607f821691505b60208210810361122b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561125957611259611231565b500390565b6000821982111561127157611271611231565b500190565b634e487b7160e01b600052603260045260246000fd5b60006001820161129e5761129e611231565b5060010190565b6000602082840312156112b757600080fd5b81516109cb81610d03565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220665dd2183baa45f77b6a3401f8277c57d775853cf98cac0e78e67784792628ea64736f6c634300080d0033";

type ListingsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ListingsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Listings__factory extends ContractFactory {
  constructor(...args: ListingsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Listings> {
    return super.deploy(overrides || {}) as Promise<Listings>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Listings {
    return super.attach(address) as Listings;
  }
  override connect(signer: Signer): Listings__factory {
    return super.connect(signer) as Listings__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ListingsInterface {
    return new utils.Interface(_abi) as ListingsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Listings {
    return new Contract(address, _abi, signerOrProvider) as Listings;
  }
}
