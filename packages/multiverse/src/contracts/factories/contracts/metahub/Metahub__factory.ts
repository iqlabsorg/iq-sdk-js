/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Metahub,
  MetahubInterface,
} from "../../../contracts/metahub/Metahub";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AssetIsLocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotAssetLister",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotRenter",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidWarperInterface",
    type: "error",
  },
  {
    inputs: [],
    name: "ListingIsNotPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "ListingIsPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "NotListed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "UnsupportedAsset",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetClass",
        type: "bytes4",
      },
    ],
    name: "UnsupportedAssetClass",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "strategyId",
        type: "bytes4",
      },
    ],
    name: "UnsupportedListingStrategy",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provided",
        type: "address",
      },
      {
        internalType: "address",
        name: "required",
        type: "address",
      },
    ],
    name: "WarperHasIncorrectMetahubReference",
    type: "error",
  },
  {
    inputs: [],
    name: "WarperIsNotPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "WarperIsNotRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "WarperIsPaused",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lister",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "unlocksAt",
        type: "uint32",
      },
    ],
    name: "AssetDelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lister",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "strategy",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Listings.Params",
        name: "params",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "maxLockPeriod",
        type: "uint32",
      },
    ],
    name: "AssetListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "rentalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Assets.Asset",
        name: "warpedAsset",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "startTime",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "endTime",
        type: "uint32",
      },
    ],
    name: "AssetRented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lister",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
    ],
    name: "AssetWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "ListingPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "ListingUnpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ProtocolEarned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "rentalFeePercent",
        type: "uint16",
      },
    ],
    name: "ProtocolRentalFeeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UniverseEarned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum IPaymentManager.EarningType",
        name: "earningType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserEarned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "WarperDeregistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "WarperPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "warper",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "original",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "assetClass",
        type: "bytes4",
      },
    ],
    name: "WarperRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "WarperUnpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "original",
        type: "address",
      },
    ],
    name: "assetListingCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "original",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "assetListings",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "lister",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "maxLockPeriod",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lockedTill",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "immediatePayout",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "delisted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
        ],
        internalType: "struct Listings.Listing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "class",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Assets.AssetId",
        name: "warpedAssetId",
        type: "tuple",
      },
    ],
    name: "assetRentalStatus",
    outputs: [
      {
        internalType: "enum Rentings.RentalStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "original",
        type: "address",
      },
    ],
    name: "assetWarperCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "original",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "assetWarpers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "original",
            type: "address",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
          {
            internalType: "contract IWarperController",
            name: "controller",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "universeId",
            type: "uint256",
          },
        ],
        internalType: "struct Warpers.Warper[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Accounts.Balance[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "warpedCollectionId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
    ],
    name: "collectionRentedValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "delistAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "deregisterWarper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "warper",
            type: "address",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "rentalPeriod",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
        ],
        internalType: "struct Rentings.Params",
        name: "rentingParams",
        type: "tuple",
      },
    ],
    name: "estimateRent",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "total",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "protocolFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listerBaseFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listerPremium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "universeBaseFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "universePremium",
            type: "uint256",
          },
        ],
        internalType: "struct Rentings.RentalFees",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IWarperPresetFactory",
            name: "warperPresetFactory",
            type: "address",
          },
          {
            internalType: "contract IAssetClassRegistry",
            name: "assetClassRegistry",
            type: "address",
          },
          {
            internalType: "contract IListingStrategyRegistry",
            name: "listingStrategyRegistry",
            type: "address",
          },
          {
            internalType: "contract IUniverseRegistry",
            name: "universeRegistry",
            type: "address",
          },
          {
            internalType: "contract IACL",
            name: "acl",
            type: "address",
          },
          {
            internalType: "contract IERC20Upgradeable",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "rentalFeePercent",
            type: "uint16",
          },
        ],
        internalType: "struct Metahub.MetahubInitParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isWarperAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "strategy",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Listings.Params",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint32",
        name: "maxLockPeriod",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "immediatePayout",
        type: "bool",
      },
    ],
    name: "listAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "listingCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "listingInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "lister",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "maxLockPeriod",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lockedTill",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "immediatePayout",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "delisted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
        ],
        internalType: "struct Listings.Listing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "lister",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "maxLockPeriod",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lockedTill",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "immediatePayout",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "delisted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
        ],
        internalType: "struct Listings.Listing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "pauseListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "pauseWarper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "protocolBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolBalances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Accounts.Balance[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolRentalFeePercent",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "universeId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
        ],
        internalType: "struct IWarperManager.WarperRegistrationParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "registerWarper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "warper",
            type: "address",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "rentalPeriod",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
        ],
        internalType: "struct Rentings.Params",
        name: "rentingParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxPaymentAmount",
        type: "uint256",
      },
    ],
    name: "rent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rentalId",
        type: "uint256",
      },
    ],
    name: "rentalAgreementInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "warpedAsset",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "collectionId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "startTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "endTime",
            type: "uint32",
          },
        ],
        internalType: "struct Rentings.Agreement",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rentalFeePercent",
        type: "uint16",
      },
    ],
    name: "setProtocolRentalFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedAssetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "supportedAssets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "contract IAssetController",
            name: "controller",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "contract IAssetVault",
            name: "vault",
            type: "address",
          },
        ],
        internalType: "struct Assets.AssetConfig[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "universeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
    ],
    name: "universeBalances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Accounts.Balance[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
    ],
    name: "universeWarperCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "universeWarpers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "original",
            type: "address",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
          {
            internalType: "contract IWarperController",
            name: "controller",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "universeId",
            type: "uint256",
          },
        ],
        internalType: "struct Warpers.Warper[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "unpauseListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "unpauseWarper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lister",
        type: "address",
      },
    ],
    name: "userListingCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lister",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "userListings",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "lister",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "maxLockPeriod",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lockedTill",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "immediatePayout",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "delisted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
        ],
        internalType: "struct Listings.Listing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "userRentalAgreements",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "warpedAsset",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "collectionId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "startTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "endTime",
            type: "uint32",
          },
        ],
        internalType: "struct Rentings.Agreement[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
    ],
    name: "userRentalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "warperController",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "warperInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "original",
            type: "address",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
          {
            internalType: "contract IWarperController",
            name: "controller",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "universeId",
            type: "uint256",
          },
        ],
        internalType: "struct Warpers.Warper",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "warperPresetFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "withdrawAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawProtocolFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawUniverseFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b5060006200002460016200008b565b905080156200003d576000805461ff0019166101001790555b801562000084576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50620001ac565b60008054610100900460ff161562000124578160ff166001148015620000c45750620000c2306200019d60201b62002de81760201c565b155b6200011c5760405162461bcd60e51b815260206004820152602e602482015260008051602062005fa383398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b506000919050565b60005460ff808416911610620001835760405162461bcd60e51b815260206004820152602e602482015260008051602062005fa383398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000113565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b608051615dbf620001e46000396000818161109c015281816110e501528181611382015281816113c201526115510152615dbf6000f3fe6080604052600436106102ae5760003560e01c80636eabf0bb11610175578063a75ea55d116100dc578063c55dae6311610095578063ebf03f491161006f578063ebf03f49146108d6578063f1f56a1f146108f6578063f4ba204614610923578063fee5f37f1461094357600080fd5b8063c55dae6314610878578063c7b0156014610896578063e528b081146108b657600080fd5b8063a75ea55d146107c3578063a9b07c26146107e3578063ae07477f146107f8578063b203bb9914610818578063b995dbae14610838578063c1e58a211461085857600080fd5b806388b22ef41161012e57806388b22ef4146106ee5780638c2c47141461070e5780638d92fdf31461072e5780638f36001f1461074e578063a0d18bb314610780578063a5c5ad11146107ae57600080fd5b80636eabf0bb14610602578063719a3d0b14610630578063729941351461065057806378a2c9cd1461067e5780638468d2281461069e578063882080d3146106be57600080fd5b806347c6b45e1161021957806352d1902d116101d257806352d1902d1461053e578063553b010914610553578063554310241461056857806360ca93501461059557806361b25b91146105b5578063662c1ff8146105d557600080fd5b806347c6b45e1461047d5780634bd22a1b1461049d5780634d3084d3146104bd5780634f1ef286146104eb578063506cf01e146104fe57806350f771561461051e57600080fd5b80633253d5031161026b5780633253d503146103b057806332756bcf146103d057806333a93203146103f05780633659cfe61461041d57806339b1ea381461043d57806343d7c7781461045d57600080fd5b80630e540ec0146102b357806312cd849a146102d55780631e34787814610308578063255829cf1461032857806327e235e31461035657806328df759614610383575b600080fd5b3480156102bf57600080fd5b506102d36102ce366004614092565b610963565b005b3480156102e157600080fd5b506102f56102f03660046140bd565b6109fb565b6040519081526020015b60405180910390f35b34801561031457600080fd5b506102f56103233660046140fd565b610cf0565b34801561033457600080fd5b50609854600160a01b900461ffff1660405161ffff90911681526020016102ff565b34801561036257600080fd5b5061037661037136600461412d565b610d84565b6040516102ff919061414a565b34801561038f57600080fd5b506103a361039e3660046141a2565b610da8565b6040516102ff91906141be565b3480156103bc57600080fd5b506102d36103cb36600461412d565b610edf565b3480156103dc57600080fd5b506102d36103eb366004614201565b610f43565b3480156103fc57600080fd5b5061041061040b366004614237565b611014565b6040516102ff9190614281565b34801561042957600080fd5b506102d361043836600461412d565b611092565b34801561044957600080fd5b506102f561045836600461412d565b61117a565b34801561046957600080fd5b506102d3610478366004614092565b611187565b34801561048957600080fd5b506102d36104983660046142a9565b611253565b3480156104a957600080fd5b506102f56104b836600461412d565b6112d4565b3480156104c957600080fd5b506104dd6104d83660046142eb565b6112e1565b6040516102ff929190614499565b6102d36104f9366004614680565b611378565b34801561050a57600080fd5b506102d361051936600461412d565b611448565b34801561052a57600080fd5b506102d3610539366004614092565b6114ac565b34801561054a57600080fd5b506102f5611544565b34801561055f57600080fd5b506102f56115f7565b34801561057457600080fd5b5061058861058336600461412d565b611608565b6040516102ff9190614739565b3480156105a157600080fd5b506102f56105b036600461412d565b611759565b3480156105c157600080fd5b506103766105d0366004614092565b611766565b3480156105e157600080fd5b506105f56105f0366004614092565b611780565b6040516102ff91906147b3565b34801561060e57600080fd5b5061062261061d3660046147c6565b61190c565b6040516102ff9291906147fb565b34801561063c57600080fd5b506104dd61064b3660046147c6565b6119a0565b34801561065c57600080fd5b5061067061066b3660046142eb565b611a28565b6040516102ff929190614897565b34801561068a57600080fd5b506102f56106993660046140fd565b611ab3565b3480156106aa57600080fd5b506102f56106b9366004614092565b611acb565b3480156106ca57600080fd5b506106de6106d9366004614919565b611ad8565b60405190151581526020016102ff565b3480156106fa57600080fd5b506102f561070936600461412d565b611b79565b34801561071a57600080fd5b506102d3610729366004614947565b611b86565b34801561073a57600080fd5b506102d3610749366004614092565b611d5f565b34801561075a57600080fd5b5060a3546001600160a01b03165b6040516001600160a01b0390911681526020016102ff565b34801561078c57600080fd5b506107a061079b3660046147c6565b61211d565b6040516102ff929190614959565b3480156107ba57600080fd5b506103766121a5565b3480156107cf57600080fd5b506102d36107de3660046142a9565b6121b1565b3480156107ef57600080fd5b506102f5612269565b34801561080457600080fd5b506102f56108133660046149dc565b612275565b34801561082457600080fd5b506102f5610833366004614919565b61245b565b34801561084457600080fd5b506104dd6108533660046147c6565b61247d565b34801561086457600080fd5b506102d361087336600461412d565b6124c0565b34801561088457600080fd5b506098546001600160a01b0316610768565b3480156108a257600080fd5b506102d36108b1366004614a64565b612575565b3480156108c257600080fd5b506102d36108d1366004614aa3565b612668565b3480156108e257600080fd5b506107686108f136600461412d565b612ab6565b34801561090257600080fd5b50610916610911366004614092565b612ae7565b6040516102ff9190614aee565b34801561092f57600080fd5b506102f561093e36600461412d565b612d89565b34801561094f57600080fd5b506107a061095e366004614b01565b612d96565b8061096f60a982612df7565b600082815260ad602052604090206005015482906001600160a01b0316336001600160a01b0316146109b457604051636523fa7f60e11b815260040160405180910390fd5b600083815260ad602052604090206109cb90612e30565b60405183907f62c9649045e00f9c2e96e4e578db9430301ac82a17718531f90e97e6a69202e490600090a2505050565b6000610a0d606084016040850161412d565b6001600160a01b0316336001600160a01b031614610a3e57604051635f4ecea960e11b815260040160405180910390fd5b604051630199f13960e01b815273__$e5879ada6f69714d7fc0d88dbcc568b31e$__90630199f13990610a7e90869060989060a99060a390600401614b9f565b60006040518083038186803b158015610a9657600080fd5b505af4158015610aaa573d6000803e3d6000fd5b50505050610abf83610ab93390565b84612e6c565b600080610aec8535610ad7604088016020890161412d565b610ae76060890160408a0161412d565b6130a1565b91509150600042905060006040518060c0016040528084815260200185815260200188600001358152602001886040016020810190610b2b919061412d565b6001600160a01b0316815263ffffffff84166020820152604001610b5560808a0160608b01614bc9565b610b5f9085614bfc565b63ffffffff16905260405163a3f3af0760e01b815290915060009073__$e5879ada6f69714d7fc0d88dbcc568b31e$__9063a3f3af0790610ba79060b0908690600401614c24565b602060405180830381865af4158015610bc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be89190614c9a565b60a08301518935600090815260ad60205260409020919250610c0a9190613245565b73__$e5879ada6f69714d7fc0d88dbcc568b31e$__63c017140260b0610c3660608c0160408d0161412d565b8860026040518563ffffffff1660e01b8152600401610c589493929190614cb3565b60006040518083038186803b158015610c7057600080fd5b505af4158015610c84573d6000803e3d6000fd5b50505050816040015182606001516001600160a01b0316827f76f9ffd08d0be80de00e3be8630a8aef939934c79fec4eedfb31e823e3be27bf856000015186608001518760a00151604051610cdb93929190614cd7565b60405180910390a49450505050505b92915050565b60405163ab5d399360e01b815260b060048201526001600160a01b03821660248201526044810183905260009073__$e5879ada6f69714d7fc0d88dbcc568b31e$__9063ab5d399390606401602060405180830381865af4158015610d59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7d9190614c9a565b9392505050565b6001600160a01b0381166000908152609d60205260409020606090610cea9061328d565b610de16040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051630199f13960e01b815273__$e5879ada6f69714d7fc0d88dbcc568b31e$__90630199f13990610e2190859060989060a99060a390600401614b9f565b60006040518083038186803b158015610e3957600080fd5b505af4158015610e4d573d6000803e3d6000fd5b5050609e54604051639dd6945b60e01b815273__$e5879ada6f69714d7fc0d88dbcc568b31e$__9350639dd6945b9250610e9e91869160989160a99160a3916001600160a01b031690600401614d07565b60c060405180830381865af4158015610ebb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cea9190614d43565b80610eea8133613372565b6001600160a01b038216600090815260a860205260409020610f0b906133f0565b6040516001600160a01b038316907f2a08260ffc9feb9cd743cb3dd526a959666260abda15ed904061f3babce487ba90600090a25050565b6097546001600160a01b03166001600160a01b03166312d9a6ad6000336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b158015610fa557600080fd5b505afa158015610fb9573d6000803e3d6000fd5b50506098805461ffff60a01b1916600160a01b61ffff8616908102919091179091556040519081527f1b1669b1469af2b2bb8295fdaf1c1ff4cd9d41c56dc31e80d6c67e05854f9e209250602001905060405180910390a150565b60405163029d842960e21b815260009073__$e5879ada6f69714d7fc0d88dbcc568b31e$__90630a7610a4906110519060b0908690600401614e61565b602060405180830381865af415801561106e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cea9190614e7a565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036110e35760405162461bcd60e51b81526004016110da90614e9b565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661112c600080516020615d43833981519152546001600160a01b031690565b6001600160a01b0316146111525760405162461bcd60e51b81526004016110da90614ee7565b61115b8161342d565b60408051600080825260208201909252611177918391906134aa565b50565b6000610cea60a98361361a565b8061119360a982612df7565b600082815260ad602052604090206005015482906001600160a01b0316336001600160a01b0316146111d857604051636523fa7f60e11b815260040160405180910390fd5b600083815260ad6020908152604091829020600581018054600160e81b60ff60e81b19821617918290559351600160c01b90910463ffffffff16815290926001600160a01b03169186917fc0c0619fe5bf378f25472067afca13995576b95e1351cefa4bce7c45929abe27910160405180910390a350505050565b336000908152609d60205260409081902090516334e3db7f60e21b815273__$f64f2ddc230f4d0d284eef95d6ec5afa1e$__9163d38f6dfc9161129f9190879087908790600401614f33565b60006040518083038186803b1580156112b757600080fd5b505af41580156112cb573d6000803e3d6000fd5b50505050505050565b6000610cea60998361363d565b604051631d823e1d60e21b815260a960048201526024810183905260448101829052606090819073__$23c70d15f703c3ae387c840540427b8a00$__90637608f87490606401600060405180830381865af4158015611344573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261136c91908101906150f3565b915091505b9250929050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036113c05760405162461bcd60e51b81526004016110da90614e9b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611409600080516020615d43833981519152546001600160a01b031690565b6001600160a01b03161461142f5760405162461bcd60e51b81526004016110da90614ee7565b6114388261342d565b611444828260016134aa565b5050565b806114538133613372565b6001600160a01b038216600090815260a86020526040902061147490613653565b6040516001600160a01b038316907f1eaf28a93e1ad5dabb8e3983d0abb01359e7eafa0982af55e81d715704d25f4e90600090a25050565b806114b860a982612df7565b600082815260ad602052604090206005015482906001600160a01b0316336001600160a01b0316146114fd57604051636523fa7f60e11b815260040160405180910390fd5b600083815260ad6020526040902061151490613689565b60405183907fccf05f4102545965ec08932c92c4db5980b2c27c5fc913e64756615f59e8e68990600090a2505050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146115e45760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016110da565b50600080516020615d4383398151915290565b6000611603609f6136cc565b905090565b6040805160c0810182526000808252602082018190529181018290526060808201839052608082015260a08101919091528161164560a3826136da565b6001600160a01b03838116600090815260a86020908152604091829020825160c081018452815460e081901b6001600160e01b03191682526401000000008104861693820193909352600160c01b90920460ff16151592820192909252600182015490921660608301526002810180546080840191906116c49061528d565b80601f01602080910402602001604051908101604052809291908181526020018280546116f09061528d565b801561173d5780601f106117125761010080835404028352916020019161173d565b820191906000526020600020905b81548152906001019060200180831161172057829003601f168201915b5050505050815260200160038201548152505091505b50919050565b6000610cea60a98361370c565b6000818152609c60205260409020606090610cea9061328d565b6040805161014081018252600061010082018181526060610120840181905260c0840191825260e08401839052908352602083018290529282018190529181018290526080810182905260a0810191909152600082815260b160205260409081902081516101408101909252805460e01b6001600160e01b0319166101008301908152600182018054849260c084019285928492918491610120880191906118279061528d565b80601f01602080910402602001604051908101604052809291908181526020018280546118539061528d565b80156118a05780601f10611875576101008083540402835291602001916118a0565b820191906000526020600020905b81548152906001019060200180831161188357829003601f168201915b50505091909252505050815260029190910154602091820152908252600383015490820152600482015460408201526005909101546001600160a01b038116606083015263ffffffff600160a01b820481166080840152600160c01b9091041660a09091015292915050565b604051634cf7b3fb60e01b8152606090819073__$e5879ada6f69714d7fc0d88dbcc568b31e$__90634cf7b3fb9061194f9060b090899089908990600401614cb3565b600060405180830381865af415801561196c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261199491908101906152c1565b91509150935093915050565b60405163f7596f9960e01b8152606090819073__$23c70d15f703c3ae387c840540427b8a00$__9063f7596f99906119e39060a990899089908990600401614cb3565b600060405180830381865af4158015611a00573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261199491908101906150f3565b6040516376946fcf60e01b8152609f60048201526024810183905260448101829052606090819073__$48805a21cd2d79ca776bf2c16e4893ad10$__906376946fcf90606401600060405180830381865af4158015611a8b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261136c919081019061546f565b6000828152609c60205260408120610d7d908361363d565b6000610cea60a38361372f565b600082611ae660a3826136da565b609e546001600160a01b03858116600090815260a860205260409081902060030154905163c8cb083f60e01b81526004810191909152858216602482015291169063c8cb083f90604401602060405180830381865afa158015611b4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b719190615560565b949350505050565b6000610cea60b083613748565b6000611b92600161376b565b90508015611baa576000805461ff0019166101001790555b611bb26137f8565b611bc260a083016080840161412d565b609780546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915280611bfd60c0850160a0860161412d565b6001600160a01b03168152602001611c1b60e0850160c08601614201565b61ffff908116909152815160988054602094850151909316600160a01b026001600160b01b03199093166001600160a01b0390921691909117919091179055611c669083018361412d565b60a380546001600160a01b0319166001600160a01b0392909216919091179055611c96604083016020840161412d565b609f80546001600160a01b0319166001600160a01b0392909216919091179055611cc6606083016040840161412d565b60aa80546001600160a01b0319166001600160a01b0392909216919091179055611cf6608083016060840161412d565b609e80546001600160a01b0319166001600160a01b03929092169190911790558015611444576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b600081815260ad602052604090206005015481906001600160a01b0316336001600160a01b031614611da457604051636523fa7f60e11b815260040160405180910390fd5b600082815260ad602052604080822081516101808101909252805460e01b6001600160e01b031916610140830190815260018201805484926101008401928592849291849161016088019190611df99061528d565b80601f0160208091040260200160405190810160405280929190818152602001828054611e259061528d565b8015611e725780601f10611e4757610100808354040283529160200191611e72565b820191906000526020600020905b815481529060010190602001808311611e5557829003601f168201915b50505050508152505081526020016002820154815250508152602001600382016040518060400160405290816000820160009054906101000a900460e01b6001600160e01b0319166001600160e01b0319168152602001600182018054611ed89061528d565b80601f0160208091040260200160405190810160405280929190818152602001828054611f049061528d565b8015611f515780601f10611f2657610100808354040283529160200191611f51565b820191906000526020600020905b815481529060010190602001808311611f3457829003601f168201915b505050919092525050508152600591909101546001600160a01b038116602083015263ffffffff600160a01b820481166040840152600160c01b82048116606084015260ff600160e01b830481161515608080860191909152600160e81b84048216151560a0860152600160f01b90930416151560c090930192909252820151919250908116429091161015611ffa5760405163dcfbeafb60e01b815260040160405180910390fd5b604051633598a33560e21b815260a960048201526024810184905273__$23c70d15f703c3ae387c840540427b8a00$__9063d6628cd49060440160006040518083038186803b15801561204c57600080fd5b505af4158015612060573d6000803e3d6000fd5b5050825160405163221efb0360e11b815273__$48805a21cd2d79ca776bf2c16e4893ad10$__935063443df606925061209e91609f9160040161557d565b60006040518083038186803b1580156120b657600080fd5b505af41580156120ca573d6000803e3d6000fd5b5050505080604001516001600160a01b0316837f1e5a15ab85db192d73c1e02de45c46144e19ffe3bd2ece777303173365ecb9b383600001516040516121109190615596565b60405180910390a3505050565b604051632277a89360e11b8152606090819073__$f390c19a6588bf1782f680f4e6750cf906$__906344ef5126906121609060a390899089908990600401614cb3565b600060405180830381865af415801561217d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261199491908101906155c9565b6060611603609961328d565b6097546001600160a01b03166001600160a01b03166312d9a6ad6000336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b15801561221357600080fd5b505afa158015612227573d6000803e3d6000fd5b50506040516334e3db7f60e21b815273__$f64f2ddc230f4d0d284eef95d6ec5afa1e$__925063d38f6dfc915061129f90609990879087908790600401614f33565b600061160360a9613865565b600061229361228b61228687615763565b613873565b60a390613891565b6122ab6122a360208601866157b3565b60a9906138c3565b604051631daa22cf60e11b815273__$48805a21cd2d79ca776bf2c16e4893ad10$__90633b54459e906122e790609f90899033906004016157d0565b60006040518083038186803b1580156122ff57600080fd5b505af4158015612313573d6000803e3d6000fd5b5050505060006040518061010001604052808761232f90615763565b815260200161233d8761582b565b8152602001336001600160a01b0316815263ffffffff861660208201526000604080830182905286151560608401526080830182905260a09092018190529051637bc13e0160e01b81529192509073__$23c70d15f703c3ae387c840540427b8a00$__90637bc13e01906123b89060a9908690600401615837565b602060405180830381865af41580156123d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123f99190614c9a565b905081604001516001600160a01b0316817f2aeb4abaf0fe7ca83b75bc43cd2fb6c99366bc042383e06da11e1a268b47d8ce846000015185602001518660600151604051612449939291906158e8565b60405180910390a39695505050505050565b6001600160a01b0382166000908152609d60205260408120610d7d908361363d565b6040516337c5f58760e11b8152606090819073__$23c70d15f703c3ae387c840540427b8a00$__90636f8beb0e906119e39060a990899089908990600401614cb3565b806124cb8133613372565b604051635e327ed560e01b815260a360048201526001600160a01b038316602482015273__$f390c19a6588bf1782f680f4e6750cf906$__90635e327ed59060440160006040518083038186803b15801561252557600080fd5b505af4158015612539573d6000803e3d6000fd5b50506040516001600160a01b03851692507f752612ff761620ec780457bda227d89213d24d8914934d4e45c16bcb4d2b158c9150600090a25050565b609e5484906001600160a01b0316637dc330dc82336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b1580156125cf57600080fd5b505afa1580156125e3573d6000803e3d6000fd5b5050506000868152609c60205260409081902090516334e3db7f60e21b815273__$f64f2ddc230f4d0d284eef95d6ec5afa1e$__925063d38f6dfc9161263191889088908890600401614f33565b60006040518083038186803b15801561264957600080fd5b505af415801561265d573d6000803e3d6000fd5b505050505050505050565b609e546020820135906001600160a01b0316637dc330dc82336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b1580156126c657600080fd5b505afa1580156126da573d6000803e3d6000fd5b505050506001600160a01b0383163b158061270c575061270a6001600160a01b038416630b3888fd60e31b613955565b155b1561272d5760405160016217fc1360e31b0319815260040160405180910390fd5b6000836001600160a01b031663e846a5a96040518163ffffffff1660e01b8152600401602060405180830381865afa15801561276d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127919190615924565b905061279e609f82613971565b6000846001600160a01b0316635a70a2836040518163ffffffff1660e01b8152600401602060405180830381865afa1580156127de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128029190615941565b90506001600160a01b038116301461283e57604051630391492160e41b81526001600160a01b03821660048201523060248201526044016110da565b600061284b609f84613a00565b90506000866001600160a01b031663f46c73c66040518163ffffffff1660e01b8152600401602060405180830381865afa15801561288d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128b19190615941565b905060a373__$f390c19a6588bf1782f680f4e6750cf906$__63c73a080a9091896040518060c00160405280896001600160e01b0319168152602001866001600160a01b031681526020018b604001602081019061290f919061595e565b151581526001600160a01b038816602082015260400161292f8c8061597b565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525060208c8101359101526040516001600160e01b031960e086901b168152612992939291906004016159c1565b60006040518083038186803b1580156129aa57600080fd5b505af41580156129be573d6000803e3d6000fd5b505050506129d681609f613a7b90919063ffffffff16565b612a5d57604051635fbd140f60e01b8152609f60048201526001600160e01b0319851660248201526001600160a01b038216604482015273__$48805a21cd2d79ca776bf2c16e4893ad10$__90635fbd140f9060640160006040518083038186803b158015612a4457600080fd5b505af4158015612a58573d6000803e3d6000fd5b505050505b806001600160a01b0316876001600160a01b031687602001357fa6cbfe7c4f79b32395aff92e401d4d426b6a28e6eee944f19634791ad32dd2fd87604051612aa59190615a44565b60405180910390a450505050505050565b600081612ac460a3826136da565b50506001600160a01b03908116600090815260a860205260409020600101541690565b612aef614005565b6040516368ec67e760e01b815260a9600482015260248101839052829073__$23c70d15f703c3ae387c840540427b8a00$__906368ec67e79060440160006040518083038186803b158015612b4357600080fd5b505af4158015612b57573d6000803e3d6000fd5b505050600084815260ad60205260409081902081516101808101909252805460e01b6001600160e01b03191661014083019081526001820180549394509192849261010084019285928492849161016088019190612bb49061528d565b80601f0160208091040260200160405190810160405280929190818152602001828054612be09061528d565b8015612c2d5780601f10612c0257610100808354040283529160200191612c2d565b820191906000526020600020905b815481529060010190602001808311612c1057829003601f168201915b50505050508152505081526020016002820154815250508152602001600382016040518060400160405290816000820160009054906101000a900460e01b6001600160e01b0319166001600160e01b0319168152602001600182018054612c939061528d565b80601f0160208091040260200160405190810160405280929190818152602001828054612cbf9061528d565b8015612d0c5780601f10612ce157610100808354040283529160200191612d0c565b820191906000526020600020905b815481529060010190602001808311612cef57829003601f168201915b505050919092525050508152600591909101546001600160a01b038116602083015263ffffffff600160a01b820481166040840152600160c01b820416606083015260ff600160e01b8204811615156080840152600160e81b82048116151560a0840152600160f01b90910416151560c090910152915050919050565b6000610cea60a383613a8a565b60405163ef6c202d60e01b815260a36004820152602481018490526044810183905260648101829052606090819073__$f390c19a6588bf1782f680f4e6750cf906$__9063ef6c202d90608401612160565b6001600160a01b03163b151590565b60008181526004830160205260409020612e1090613aad565b6114445760405163068bb67560e51b8152600481018290526024016110da565b6005810154600160f01b900460ff16612e5c5760405163b42960fd60e01b815260040160405180910390fd5b600501805460ff60f01b19169055565b609e54604051639dd6945b60e01b815260009173__$e5879ada6f69714d7fc0d88dbcc568b31e$__91639dd6945b91612ebe91889160989160a99160a3916001600160a01b0390911690600401614d07565b60c060405180830381865af4158015612edb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612eff9190614d43565b604051638e1fb5d960e01b815290915060009073__$f64f2ddc230f4d0d284eef95d6ec5afa1e$";

type MetahubConstructorParams =
  | [linkLibraryAddresses: MetahubLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MetahubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Metahub__factory extends ContractFactory {
  constructor(...args: MetahubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Metahub__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: MetahubLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e5879ada6f69714d7fc0d88dbcc568b31e\\$__", "g"),
      linkLibraryAddresses["contracts/renting/Rentings.sol:Rentings"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$f64f2ddc230f4d0d284eef95d6ec5afa1e\\$__", "g"),
      linkLibraryAddresses["contracts/accounting/Accounts.sol:Accounts"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$23c70d15f703c3ae387c840540427b8a00\\$__", "g"),
      linkLibraryAddresses["contracts/listing/Listings.sol:Listings"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$48805a21cd2d79ca776bf2c16e4893ad10\\$__", "g"),
      linkLibraryAddresses["contracts/asset/Assets.sol:Assets"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$f390c19a6588bf1782f680f4e6750cf906\\$__", "g"),
      linkLibraryAddresses["contracts/warper/Warpers.sol:Warpers"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Metahub> {
    return super.deploy(overrides || {}) as Promise<Metahub>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Metahub {
    return super.attach(address) as Metahub;
  }
  override connect(signer: Signer): Metahub__factory {
    return super.connect(signer) as Metahub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetahubInterface {
    return new utils.Interface(_abi) as MetahubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Metahub {
    return new Contract(address, _abi, signerOrProvider) as Metahub;
  }
}

export interface MetahubLibraryAddresses {
  ["contracts/renting/Rentings.sol:Rentings"]: string;
  ["contracts/accounting/Accounts.sol:Accounts"]: string;
  ["contracts/listing/Listings.sol:Listings"]: string;
  ["contracts/asset/Assets.sol:Assets"]: string;
  ["contracts/warper/Warpers.sol:Warpers"]: string;
}
