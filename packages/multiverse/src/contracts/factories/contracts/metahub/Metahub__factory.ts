/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Metahub,
  MetahubInterface,
} from "../../../contracts/metahub/Metahub";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AssetIsLocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotAssetLister",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotRenter",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotWarperManager",
    type: "error",
  },
  {
    inputs: [],
    name: "ListingIsNotPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "ListingIsPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "NotListed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "strategyId",
        type: "bytes4",
      },
    ],
    name: "UnsupportedListingStrategy",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lister",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "unlocksAt",
        type: "uint32",
      },
    ],
    name: "AssetDelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "listingGroupId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lister",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "strategy",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Listings.Params",
        name: "params",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "maxLockPeriod",
        type: "uint32",
      },
    ],
    name: "AssetListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "rentalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Assets.Asset",
        name: "warpedAsset",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "startTime",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "endTime",
        type: "uint32",
      },
    ],
    name: "AssetRented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lister",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
    ],
    name: "AssetWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "ListingPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "ListingUnpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ProtocolEarned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "rentalFeePercent",
        type: "uint16",
      },
    ],
    name: "ProtocolRentalFeeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UniverseEarned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum IPaymentManager.EarningType",
        name: "earningType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserEarned",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetClass",
        type: "bytes4",
      },
    ],
    name: "assetClassController",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "original",
        type: "address",
      },
    ],
    name: "assetListingCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "original",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "assetListings",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "lister",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "maxLockPeriod",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lockedTill",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "immediatePayout",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "delisted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "groupId",
            type: "uint256",
          },
        ],
        internalType: "struct Listings.Listing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "class",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Assets.AssetId",
        name: "warpedAssetId",
        type: "tuple",
      },
    ],
    name: "assetRentalStatus",
    outputs: [
      {
        internalType: "enum Rentings.RentalStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Accounts.Balance[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "warpedCollectionId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
    ],
    name: "collectionRentedValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "delistAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "warper",
            type: "address",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "rentalPeriod",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
        ],
        internalType: "struct Rentings.Params",
        name: "rentingParams",
        type: "tuple",
      },
    ],
    name: "estimateRent",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "total",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "protocolFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listerBaseFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listerPremium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "universeBaseFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "universePremium",
            type: "uint256",
          },
        ],
        internalType: "struct Rentings.RentalFees",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IWarperManager",
            name: "warperManager",
            type: "address",
          },
          {
            internalType: "contract IListingStrategyRegistry",
            name: "listingStrategyRegistry",
            type: "address",
          },
          {
            internalType: "contract IUniverseRegistry",
            name: "universeRegistry",
            type: "address",
          },
          {
            internalType: "contract IAssetClassRegistry",
            name: "assetClassRegistry",
            type: "address",
          },
          {
            internalType: "contract IACL",
            name: "acl",
            type: "address",
          },
          {
            internalType: "contract IERC20Upgradeable",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "rentalFeePercent",
            type: "uint16",
          },
        ],
        internalType: "struct Metahub.MetahubInitParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isWarperAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "strategy",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Listings.Params",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint32",
        name: "maxLockPeriod",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "immediatePayout",
        type: "bool",
      },
    ],
    name: "listAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "listingGroupId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "strategyId",
        type: "bytes4",
      },
    ],
    name: "listingController",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listingCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "listingInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "lister",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "maxLockPeriod",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lockedTill",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "immediatePayout",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "delisted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "groupId",
            type: "uint256",
          },
        ],
        internalType: "struct Listings.Listing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "lister",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "maxLockPeriod",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lockedTill",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "immediatePayout",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "delisted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "groupId",
            type: "uint256",
          },
        ],
        internalType: "struct Listings.Listing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "pauseListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "protocolBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolBalances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Accounts.Balance[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolRentalFeePercent",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetClass",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "original",
        type: "address",
      },
    ],
    name: "registerAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "warper",
            type: "address",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "rentalPeriod",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
        ],
        internalType: "struct Rentings.Params",
        name: "rentingParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxPaymentAmount",
        type: "uint256",
      },
    ],
    name: "rent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rentalId",
        type: "uint256",
      },
    ],
    name: "rentalAgreementInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "warpedAsset",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "collectionId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "startTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "endTime",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "listingParams",
            type: "tuple",
          },
        ],
        internalType: "struct Rentings.Agreement",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rentalFeePercent",
        type: "uint16",
      },
    ],
    name: "setProtocolRentalFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedAssetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "supportedAssets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "contract IAssetController",
            name: "controller",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "contract IAssetVault",
            name: "vault",
            type: "address",
          },
        ],
        internalType: "struct Assets.AssetConfig[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "universeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
    ],
    name: "universeBalances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Accounts.Balance[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "unpauseListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lister",
        type: "address",
      },
    ],
    name: "userListingCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lister",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "userListings",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "lister",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "maxLockPeriod",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lockedTill",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "immediatePayout",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "delisted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "groupId",
            type: "uint256",
          },
        ],
        internalType: "struct Listings.Listing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "userRentalAgreements",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "warpedAsset",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "collectionId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "startTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "endTime",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "listingParams",
            type: "tuple",
          },
        ],
        internalType: "struct Rentings.Agreement[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
    ],
    name: "userRentalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "warperController",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "withdrawAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawProtocolFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawUniverseFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b5060006200002460016200008b565b905080156200003d576000805461ff0019166101001790555b801562000084576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50620001ac565b60008054610100900460ff161562000124578160ff166001148015620000c45750620000c2306200019d60201b620027df1760201c565b155b6200011c5760405162461bcd60e51b815260206004820152602e60248201526000805160206200567683398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b506000919050565b60005460ff808416911610620001835760405162461bcd60e51b815260206004820152602e60248201526000805160206200567683398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000113565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b608051615492620001e46000396000818161108e015281816110d701528181611374015281816113b401526114db01526154926000f3fe6080604052600436106102515760003560e01c8063662c1ff811610139578063a5c5ad11116100b6578063b995dbae1161007a578063b995dbae1461075b578063c55dae631461077b578063c7b0156014610799578063d6324606146107b9578063ebf03f49146107d9578063f1f56a1f146107f957600080fd5b8063a5c5ad11146106bc578063a75ea55d146106d1578063a9b07c26146106f1578063ae07477f14610706578063b203bb991461073b57600080fd5b806378a2c9cd116100fd57806378a2c9cd1461060c578063882080d31461062c57806388b22ef41461065c5780638c2c47141461067c5780638d92fdf31461069c57600080fd5b8063662c1ff81461052b5780636e32d3d3146105585780636eabf0bb14610590578063719a3d0b146105be57806372994135146105de57600080fd5b806339b1ea38116101d25780634f1ef286116101965780634f1ef2861461048e57806350f77156146104a157806352d1902d146104c1578063553b0109146104d657806360ca9350146104eb57806361b25b911461050b57600080fd5b806339b1ea38146103e057806343d7c7781461040057806347c6b45e146104205780634bd22a1b146104405780634d3084d31461046057600080fd5b806327e235e31161021957806327e235e31461031957806328df75961461034657806332756bcf1461037357806333a93203146103935780633659cfe6146103c057600080fd5b80630e540ec01461025657806312cd849a146102785780631e347878146102ab57806320ffc53d146102cb578063255829cf146102eb575b600080fd5b34801561026257600080fd5b5061027661027136600461389d565b610826565b005b34801561028457600080fd5b506102986102933660046138c8565b6108be565b6040519081526020015b60405180910390f35b3480156102b757600080fd5b506102986102c6366004613908565b610c6c565b3480156102d757600080fd5b506102766102e636600461394e565b610d00565b3480156102f757600080fd5b50609854600160a01b900461ffff1660405161ffff90911681526020016102a2565b34801561032557600080fd5b5061033961033436600461397c565b610dca565b6040516102a29190613999565b34801561035257600080fd5b506103666103613660046139f1565b610dee565b6040516102a29190613a0d565b34801561037f57600080fd5b5061027661038e366004613a50565b610f35565b34801561039f57600080fd5b506103b36103ae366004613a86565b611006565b6040516102a29190613ad8565b3480156103cc57600080fd5b506102766103db36600461397c565b611084565b3480156103ec57600080fd5b506102986103fb36600461397c565b61116c565b34801561040c57600080fd5b5061027661041b36600461389d565b611179565b34801561042c57600080fd5b5061027661043b366004613af2565b611245565b34801561044c57600080fd5b5061029861045b36600461397c565b6112c6565b34801561046c57600080fd5b5061048061047b366004613b34565b6112d3565b6040516102a2929190613d08565b61027661049c366004613f10565b61136a565b3480156104ad57600080fd5b506102766104bc36600461389d565b611436565b3480156104cd57600080fd5b506102986114ce565b3480156104e257600080fd5b50610298611581565b3480156104f757600080fd5b5061029861050636600461397c565b611592565b34801561051757600080fd5b5061033961052636600461389d565b61159f565b34801561053757600080fd5b5061054b61054636600461389d565b6115b9565b6040516102a29190613fd3565b34801561056457600080fd5b50610578610573366004613fe6565b611822565b6040516001600160a01b0390911681526020016102a2565b34801561059c57600080fd5b506105b06105ab366004614003565b61182f565b6040516102a2929190614038565b3480156105ca57600080fd5b506104806105d9366004614003565b6118c3565b3480156105ea57600080fd5b506105fe6105f9366004613b34565b61194b565b6040516102a292919061409b565b34801561061857600080fd5b50610298610627366004613908565b6119d6565b34801561063857600080fd5b5061064c61064736600461414b565b6119ee565b60405190151581526020016102a2565b34801561066857600080fd5b5061029861067736600461397c565b611a65565b34801561068857600080fd5b50610276610697366004614169565b611a72565b3480156106a857600080fd5b506102766106b736600461389d565b611c4b565b3480156106c857600080fd5b50610339612012565b3480156106dd57600080fd5b506102766106ec366004613af2565b61201e565b3480156106fd57600080fd5b506102986120d6565b34801561071257600080fd5b5061072661072136600461419b565b6120e2565b604080519283526020830191909152016102a2565b34801561074757600080fd5b5061029861075636600461414b565b612330565b34801561076757600080fd5b50610480610776366004614003565b612352565b34801561078757600080fd5b506098546001600160a01b0316610578565b3480156107a557600080fd5b506102766107b4366004614223565b612395565b3480156107c557600080fd5b506105786107d4366004613fe6565b612488565b3480156107e557600080fd5b506105786107f436600461397c565b612500565b34801561080557600080fd5b5061081961081436600461389d565b612533565b6040516102a29190614262565b8061083260a4826127ee565b600082815260a8602052604090206005015482906001600160a01b0316336001600160a01b03161461087757604051636523fa7f60e11b815260040160405180910390fd5b600083815260a86020526040902061088e90612827565b60405183907f62c9649045e00f9c2e96e4e578db9430301ac82a17718531f90e97e6a69202e490600090a2505050565b60a354604051636007b38960e11b815260009173__$e5879ada6f69714d7fc0d88dbcc568b31e$__9163c00f67129161090b91879160989160a4916001600160a01b0316906004016142e7565b60006040518083038186803b15801561092357600080fd5b505af4158015610937573d6000803e3d6000fd5b506000925082915061096b90508535610956604088016020890161397c565b6109666060890160408a0161397c565b612863565b8635600081815260a860209081526040808320815160e08101835286815292830187905282820194909452949650929450429360039092019290916060808301916109ba918c01908c0161397c565b6001600160a01b0316815263ffffffff851660208201526040016109e460808b0160608c0161431a565b6109ee908661434d565b63ffffffff16815260408051808201909152845460e01b6001600160e01b0319168152600185018054602093840193879290840191610a2c90614375565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5890614375565b8015610aa55780601f10610a7a57610100808354040283529160200191610aa5565b820191906000526020600020905b815481529060010190602001808311610a8857829003601f168201915b50505091909252505050905260405163a3f3af0760e01b815290915060009073__$e5879ada6f69714d7fc0d88dbcc568b31e$__9063a3f3af0790610af19060ad9086906004016143a9565b602060405180830381865af4158015610b0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b329190614430565b60a08301518a35600090815260a860205260409020919250610b549190612a58565b73__$e5879ada6f69714d7fc0d88dbcc568b31e$__63c017140260ad610b8060608d0160408e0161397c565b8960026040518563ffffffff1660e01b8152600401610ba29493929190614449565b60006040518083038186803b158015610bba57600080fd5b505af4158015610bce573d6000803e3d6000fd5b505050506000610be58a610bdf3390565b8b612aa0565b9050610c02610bfa60408c0160208d0161397c565b838584612d6f565b826040015183606001516001600160a01b0316837f76f9ffd08d0be80de00e3be8630a8aef939934c79fec4eedfb31e823e3be27bf866000015187608001518860a00151604051610c559392919061446d565b60405180910390a450955050505050505b92915050565b60405163ab5d399360e01b815260ad60048201526001600160a01b03821660248201526044810183905260009073__$e5879ada6f69714d7fc0d88dbcc568b31e$__9063ab5d399390606401602060405180830381865af4158015610cd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf99190614430565b9392505050565b60a3546001600160a01b0316336001600160a01b031614610d345760405163ccad962160e01b815260040160405180910390fd5b610d3f609f82612e00565b610dc657604051635fbd140f60e01b8152609f60048201526001600160e01b0319831660248201526001600160a01b038216604482015273__$48805a21cd2d79ca776bf2c16e4893ad10$__90635fbd140f9060640160006040518083038186803b158015610dad57600080fd5b505af4158015610dc1573d6000803e3d6000fd5b505050505b5050565b6001600160a01b0381166000908152609d60205260409020606090610c6690612e0f565b610e276040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60a354604051636007b38960e11b815273__$e5879ada6f69714d7fc0d88dbcc568b31e$__9163c00f671291610e7391869160989160a4916001600160a01b03909116906004016142e7565b60006040518083038186803b158015610e8b57600080fd5b505af4158015610e9f573d6000803e3d6000fd5b505060a354609e54604051630e5c810360e11b815273__$e5879ada6f69714d7fc0d88dbcc568b31e$__9450631cb902069350610ef492879260989260a4926001600160a01b0390811692169060040161449d565b60c060405180830381865af4158015610f11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6691906144d9565b6097546001600160a01b03166001600160a01b03166312d9a6ad6000336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b158015610f9757600080fd5b505afa158015610fab573d6000803e3d6000fd5b50506098805461ffff60a01b1916600160a01b61ffff8616908102919091179091556040519081527f1b1669b1469af2b2bb8295fdaf1c1ff4cd9d41c56dc31e80d6c67e05854f9e209250602001905060405180910390a150565b60405163029d842960e21b815260009073__$e5879ada6f69714d7fc0d88dbcc568b31e$__90630a7610a4906110439060ad9086906004016145e1565b602060405180830381865af4158015611060573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6691906145fa565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036110d55760405162461bcd60e51b81526004016110cc9061461b565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661111e600080516020615416833981519152546001600160a01b031690565b6001600160a01b0316146111445760405162461bcd60e51b81526004016110cc90614667565b61114d81612ef4565b6040805160008082526020820190925261116991839190612f71565b50565b6000610c6660a4836130e1565b8061118560a4826127ee565b600082815260a8602052604090206005015482906001600160a01b0316336001600160a01b0316146111ca57604051636523fa7f60e11b815260040160405180910390fd5b600083815260a86020908152604091829020600581018054600160e81b60ff60e81b19821617918290559351600160c01b90910463ffffffff16815290926001600160a01b03169186917fc0c0619fe5bf378f25472067afca13995576b95e1351cefa4bce7c45929abe27910160405180910390a350505050565b336000908152609d60205260409081902090516334e3db7f60e21b815273__$f64f2ddc230f4d0d284eef95d6ec5afa1e$__9163d38f6dfc9161129191908790879087906004016146b3565b60006040518083038186803b1580156112a957600080fd5b505af41580156112bd573d6000803e3d6000fd5b50505050505050565b6000610c66609983613104565b604051631d823e1d60e21b815260a460048201526024810183905260448101829052606090819073__$23c70d15f703c3ae387c840540427b8a00$__90637608f87490606401600060405180830381865af4158015611336573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261135e919081019061486a565b915091505b9250929050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036113b25760405162461bcd60e51b81526004016110cc9061461b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166113fb600080516020615416833981519152546001600160a01b031690565b6001600160a01b0316146114215760405162461bcd60e51b81526004016110cc90614667565b61142a82612ef4565b610dc682826001612f71565b8061144260a4826127ee565b600082815260a8602052604090206005015482906001600160a01b0316336001600160a01b03161461148757604051636523fa7f60e11b815260040160405180910390fd5b600083815260a86020526040902061149e9061311a565b60405183907fccf05f4102545965ec08932c92c4db5980b2c27c5fc913e64756615f59e8e68990600090a2505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461156e5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016110cc565b5060008051602061541683398151915290565b600061158d609f61315d565b905090565b6000610c6660a48361316b565b6000818152609c60205260409020606090610c6690612e0f565b6116276040805161016081018252600061012082018181526060610140840181905260e08401918252610100840183905290835260208084018390528385018390528184018390526080840183905260a084018390528451808601909552918452908301529060c082015290565b600082815260ae6020526040908190208151610160810190925280546001600160e01b031960e091821b166101208401908152600183018054859384019285928492849161014088019161167a90614375565b80601f01602080910402602001604051908101604052809291908181526020018280546116a690614375565b80156116f35780601f106116c8576101008083540402835291602001916116f3565b820191906000526020600020905b8154815290600101906020018083116116d657829003601f168201915b50505091909252505050815260029190910154602091820152908252600383015482820152600483015460408084019190915260058401546001600160a01b0381166060850152600160a01b810463ffffffff9081166080860152600160c01b9091041660a0840152805180820190915260068401805460e01b6001600160e01b031916825260078501805460c090950194929391929184019161179690614375565b80601f01602080910402602001604051908101604052809291908181526020018280546117c290614375565b801561180f5780601f106117e45761010080835404028352916020019161180f565b820191906000526020600020905b8154815290600101906020018083116117f257829003601f168201915b5050509190925250505090525092915050565b6000610c66609f8361318e565b604051634cf7b3fb60e01b8152606090819073__$e5879ada6f69714d7fc0d88dbcc568b31e$__90634cf7b3fb906118729060ad90899089908990600401614449565b600060405180830381865af415801561188f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118b79190810190614a11565b91509150935093915050565b60405163f7596f9960e01b8152606090819073__$23c70d15f703c3ae387c840540427b8a00$__9063f7596f99906119069060a490899089908990600401614449565b600060405180830381865af4158015611923573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118b7919081019061486a565b6040516376946fcf60e01b8152609f60048201526024810183905260448101829052606090819073__$48805a21cd2d79ca776bf2c16e4893ad10$__906376946fcf90606401600060405180830381865af41580156119ae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261135e9190810190614c27565b6000828152609c60205260408120610cf99083613104565b60a35460405163882080d360e01b81526001600160a01b0384811660048301528381166024830152600092169063882080d390604401602060405180830381865afa158015611a41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf99190614ce1565b6000610c6660ad8361320e565b6000611a7e6001613231565b90508015611a96576000805461ff0019166101001790555b611a9e6132be565b611aae60a083016080840161397c565b609780546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915280611ae960c0850160a0860161397c565b6001600160a01b03168152602001611b0760e0850160c08601613a50565b61ffff908116909152815160988054602094850151909316600160a01b026001600160b01b03199093166001600160a01b0390921691909117919091179055611b529083018361397c565b60a380546001600160a01b0319166001600160a01b0392909216919091179055611b82606083016040840161397c565b609e80546001600160a01b0319166001600160a01b0392909216919091179055611bb2608083016060840161397c565b609f80546001600160a01b0319166001600160a01b0392909216919091179055611be2604083016020840161397c565b60a580546001600160a01b0319166001600160a01b03929092169190911790558015610dc6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b600081815260a8602052604090206005015481906001600160a01b0316336001600160a01b031614611c9057604051636523fa7f60e11b815260040160405180910390fd5b600082815260a8602052604080822081516101a08101909252805460e01b6001600160e01b031916610160830190815260018201805484926101208401928592849291849161018088019190611ce590614375565b80601f0160208091040260200160405190810160405280929190818152602001828054611d1190614375565b8015611d5e5780601f10611d3357610100808354040283529160200191611d5e565b820191906000526020600020905b815481529060010190602001808311611d4157829003601f168201915b50505050508152505081526020016002820154815250508152602001600382016040518060400160405290816000820160009054906101000a900460e01b6001600160e01b0319166001600160e01b0319168152602001600182018054611dc490614375565b80601f0160208091040260200160405190810160405280929190818152602001828054611df090614375565b8015611e3d5780601f10611e1257610100808354040283529160200191611e3d565b820191906000526020600020905b815481529060010190602001808311611e2057829003601f168201915b50505091909252505050815260058201546001600160a01b038116602083015263ffffffff600160a01b820481166040840152600160c01b82048116606084015260ff600160e01b830481161515608080860191909152600160e81b84048216151560a0860152600160f01b90930416151560c084015260069093015460e090920191909152820151919250908116429091161015611eef5760405163dcfbeafb60e01b815260040160405180910390fd5b604051633598a33560e21b815260a460048201526024810184905273__$23c70d15f703c3ae387c840540427b8a00$__9063d6628cd49060440160006040518083038186803b158015611f4157600080fd5b505af4158015611f55573d6000803e3d6000fd5b5050825160405163221efb0360e11b815273__$48805a21cd2d79ca776bf2c16e4893ad10$__935063443df6069250611f9391609f91600401614cfe565b60006040518083038186803b158015611fab57600080fd5b505af4158015611fbf573d6000803e3d6000fd5b5050505080604001516001600160a01b0316837f1e5a15ab85db192d73c1e02de45c46144e19ffe3bd2ece777303173365ecb9b383600001516040516120059190614d17565b60405180910390a3505050565b606061158d6099612e0f565b6097546001600160a01b03166001600160a01b03166312d9a6ad6000336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b15801561208057600080fd5b505afa158015612094573d6000803e3d6000fd5b50506040516334e3db7f60e21b815273__$f64f2ddc230f4d0d284eef95d6ec5afa1e$__925063d38f6dfc9150611291906099908790879087906004016146b3565b600061158d60a461332b565b60a35460009081906001600160a01b031663b8e2992261210961210489614d84565b613339565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160006040518083038186803b15801561214857600080fd5b505afa15801561215c573d6000803e3d6000fd5b5061217a92506121729150506020870187613fe6565b60a490613357565b60006040518061012001604052808861219290614d84565b81526020016121a088614dd4565b8152602001336001600160a01b0316815263ffffffff871660208201526000604080830182905287151560608401526080830182905260a0830182905260c09092015251637bc13e0160e01b815290915073__$23c70d15f703c3ae387c840540427b8a00$__90637bc13e019061221e9060a4908590600401614de0565b6040805180830381865af415801561223a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061225e9190614eaa565b604051631daa22cf60e11b8152919450925073__$48805a21cd2d79ca776bf2c16e4893ad10$__90633b54459e9061229f90609f908b903390600401614ece565b60006040518083038186803b1580156122b757600080fd5b505af41580156122cb573d6000803e3d6000fd5b5050505080604001516001600160a01b031682847f809e27e1d600ea0c78bebfbb5d2e4faec3e2da6289019072014cf21c44e0ef8984600001518560200151866060015160405161231e93929190614f29565b60405180910390a45094509492505050565b6001600160a01b0382166000908152609d60205260408120610cf99083613104565b6040516337c5f58760e11b8152606090819073__$23c70d15f703c3ae387c840540427b8a00$__90636f8beb0e906119069060a490899089908990600401614449565b609e5484906001600160a01b0316637dc330dc82336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b1580156123ef57600080fd5b505afa158015612403573d6000803e3d6000fd5b5050506000868152609c60205260409081902090516334e3db7f60e21b815273__$f64f2ddc230f4d0d284eef95d6ec5afa1e$__925063d38f6dfc91612451918890889088906004016146b3565b60006040518083038186803b15801561246957600080fd5b505af415801561247d573d6000803e3d6000fd5b505050505050505050565b60a554604051636b19230360e11b81526001600160e01b0319831660048201526000916001600160a01b03169063d6324606906024015b602060405180830381865afa1580156124dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c669190614f65565b60a35460405163ebf03f4960e01b81526001600160a01b038381166004830152600092169063ebf03f49906024016124bf565b61253b613809565b6040516368ec67e760e01b815260a4600482015260248101839052829073__$23c70d15f703c3ae387c840540427b8a00$__906368ec67e79060440160006040518083038186803b15801561258f57600080fd5b505af41580156125a3573d6000803e3d6000fd5b505050600084815260a860205260409081902081516101a08101909252805460e01b6001600160e01b0319166101608301908152600182018054939450919284926101208401928592849284916101808801919061260090614375565b80601f016020809104026020016040519081016040528092919081815260200182805461262c90614375565b80156126795780601f1061264e57610100808354040283529160200191612679565b820191906000526020600020905b81548152906001019060200180831161265c57829003601f168201915b50505050508152505081526020016002820154815250508152602001600382016040518060400160405290816000820160009054906101000a900460e01b6001600160e01b0319166001600160e01b03191681526020016001820180546126df90614375565b80601f016020809104026020016040519081016040528092919081815260200182805461270b90614375565b80156127585780601f1061272d57610100808354040283529160200191612758565b820191906000526020600020905b81548152906001019060200180831161273b57829003601f168201915b50505091909252505050815260058201546001600160a01b038116602083015263ffffffff600160a01b820481166040840152600160c01b820416606083015260ff600160e01b8204811615156080840152600160e81b82048116151560a0840152600160f01b90910416151560c082015260069091015460e09091015291505b50919050565b6001600160a01b03163b151590565b60008181526004830160205260409020612807906133f8565b610dc65760405163068bb67560e51b8152600481018290526024016110cc565b6005810154600160f01b900460ff166128535760405163b42960fd60e01b815260040160405180910390fd5b600501805460ff60f01b19169055565b604080516080810182526000918101828152606080830152815260208101829052600085815260a860205260408082208151608081018352815460e01b6001600160e01b03191692810192835260018201805491938492909184916060850191906128cd90614375565b80601f01602080910402602001604051908101604052809291908181526020018280546128f990614375565b80156129465780601f1061291b57610100808354040283529160200191612946565b820191906000526020600020905b81548152906001019060200180831161292957829003601f168201915b5050509190925250505081526002919091015460209091015260a35460405163ebf03f4960e01b81526001600160a01b0388811660048301529293506000929091169063ebf03f4990602401602060405180830381865afa1580156129af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129d39190614f65565b9050612a3763c95eb64d60e01b8388886040516024016129f593929190614f82565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526001600160a01b03831690613425565b806020019051810190612a4a9190614fb5565b909890975095505050505050565b600582015463ffffffff808316600160c01b9092041610612a77575050565b6005909101805463ffffffff909216600160c01b0263ffffffff60c01b19909216919091179055565b612aeb6040518060c0016040528060608152602001600081526020016000815260200160006001600160a01b031681526020016000815260200160006001600160a01b031681525090565b60a354609e54604051630e5c810360e11b815260009273__$e5879ada6f69714d7fc0d88dbcc568b31e$__92631cb9020692612b3f928a9260989260a4926001600160a01b0390811692169060040161449d565b60c060405180830381865af4158015612b5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b8091906144d9565b60a3546040516373facbe360e11b815291925073__$f64f2ddc230f4d0d284eef95d6ec5afa1e$__9163e7f597c691612bd3916099918a9187918b918b916001600160a01b03169060a490600401614ff1565b600060405180830381865af4158015612bf0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612c189190810190615071565b915060005b825151811015612ccb57600083600001518281518110612c3f57612c3f6151ca565b6020026020010151905080606001516001600160a01b031681600001516000811115612c6d57612c6d613ac2565b82602001516001600160a01b03167fbf41aad4c3074058a613f4e88cea850e86e57d902b608bb02fb715b64929a40f8460400151604051612cb091815260200190565b60405180910390a45080612cc3816151e0565b915050612c1d565b5081606001516001600160a01b031682602001517fd0d3e2b6da184374c29ef6b5894d81d6a59fb7e85ee392823a4f18bcfb6c40bd8460400151604051612d1491815260200190565b60405180910390a38160a001516001600160a01b03167f89b3c2ca51e9018064501bde534fc91ebacdce4784a91350b4e0759fc6f286fc8360800151604051612d5f91815260200190565b60405180910390a2509392505050565b60a35460405163ebf03f4960e01b81526001600160a01b038681166004830152600092169063ebf03f4990602401602060405180830381865afa158015612dba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dde9190614f65565b9050610dc163997f621360e01b8585856040516024016129f5939291906151f9565b6000610cf9600184018361344a565b60606000612e1c8361346c565b90506000816001600160401b03811115612e3857612e38613d7a565b604051908082528060200260200182016040528015612e7d57816020015b6040805180820190915260008082526020820152815260200190600190039081612e565790505b50905060005b82811015612eec57600080612e988784613477565b915091506040518060400160405280836001600160a01b0316815260200182815250848481518110612ecc57612ecc6151ca565b602002602001018190525050508080612ee4906151e0565b915050612e83565b509392505050565b6097546001600160a01b03166001600160a01b03166312d9a6ad6000336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b158015612f5657600080fd5b505afa158015612f6a573d6000803e3d6000fd5b5050505050565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615612fa957612fa483613493565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015613003575060408051601f3d908101601f1916820190925261300091810190614430565b60015b6130665760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016110cc565b60008051602061541683398151915281146130d55760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016110cc565b50612fa483838361352f565b6001600160a01b03811660009081526005830160205260408120610cf99061355a565b6000806131118484613564565b95945050505050565b6005810154600160f01b900460ff161561314757604051637892dcf360e01b815260040160405180910390fd5b600501805460ff60f01b1916600160f01b179055565b6000610c668260010161355a565b6001600160a01b03811660009081526006830160205260408120610cf99061355a565b8154604051630b42144760e41b81526001600160e01b0319831660048201526000916001600160a01b03169063b4214470906024016040805180830381865afa1580156131df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061320391906152f4565b602001519392505050565b6001600160a01b03811660009081526002830160205260408120610cf99061355a565b60008054610100900460ff1615613278578160ff1660011480156132545750303b155b6132705760405162461bcd60e51b81526004016110cc90615352565b506000919050565b60005460ff80841691161061329f5760405162461bcd60e51b81526004016110cc90615352565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166133295760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016110cc565b565b6000610c668260020161355a565b6000816000015160200151806020019051810190610c669190614f65565b6001820154604051631582016d60e01b81526001600160e01b0319831660048201526001600160a01b0390911690631582016d90602401602060405180830381865afa1580156133ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133cf9190614ce1565b610dc6576040516380f3229160e01b81526001600160e01b0319821660048201526024016110cc565b60058101546000906001600160a01b031615801590610c6657505060050154600160e81b900460ff161590565b6060610cf983836040518060600160405280602781526020016154366027913961357c565b6001600160a01b03811660009081526001830160205260408120541515610cf9565b6000610c668261361a565b60008080806134868686613625565b9097909650945050505050565b6001600160a01b0381163b6135005760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016110cc565b60008051602061541683398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61353883613650565b6000825111806135455750805b15612fa4576135548383613690565b50505050565b6000610c66825490565b6000808080613486866001600160a01b03871661373c565b60606001600160a01b0384163b6135a55760405162461bcd60e51b81526004016110cc906153a0565b600080856001600160a01b0316856040516135c091906153e6565b600060405180830381855af49150503d80600081146135fb576040519150601f19603f3d011682016040523d82523d6000602084013e613600565b606091505b5091509150613610828286613776565b9695505050505050565b6000610c668261355a565b6000808061363385856137af565b600081815260029690960160205260409095205494959350505050565b61365981613493565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6136b95760405162461bcd60e51b81526004016110cc906153a0565b600080846001600160a01b0316846040516136d491906153e6565b600060405180830381855af49150503d806000811461370f576040519150601f19603f3d011682016040523d82523d6000602084013e613714565b606091505b5091509150613111828260405180606001604052806027815260200161543660279139613776565b600081815260028301602052604081205481908061376b5761375e85856137bb565b9250600091506113639050565b600192509050611363565b60608315613785575081610cf9565b8251156137955782518084602001fd5b8160405162461bcd60e51b81526004016110cc9190615402565b6000610cf983836137c7565b6000610cf983836137f1565b60008260000182815481106137de576137de6151ca565b9060005260206000200154905092915050565b60008181526001830160205260408120541515610cf9565b604080516101a08101909152600061016082018181526060610180840152610120830190815261014083019190915281908152602001613866604051806040016040528060006001600160e01b0319168152602001606081525090565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c0820181905260e09091015290565b6000602082840312156138af57600080fd5b5035919050565b600060a082840312156127d957600080fd5b60008060c083850312156138db57600080fd5b6138e584846138b6565b9460a0939093013593505050565b6001600160a01b038116811461116957600080fd5b6000806040838503121561391b57600080fd5b82359150602083013561392d816138f3565b809150509250929050565b6001600160e01b03198116811461116957600080fd5b6000806040838503121561396157600080fd5b823561396c81613938565b9150602083013561392d816138f3565b60006020828403121561398e57600080fd5b8135610cf9816138f3565b602080825282518282018190526000919060409081850190868401855b828110156139e457815180516001600160a01b031685528601518685015292840192908501906001016139b6565b5091979650505050505050565b600060a08284031215613a0357600080fd5b610cf983836138b6565b60c08101610c668284805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b600060208284031215613a6257600080fd5b813561ffff81168114610cf957600080fd5b6000604082840312156127d957600080fd5b600060208284031215613a9857600080fd5b81356001600160401b03811115613aae57600080fd5b613aba84828501613a74565b949350505050565b634e487b7160e01b600052602160045260246000fd5b6020810160038310613aec57613aec613ac2565b91905290565b600080600060608486031215613b0757600080fd5b8335613b12816138f3565b9250602084013591506040840135613b29816138f3565b809150509250925092565b60008060408385031215613b4757600080fd5b50508035926020909101359150565b600081518084526020808501945080840160005b83811015613b8657815187529582019590820190600101613b6a565b509495945050505050565b60005b83811015613bac578181015183820152602001613b94565b838111156135545750506000910152565b60008151808452613bd5816020860160208601613b91565b601f01601f19169290920160200192915050565b63ffffffff60e01b81511682526000602082015160406020850152613aba6040850182613bbd565b6000815160408452613c266040850182613be9565b602093840151949093019390935250919050565b60006101208251818552613c5082860182613c11565b91505060208301518482036020860152613c6a8282613be9565b9150506040830151613c8760408601826001600160a01b03169052565b506060830151613c9f606086018263ffffffff169052565b506080830151613cb7608086018263ffffffff169052565b5060a0830151613ccb60a086018215159052565b5060c0830151613cdf60c086018215159052565b5060e0830151613cf360e086018215159052565b50610100928301519390920192909252919050565b604081526000613d1b6040830185613b56565b6020838203818501528185518084528284019150828160051b85010183880160005b83811015613d6b57601f19878403018552613d59838351613c3a565b94860194925090850190600101613d3d565b50909998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715613db257613db2613d7a565b60405290565b60405161012081016001600160401b0381118282101715613db257613db2613d7a565b60405160e081016001600160401b0381118282101715613db257613db2613d7a565b604051606081016001600160401b0381118282101715613db257613db2613d7a565b60405160c081016001600160401b0381118282101715613db257613db2613d7a565b604051608081016001600160401b0381118282101715613db257613db2613d7a565b604051601f8201601f191681016001600160401b0381118282101715613e8b57613e8b613d7a565b604052919050565b60006001600160401b03821115613eac57613eac613d7a565b50601f01601f191660200190565b600082601f830112613ecb57600080fd5b8135613ede613ed982613e93565b613e63565b818152846020838601011115613ef357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215613f2357600080fd5b8235613f2e816138f3565b915060208301356001600160401b03811115613f4957600080fd5b613f5585828601613eba565b9150509250929050565b6000815160e08452613f7460e0850182613c11565b9050602083015160208501526040830151604085015260018060a01b036060840151166060850152608083015163ffffffff80821660808701528060a08601511660a0870152505060c083015184820360c08601526131118282613be9565b602081526000610cf96020830184613f5f565b600060208284031215613ff857600080fd5b8135610cf981613938565b60008060006060848603121561401857600080fd5b8335614023816138f3565b95602085013595506040909401359392505050565b60408152600061404b6040830185613b56565b6020838203818501528185518084528284019150828160051b85010183880160005b83811015613d6b57601f19878403018552614089838351613f5f565b9486019492509085019060010161406d565b6040808252835182820181905260009190606090818501906020808901865b838110156140df5781516001600160a01b0316855293820193908201906001016140ba565b5050868303818801528751808452888201938201925060005b8181101561413c57845180516001600160a01b039081168652848201516001600160e01b0319168587015290880151168785015293820193928501926001016140f8565b50919998505050505050505050565b6000806040838503121561415e57600080fd5b823561396c816138f3565b600060e082840312156127d957600080fd5b63ffffffff8116811461116957600080fd5b801515811461116957600080fd5b600080600080608085870312156141b157600080fd5b84356001600160401b03808211156141c857600080fd5b6141d488838901613a74565b955060208701359150808211156141ea57600080fd5b506141f787828801613a74565b93505060408501356142088161417b565b915060608501356142188161418d565b939692955090935050565b6000806000806080858703121561423957600080fd5b84359350602085013561424b816138f3565b9250604085013591506060850135614218816138f3565b602081526000610cf96020830184613c3a565b803582526020810135614287816138f3565b6001600160a01b0390811660208401526040820135906142a6826138f3565b90811660408401526060820135906142bd8261417b565b63ffffffff82166060850152608083013591506142d9826138f3565b808216608085015250505050565b61010081016142f68287614275565b60a082019490945260c08101929092526001600160a01b031660e090910152919050565b60006020828403121561432c57600080fd5b8135610cf98161417b565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff80831681851680830382111561436c5761436c614337565b01949350505050565b600181811c9082168061438957607f821691505b6020821081036127d957634e487b7160e01b600052602260045260246000fd5b828152604060208201526000825160e060408401526143cc610120840182613c11565b9050602084015160608401526040840151608084015260018060a01b0360608501511660a0840152608084015163ffffffff80821660c08601528060a08701511660e0860152505060c0840151603f19848303016101008501526136108282613be9565b60006020828403121561444257600080fd5b5051919050565b9384526001600160a01b039290921660208401526040830152606082015260800190565b6060815260006144806060830186613c11565b63ffffffff94851660208401529290931660409091015292915050565b61012081016144ac8288614275565b60a082019590955260c08101939093526001600160a01b0391821660e08401521661010090910152919050565b600060c082840312156144eb57600080fd5b60405160c081018181106001600160401b038211171561450d5761450d613d7a565b8060405250825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b6000813561455f81613938565b6001600160e01b0319168352602082013536839003601e1901811261458357600080fd5b820180356001600160401b0381111561459b57600080fd5b8036038413156145aa57600080fd5b60406020860152806040860152806020830160608701376000606082870101526060601f19601f8301168601019250505092915050565b828152604060208201526000613aba6040830184614552565b60006020828403121561460c57600080fd5b815160038110610cf957600080fd5b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b9384526001600160a01b039283166020850152604084019190915216606082015260800190565b60006001600160401b038211156146f3576146f3613d7a565b5060051b60200190565b600082601f83011261470e57600080fd5b8151602061471e613ed9836146da565b82815260059290921b8401810191818101908684111561473d57600080fd5b8286015b848110156147585780518352918301918301614741565b509695505050505050565b60006040828403121561477557600080fd5b61477d613d90565b9050815161478a81613938565b815260208201516001600160401b038111156147a557600080fd5b8201601f810184136147b657600080fd5b80516147c4613ed982613e93565b8181528560208385010111156147d957600080fd5b6147ea826020830160208601613b91565b602084015250909392505050565b60006040828403121561480a57600080fd5b614812613d90565b905081516001600160401b0381111561482a57600080fd5b61483684828501614763565b8252506020820151602082015292915050565b80516132b9816138f3565b80516132b98161417b565b80516132b98161418d565b6000806040838503121561487d57600080fd5b82516001600160401b038082111561489457600080fd5b6148a0868387016146fd565b93506020915081850151818111156148b757600080fd5b8501601f810187136148c857600080fd5b80516148d6613ed9826146da565b81815260059190911b820184019084810190898311156148f557600080fd5b8584015b83811015614a00578051868111156149115760008081fd5b8501610120818d03601f190181131561492a5760008081fd5b614932613db8565b89830151898111156149445760008081fd5b6149528f8c838701016147f8565b8252506040830151898111156149685760008081fd5b6149768f8c83870101614763565b8b830152506060614988818501614849565b6040830152608061499a818601614854565b8284015260a091506149ad828601614854565b9083015260c06149be85820161485f565b8284015260e091506149d182860161485f565b908301526101006149e385820161485f565b9183019190915291909201519082015283529186019186016148f9565b508096505050505050509250929050565b60008060408385031215614a2457600080fd5b82516001600160401b0380821115614a3b57600080fd5b614a47868387016146fd565b9350602091508185015181811115614a5e57600080fd5b8501601f81018713614a6f57600080fd5b8051614a7d613ed9826146da565b81815260059190911b82018401908481019089831115614a9c57600080fd5b8584015b83811015614a0057805186811115614ab757600080fd5b850160e0818d03601f19011215614ace5760008081fd5b614ad6613ddb565b8882015188811115614ae85760008081fd5b614af68e8b838601016147f8565b82525060408201518982015260608083015160408301526080614b1a818501614849565b8284015260a09150614b2d828501614854565b9083015260c0614b3e848201614854565b8284015260e0840151915089821115614b575760008081fd5b614b658f8c84870101614763565b9083015250845250918601918601614aa0565b600082601f830112614b8957600080fd5b81516020614b99613ed9836146da565b82815260609283028501820192828201919087851115614bb857600080fd5b8387015b85811015614c1a5781818a031215614bd45760008081fd5b614bdc613dfd565b8151614be7816138f3565b815281860151614bf681613938565b81870152604082810151614c09816138f3565b908201528452928401928101614bbc565b5090979650505050505050565b60008060408385031215614c3a57600080fd5b82516001600160401b0380821115614c5157600080fd5b818501915085601f830112614c6557600080fd5b81516020614c75613ed9836146da565b82815260059290921b84018101918181019089841115614c9457600080fd5b948201945b83861015614cbb578551614cac816138f3565b82529482019490820190614c99565b91880151919650909350505080821115614cd457600080fd5b50613f5585828601614b78565b600060208284031215614cf357600080fd5b8151610cf98161418d565b828152604060208201526000613aba6040830184613c11565b602081526000610cf96020830184613c11565b600060408284031215614d3c57600080fd5b614d44613d90565b90508135614d5181613938565b815260208201356001600160401b03811115614d6c57600080fd5b614d7884828501613eba565b60208301525092915050565b600060408236031215614d9657600080fd5b614d9e613d90565b82356001600160401b03811115614db457600080fd5b614dc036828601614d2a565b825250602092830135928101929092525090565b6000610c663683614d2a565b8281526040602082015260008251610120806040850152614e05610160850183613c11565b91506020850151603f19858403016060860152614e228382613be9565b9250506040850151614e3f60808601826001600160a01b03169052565b50606085015163ffffffff811660a086015250608085015163ffffffff811660c08601525060a085015180151560e08601525060c0850151610100614e878187018315159052565b60e087015115159286019290925250909301516101409092019190915250919050565b60008060408385031215614ebd57600080fd5b505080516020909101519092909150565b8381526060602082015260008335603e19853603018112614eee57600080fd5b60406060840152614f0460a08401868301614552565b60209590950135608084015250506001600160a01b0391909116604090910152919050565b606081526000614f3c6060830186613c11565b8281036020840152614f4e8186613be9565b91505063ffffffff83166040830152949350505050565b600060208284031215614f7757600080fd5b8151610cf9816138f3565b606081526000614f956060830186613c11565b6001600160a01b0394851660208401529290931660409091015292915050565b60008060408385031215614fc857600080fd5b8251915060208301516001600160401b03811115614fe557600080fd5b613f55858286016147f8565b87815261020081016150066020830189614275565b865160c0830152602087015160e083015260408701516101008301526060870151610120830152608087015161014083015260a0909601516101608201526001600160a01b039485166101808201526101a081019390935292166101c08201526101e0015292915050565b6000602080838503121561508457600080fd5b82516001600160401b038082111561509b57600080fd5b9084019060c082870312156150af57600080fd5b6150b7613e1f565b8251828111156150c657600080fd5b83019150601f820187136150d957600080fd5b81516150e7613ed9826146da565b81815260079190911b8301850190858101908983111561510657600080fd5b938601935b8285101561517e576080858b0312156151245760008081fd5b61512c613e41565b85516001811061513c5760008081fd5b81528588015161514b816138f3565b8189015260408681015190820152606080870151615168816138f3565b908201528252608094909401939086019061510b565b835250508284015184820152604080840151908201526151a060608401614849565b6060820152608083015160808201526151bb60a08401614849565b60a08201529695505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016151f2576151f2614337565b5060010190565b600060608583526020818185015261521382850187613f5f565b60408582038187015260c08201875160c0845281815180845260e0860191508683019350600092505b8083101561529457835180516001811061525857615258613ac2565b8352808801516001600160a01b03908116898501528682015187850152908901511688830152928601926001929092019160809091019061523c565b50858a015186860152838a015184860152868a015195506152bf878601876001600160a01b03169052565b60808a0151608086015260a08a015196506152e560a08601886001600160a01b03169052565b9b9a5050505050505050505050565b60006040828403121561530657600080fd5b604051604081018181106001600160401b038211171561532857615328613d7a565b6040528251615336816138f3565b81526020830151615346816138f3565b60208201529392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526026908201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6040820152651b9d1c9858dd60d21b606082015260800190565b600082516153f8818460208701613b91565b9190910192915050565b602081526000610cf96020830184613bbd56fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220bbd7ac1550f63c31ab1cf109c651b1655ac0d3cee291f00f7748bb920cdbe9d664736f6c634300080d0033496e697469616c697a61626c653a20636f6e747261637420697320616c726561";

type MetahubConstructorParams =
  | [linkLibraryAddresses: MetahubLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MetahubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Metahub__factory extends ContractFactory {
  constructor(...args: MetahubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Metahub__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: MetahubLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e5879ada6f69714d7fc0d88dbcc568b31e\\$__", "g"),
      linkLibraryAddresses["contracts/renting/Rentings.sol:Rentings"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$48805a21cd2d79ca776bf2c16e4893ad10\\$__", "g"),
      linkLibraryAddresses["contracts/asset/Assets.sol:Assets"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$f64f2ddc230f4d0d284eef95d6ec5afa1e\\$__", "g"),
      linkLibraryAddresses["contracts/accounting/Accounts.sol:Accounts"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$23c70d15f703c3ae387c840540427b8a00\\$__", "g"),
      linkLibraryAddresses["contracts/listing/Listings.sol:Listings"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Metahub> {
    return super.deploy(overrides || {}) as Promise<Metahub>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Metahub {
    return super.attach(address) as Metahub;
  }
  override connect(signer: Signer): Metahub__factory {
    return super.connect(signer) as Metahub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetahubInterface {
    return new utils.Interface(_abi) as MetahubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Metahub {
    return new Contract(address, _abi, signerOrProvider) as Metahub;
  }
}

export interface MetahubLibraryAddresses {
  ["contracts/renting/Rentings.sol:Rentings"]: string;
  ["contracts/asset/Assets.sol:Assets"]: string;
  ["contracts/accounting/Accounts.sol:Accounts"]: string;
  ["contracts/listing/Listings.sol:Listings"]: string;
}
