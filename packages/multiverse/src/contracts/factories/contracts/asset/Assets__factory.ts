/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Assets, AssetsInterface } from "../../../contracts/asset/Assets";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "AssetIsAlreadyRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "ASSET_ID_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ASSET_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERC1155",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERC721",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610e3161003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100925760003560e01c806376946fcf1161006557806376946fcf1461013e5780638425abff1461015f57806388f38d7114610186578063fcd0d9d3146101bb57600080fd5b80632d255471146100975780633b54459e146100dc578063443df606146100fe5780635fbd140f1461011e575b600080fd5b6100be7f973bb64086f173ec8099b7ed3d43da984f4a332e4417a08bc6a286e6402b058681565b6040516001600160e01b031990911681526020015b60405180910390f35b8180156100e857600080fd5b506100fc6100f7366004610a02565b6101e2565b005b81801561010a57600080fd5b506100fc610119366004610a5d565b610287565b81801561012a57600080fd5b506100fc610139366004610aa4565b6102e7565b61015161014c366004610ad9565b610424565b6040516100d3929190610b05565b6100be7f73ad2146b3d3a286642c794379d750360a2d53a3459a11b3e5d6cc900f55f44a81565b6101ad7fe572bf63c99d807e749180ef2e095adf03b28545e8b411e85f0b71d2fcf65f8681565b6040519081526020016100d3565b6101ad7fc1e035fcb221225ef966d4008a390785191e1c26721308fd5349fd62539d5f2881565b60006101ed8361066c565b6001600160a01b038082166000908152600387016020526040908190208054600190910154915193945082169291169061027e9063e4f75ad360e01b9061023c90889088908690602401610c58565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526001600160a01b03841690610690565b50505050505050565b60006102928261066c565b6001600160a01b03808216600090815260038601602052604090819020805460019091015491519394508216929116906102df906334dede8760e11b9061023c9087908590602401610c8b565b505050505050565b6102f460018401826106bc565b6103215760405163d4e22b2960e01b81526001600160a01b03821660048201526024015b60405180910390fd5b8254604051630b42144760e41b81526001600160e01b0319841660048201526000916001600160a01b03169063b4214470906024016040805180830381865afa158015610372573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103969190610cb5565b604080516060810182526020808401516001600160a01b0390811683526001600160e01b031990971681830190815293518716828401908152958716600090815260039098019052952094518554915160e01c600160a01b026001600160c01b031990921690851617178455505160019092018054929091166001600160a01b031992909216919091179055565b6060806000610435866001016106d1565b90508085106104945760408051600080825260208201818152828401909352909190610489565b604080516060810182526000808252602080830182905292820152825260001990920191018161045c5790505b509250925050610664565b61049e8582610d2a565b8411156104b2576104af8582610d2a565b93505b60008467ffffffffffffffff8111156104cd576104cd610876565b60405190808252806020026020018201604052801561051857816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816104eb5790505b50905060008567ffffffffffffffff81111561053657610536610876565b60405190808252806020026020018201604052801561055f578160200160208202803683370190505b50905060005b8681101561065d5761058461057a828a610d41565b60018b01906106db565b82828151811061059657610596610d59565b60200260200101906001600160a01b031690816001600160a01b0316815250508860030160008383815181106105ce576105ce610d59565b6020908102919091018101516001600160a01b039081168352828201939093526040918201600020825160608101845281548086168252600160a01b900460e01b6001600160e01b031916928101929092526001015490921690820152835184908390811061063f5761063f610d59565b6020026020010181905250808061065590610d6f565b915050610565565b5093509150505b935093915050565b600081600001516020015180602001905181019061068a9190610d88565b92915050565b60606106b58383604051806060016040528060278152602001610dd5602791396106e7565b9392505050565b60006106b5836001600160a01b0384166107c4565b600061068a825490565b60006106b58383610813565b60606001600160a01b0384163b61074f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610318565b600080856001600160a01b03168560405161076a9190610da5565b600060405180830381855af49150503d80600081146107a5576040519150601f19603f3d011682016040523d82523d6000602084013e6107aa565b606091505b50915091506107ba82828661083d565b9695505050505050565b600081815260018301602052604081205461080b5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561068a565b50600061068a565b600082600001828154811061082a5761082a610d59565b9060005260206000200154905092915050565b6060831561084c5750816106b5565b82511561085c5782518084602001fd5b8160405162461bcd60e51b81526004016103189190610dc1565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156108af576108af610876565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156108de576108de610876565b604052919050565b80356001600160e01b0319811681146108fe57600080fd5b919050565b60006040828403121561091557600080fd5b61091d61088c565b9050813567ffffffffffffffff8082111561093757600080fd5b908301906040828603121561094b57600080fd5b61095361088c565b61095c836108e6565b81526020808401358381111561097157600080fd5b80850194505086601f85011261098657600080fd5b83358381111561099857610998610876565b6109aa601f8201601f191683016108b5565b935080845287828287010111156109c057600080fd5b80828601838601376000908401820152818101929092528352928301359282019290925292915050565b6001600160a01b03811681146109ff57600080fd5b50565b600080600060608486031215610a1757600080fd5b83359250602084013567ffffffffffffffff811115610a3557600080fd5b610a4186828701610903565b9250506040840135610a52816109ea565b809150509250925092565b60008060408385031215610a7057600080fd5b82359150602083013567ffffffffffffffff811115610a8e57600080fd5b610a9a85828601610903565b9150509250929050565b600080600060608486031215610ab957600080fd5b83359250610ac9602085016108e6565b91506040840135610a52816109ea565b600080600060608486031215610aee57600080fd5b505081359360208301359350604090920135919050565b6040808252835182820181905260009190606090818501906020808901865b83811015610b495781516001600160a01b031685529382019390820190600101610b24565b5050868303818801528751808452888201938201925060005b81811015610ba657845180516001600160a01b039081168652848201516001600160e01b031916858701529088015116878501529382019392850192600101610b62565b50919998505050505050505050565b60005b83811015610bd0578181015183820152602001610bb8565b83811115610bdf576000848401525b50505050565b60008151808452610bfd816020860160208601610bb5565b601f01601f19169290920160200192915050565b600081516040845263ffffffff60e01b81511660408501526020810151905060406060850152610c446080850182610be5565b602093840151949093019390935250919050565b606081526000610c6b6060830186610c11565b6001600160a01b0394851660208401529290931660409091015292915050565b604081526000610c9e6040830185610c11565b905060018060a01b03831660208301529392505050565b600060408284031215610cc757600080fd5b6040516040810181811067ffffffffffffffff82111715610cea57610cea610876565b6040528251610cf8816109ea565b81526020830151610d08816109ea565b60208201529392505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610d3c57610d3c610d14565b500390565b60008219821115610d5457610d54610d14565b500190565b634e487b7160e01b600052603260045260246000fd5b600060018201610d8157610d81610d14565b5060010190565b600060208284031215610d9a57600080fd5b81516106b5816109ea565b60008251610db7818460208701610bb5565b9190910192915050565b6020815260006106b56020830184610be556fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122037e7934571bdba4d9eb3be78d8632f71b4d197a0612a08cabff77b3b0998f25064736f6c634300080d0033";

type AssetsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Assets__factory extends ContractFactory {
  constructor(...args: AssetsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Assets> {
    return super.deploy(overrides || {}) as Promise<Assets>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Assets {
    return super.attach(address) as Assets;
  }
  override connect(signer: Signer): Assets__factory {
    return super.connect(signer) as Assets__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetsInterface {
    return new utils.Interface(_abi) as AssetsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Assets {
    return new Contract(address, _abi, signerOrProvider) as Assets;
  }
}
