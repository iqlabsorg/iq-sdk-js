/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AssetClassRegistry,
  AssetClassRegistryInterface,
} from "../../../contracts/asset/AssetClassRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetClass",
        type: "bytes4",
      },
    ],
    name: "AssetClassIsAlreadyRegistered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "provided",
        type: "bytes4",
      },
      {
        internalType: "bytes4",
        name: "required",
        type: "bytes4",
      },
    ],
    name: "AssetClassMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAssetControllerInterface",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAssetVaultInterface",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetClass",
        type: "bytes4",
      },
    ],
    name: "UnregisteredAssetClass",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetClass",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newController",
        type: "address",
      },
    ],
    name: "AssetClassControllerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetClass",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "AssetClassRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetClass",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newVault",
        type: "address",
      },
    ],
    name: "AssetClassVaultChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetClass",
        type: "bytes4",
      },
    ],
    name: "assetClassConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "vault",
            type: "address",
          },
          {
            internalType: "address",
            name: "controller",
            type: "address",
          },
        ],
        internalType: "struct IAssetClassRegistry.ClassConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetClass",
        type: "bytes4",
      },
    ],
    name: "checkRegisteredAssetClass",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "acl",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetClass",
        type: "bytes4",
      },
    ],
    name: "isRegisteredAssetClass",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetClass",
        type: "bytes4",
      },
      {
        components: [
          {
            internalType: "address",
            name: "vault",
            type: "address",
          },
          {
            internalType: "address",
            name: "controller",
            type: "address",
          },
        ],
        internalType: "struct IAssetClassRegistry.ClassConfig",
        name: "config",
        type: "tuple",
      },
    ],
    name: "registerAssetClass",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetClass",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "setAssetClassController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetClass",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "setAssetClassVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b5060006200002460016200008b565b905080156200003d576000805461ff0019166101001790555b801562000084576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50620001ac565b60008054610100900460ff161562000124578160ff166001148015620000c45750620000c2306200019d60201b620009141760201c565b155b6200011c5760405162461bcd60e51b815260206004820152602e6024820152600080516020620016ba83398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b506000919050565b60005460ff808416911610620001835760405162461bcd60e51b815260206004820152602e6024820152600080516020620016ba83398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000113565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b6080516114d6620001e46000396000818161024e0152818161028e0152818161032a0152818161036a01526103fd01526114d66000f3fe6080604052600436106100915760003560e01c8063aacfcf4711610059578063aacfcf4714610143578063b421447014610163578063c4d66de8146101aa578063f767118d146101ca578063fca6a520146101ea57600080fd5b8063182daec6146100965780633659cfe6146100b85780634f1ef286146100d857806352d1902d146100eb5780637bc34b2014610113575b600080fd5b3480156100a257600080fd5b506100b66100b13660046110ac565b61020a565b005b3480156100c457600080fd5b506100b66100d33660046110de565b610244565b6100b66100e6366004611111565b610320565b3480156100f757600080fd5b506101006103f0565b6040519081526020015b60405180910390f35b34801561011f57600080fd5b5061013361012e3660046110ac565b6104a3565b604051901515815260200161010a565b34801561014f57600080fd5b506100b661015e3660046111d5565b6104cd565b34801561016f57600080fd5b5061018361017e3660046110ac565b6105be565b6040805182516001600160a01b03908116825260209384015116928101929092520161010a565b3480156101b657600080fd5b506100b66101c53660046110de565b61061f565b3480156101d657600080fd5b506100b66101e53660046111d5565b6106af565b3480156101f657600080fd5b506100b661020536600461120e565b6107a3565b610213816104a3565b61024157604051632b35d9cb60e01b81526001600160e01b0319821660048201526024015b60405180910390fd5b50565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361028c5760405162461bcd60e51b81526004016102389061124f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166102d560008051602061145a833981519152546001600160a01b031690565b6001600160a01b0316146102fb5760405162461bcd60e51b81526004016102389061129b565b61030481610923565b60408051600080825260208201909252610241918391906109a0565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103685760405162461bcd60e51b81526004016102389061124f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166103b160008051602061145a833981519152546001600160a01b031690565b6001600160a01b0316146103d75760405162461bcd60e51b81526004016102389061129b565b6103e082610923565b6103ec828260016109a0565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104905760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610238565b5060008051602061145a83398151915290565b6001600160e01b0319166000908152609860205260409020600101546001600160a01b0316151590565b6097546001600160a01b03166001600160a01b03166312d9a6ad6000336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b15801561052f57600080fd5b505afa158015610543573d6000803e3d6000fd5b50505050816105518161020a565b61055b8383610b10565b6001600160e01b0319831660008181526098602052604080822080546001600160a01b0319166001600160a01b03871690811790915590519092917f7c4ab6a15a7d90e44abd5036e7f2b6eab3323ecde809390ea1a16b582e601dd391a3505050565b6040805180820190915260008082526020820152816105dc8161020a565b50506001600160e01b031916600090815260986020908152604091829020825180840190935280546001600160a01b039081168452600190910154169082015290565b600061062b6001610bee565b90508015610643576000805461ff0019166101001790555b61064b610c76565b609780546001600160a01b0319166001600160a01b03841617905580156103ec576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6097546001600160a01b03166001600160a01b03166312d9a6ad6000336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b15801561071157600080fd5b505afa158015610725573d6000803e3d6000fd5b50505050816107338161020a565b61073d8383610ce3565b6001600160e01b0319831660008181526098602052604080822060010180546001600160a01b0319166001600160a01b03871690811790915590519092917ff7ce73a48d39af4a6c3966296e45bc45517dec92625f72ed87bad106a53bf5a691a3505050565b6097546001600160a01b03166001600160a01b03166312d9a6ad6000336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b15801561080557600080fd5b505afa158015610819573d6000803e3d6000fd5b505050506108398282602001602081019061083491906110de565b610ce3565b61084f8261084a60208401846110de565b610b10565b610858826104a3565b1561088257604051637f3c19b360e01b81526001600160e01b031983166004820152602401610238565b6001600160e01b03198216600090815260986020526040902081906108a78282611307565b506108b7905060208201826110de565b6001600160a01b03166108d060408301602084016110de565b6001600160a01b0316836001600160e01b0319167f73a78e6875d8f3f477a3a5816e5a73504913b8ed88f03772fcfba490cb765ea660405160405180910390a45050565b6001600160a01b03163b151590565b6097546001600160a01b03166001600160a01b03166312d9a6ad6000336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b15801561098557600080fd5b505afa158015610999573d6000803e3d6000fd5b5050505050565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156109d8576109d383610d1a565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610a32575060408051601f3d908101601f19168201909252610a2f91810190611338565b60015b610a955760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610238565b60008051602061145a8339815191528114610b045760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610238565b506109d3838383610db6565b610b2a6001600160a01b03821663238e2e1760e01b610de1565b610b4757604051630d8a7d3360e11b815260040160405180910390fd5b6000816001600160a01b03166386c9de056040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bab9190611351565b90506001600160e01b0319808216908416146109d357604051632e82eea160e11b81526001600160e01b0319808316600483015284166024820152604401610238565b60008054610100900460ff1615610c35578160ff166001148015610c115750303b155b610c2d5760405162461bcd60e51b81526004016102389061136e565b506000919050565b60005460ff808416911610610c5c5760405162461bcd60e51b81526004016102389061136e565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff16610ce15760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610238565b565b610cfd6001600160a01b0382166335c66d6d60e01b610de1565b610b47576040516385ab02ad60e01b815260040160405180910390fd5b6001600160a01b0381163b610d875760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610238565b60008051602061145a83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610dbf83610e06565b600082511180610dcc5750805b156109d357610ddb8383610e46565b50505050565b6000610dec83610f3a565b8015610dfd5750610dfd8383610f6d565b90505b92915050565b610e0f81610d1a565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b610eae5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610238565b600080846001600160a01b031684604051610ec991906113e8565b600060405180830381855af49150503d8060008114610f04576040519150601f19603f3d011682016040523d82523d6000602084013e610f09565b606091505b5091509150610f31828260405180606001604052806027815260200161147a60279139611056565b95945050505050565b6000610f4d826301ffc9a760e01b610f6d565b8015610e005750610f66826001600160e01b0319610f6d565b1592915050565b604080516001600160e01b0319831660248083019190915282518083039091018152604490910182526020810180516001600160e01b03166301ffc9a760e01b179052905160009190829081906001600160a01b0387169061753090610fd49086906113e8565b6000604051808303818686fa925050503d8060008114611010576040519150601f19603f3d011682016040523d82523d6000602084013e611015565b606091505b50915091506020815110156110305760009350505050610e00565b81801561104c57508080602001905181019061104c9190611404565b9695505050505050565b6060831561106557508161108f565b8251156110755782518084602001fd5b8160405162461bcd60e51b81526004016102389190611426565b9392505050565b6001600160e01b03198116811461024157600080fd5b6000602082840312156110be57600080fd5b813561108f81611096565b6001600160a01b038116811461024157600080fd5b6000602082840312156110f057600080fd5b813561108f816110c9565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561112457600080fd5b823561112f816110c9565b9150602083013567ffffffffffffffff8082111561114c57600080fd5b818501915085601f83011261116057600080fd5b813581811115611172576111726110fb565b604051601f8201601f19908116603f0116810190838211818310171561119a5761119a6110fb565b816040528281528860208487010111156111b357600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080604083850312156111e857600080fd5b82356111f381611096565b91506020830135611203816110c9565b809150509250929050565b600080828403606081121561122257600080fd5b833561122d81611096565b92506040601f198201121561124157600080fd5b506020830190509250929050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b80546001600160a01b0319166001600160a01b0392909216919091179055565b8135611312816110c9565b61131c81836112e7565b50602082013561132b816110c9565b6109d381600184016112e7565b60006020828403121561134a57600080fd5b5051919050565b60006020828403121561136357600080fd5b815161108f81611096565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60005b838110156113d75781810151838201526020016113bf565b83811115610ddb5750506000910152565b600082516113fa8184602087016113bc565b9190910192915050565b60006020828403121561141657600080fd5b8151801515811461108f57600080fd5b60208152600082518060208401526114458160408501602087016113bc565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212204852c814dc2baef0f2f23b72056ec1236863081f306f5f1a4c9526b65a94bec964736f6c634300080d0033496e697469616c697a61626c653a20636f6e747261637420697320616c726561";

type AssetClassRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetClassRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetClassRegistry__factory extends ContractFactory {
  constructor(...args: AssetClassRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AssetClassRegistry> {
    return super.deploy(overrides || {}) as Promise<AssetClassRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AssetClassRegistry {
    return super.attach(address) as AssetClassRegistry;
  }
  override connect(signer: Signer): AssetClassRegistry__factory {
    return super.connect(signer) as AssetClassRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetClassRegistryInterface {
    return new utils.Interface(_abi) as AssetClassRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetClassRegistry {
    return new Contract(address, _abi, signerOrProvider) as AssetClassRegistry;
  }
}
