/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721AssetController,
  ERC721AssetControllerInterface,
} from "../../../../contracts/asset/ERC721/ERC721AssetController";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "provided",
        type: "bytes4",
      },
      {
        internalType: "bytes4",
        name: "required",
        type: "bytes4",
      },
    ],
    name: "AssetClassMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "FunctionMustBeCalledThroughDelegatecall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "InvalidERC721Value",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "AssetTransfer",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "assetClass",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "class",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Assets.AssetId",
        name: "assetId",
        type: "tuple",
      },
    ],
    name: "collectionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "returnAssetFromVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "assetOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "transferAssetToVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b506080516109b761003e6000396000818161013c0152818161020d015261031a01526109b76000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301ffc9a71461006457806369bdbd0e1461008c57806386c9de051461009f57806389897ace146100b4578063b7cc2e7b146100c7578063e4f75ad3146100e8575b005b61007761007236600461051e565b6100fb565b60405190151581526020015b60405180910390f35b61006261009a3660046106cc565b610132565b6040516339d690a360e11b8152602001610083565b6100626100c236600461071e565b610203565b6100da6100d53660046107ab565b61025e565b604051908152602001610083565b6100626100f63660046107e8565b610310565b60006001600160e01b031982166335c66d6d60e01b148061012c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361017b57604051637170f3db60e01b815260040160405180910390fd5b61018482610379565b60008061019484600001516103ec565b60405163be2b9a7960e01b81526001600160a01b038084166004830152602482018390529294509092509084169063be2b9a7990604401600060405180830381600087803b1580156101e557600080fd5b505af11580156101f9573d6000803e3d6000fd5b5050505050505050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361024c57604051637170f3db60e01b815260040160405180910390fd5b61025884848484610410565b50505050565b80516000906001600160e01b0319166339d690a360e11b146102d05781517f73ad2146b3d3a286642c794379d750360a2d53a3459a11b3e5d6cc900f55f44a5b604051632e82eea160e11b81526001600160e01b03199283166004820152911660248201526044015b60405180910390fd5b61012c6102dc836104e7565b604080516001600160a01b038316602082015260009101604051602081830303815290604052805190602001209050919050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361035957604051637170f3db60e01b815260040160405180910390fd5b61037483838360405180602001604052806000815250610410565b505050565b8051516001600160e01b0319166339d690a360e11b146103bc578051517f73ad2146b3d3a286642c794379d750360a2d53a3459a11b3e5d6cc900f55f44a61029e565b80602001516001146103e95780602001516040516383f261dd60e01b81526004016102c791815260200190565b50565b6000808260200151806020019051810190610407919061084c565b91509150915091565b61041984610379565b60008061042986600001516103ec565b604051635c46a7ef60e11b815291935091506001600160a01b0383169063b88d4fde906104609088908890869089906004016108c7565b600060405180830381600087803b15801561047a57600080fd5b505af115801561048e573d6000803e3d6000fd5b50505050836001600160a01b0316856001600160a01b03167ff65cd7509f02971efd9615ae50140cecf872cd4a266e3f6cac29f9b091fb32c788866040516104d7929190610904565b60405180910390a3505050505050565b6000816020015180602001905181019061012c9190610964565b80356001600160e01b03198116811461051957600080fd5b919050565b60006020828403121561053057600080fd5b61053982610501565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561057957610579610540565b60405290565b600082601f83011261059057600080fd5b813567ffffffffffffffff808211156105ab576105ab610540565b604051601f8301601f19908116603f011681019082821181831017156105d3576105d3610540565b816040528381528660208588010111156105ec57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006040828403121561061e57600080fd5b610626610556565b905061063182610501565b8152602082013567ffffffffffffffff81111561064d57600080fd5b6106598482850161057f565b60208301525092915050565b60006040828403121561067757600080fd5b61067f610556565b9050813567ffffffffffffffff81111561069857600080fd5b6106a48482850161060c565b8252506020820135602082015292915050565b6001600160a01b03811681146103e957600080fd5b600080604083850312156106df57600080fd5b823567ffffffffffffffff8111156106f657600080fd5b61070285828601610665565b9250506020830135610713816106b7565b809150509250929050565b6000806000806080858703121561073457600080fd5b843567ffffffffffffffff8082111561074c57600080fd5b61075888838901610665565b95506020870135915061076a826106b7565b90935060408601359061077c826106b7565b9092506060860135908082111561079257600080fd5b5061079f8782880161057f565b91505092959194509250565b6000602082840312156107bd57600080fd5b813567ffffffffffffffff8111156107d457600080fd5b6107e08482850161060c565b949350505050565b6000806000606084860312156107fd57600080fd5b833567ffffffffffffffff81111561081457600080fd5b61082086828701610665565b9350506020840135610831816106b7565b91506040840135610841816106b7565b809150509250925092565b6000806040838503121561085f57600080fd5b825161086a816106b7565b6020939093015192949293505050565b6000815180845260005b818110156108a057602081850181015186830182015201610884565b818111156108b2576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906108fa9083018461087a565b9695505050505050565b604081526000835160408084015263ffffffff60e01b815116608084015260208101519050604060a084015261093d60c084018261087a565b905060208501516060840152828103602084015261095b818561087a565b95945050505050565b60006020828403121561097657600080fd5b8151610539816106b756fea26469706673582212207ca00f1a1bdf298597f4a1724c00516a9adc1a5b8c3c6ed56b398fcd30025f6964736f6c634300080d0033";

type ERC721AssetControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721AssetControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721AssetController__factory extends ContractFactory {
  constructor(...args: ERC721AssetControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721AssetController> {
    return super.deploy(overrides || {}) as Promise<ERC721AssetController>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721AssetController {
    return super.attach(address) as ERC721AssetController;
  }
  override connect(signer: Signer): ERC721AssetController__factory {
    return super.connect(signer) as ERC721AssetController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AssetControllerInterface {
    return new utils.Interface(_abi) as ERC721AssetControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721AssetController {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721AssetController;
  }
}
