/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MetahubV2Mock,
  MetahubV2MockInterface,
} from "../../../contracts/mocks/MetahubV2Mock";

const _abi = [
  {
    inputs: [],
    name: "AssetIsLocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotAssetLister",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotRenter",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotWarperManager",
    type: "error",
  },
  {
    inputs: [],
    name: "ListingIsNotPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "ListingIsPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "NotListed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "strategyId",
        type: "bytes4",
      },
    ],
    name: "UnsupportedListingStrategy",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lister",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "unlocksAt",
        type: "uint32",
      },
    ],
    name: "AssetDelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "listingGroupId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lister",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "strategy",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Listings.Params",
        name: "params",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "maxLockPeriod",
        type: "uint32",
      },
    ],
    name: "AssetListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "rentalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Assets.Asset",
        name: "warpedAsset",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "startTime",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "endTime",
        type: "uint32",
      },
    ],
    name: "AssetRented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lister",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
    ],
    name: "AssetWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "ListingPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "ListingUnpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ProtocolEarned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "rentalFeePercent",
        type: "uint16",
      },
    ],
    name: "ProtocolRentalFeeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UniverseEarned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum IPaymentManager.EarningType",
        name: "earningType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserEarned",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetClass",
        type: "bytes4",
      },
    ],
    name: "assetClassController",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "original",
        type: "address",
      },
    ],
    name: "assetListingCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "original",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "assetListings",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "lister",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "maxLockPeriod",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lockedTill",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "immediatePayout",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "delisted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "groupId",
            type: "uint256",
          },
        ],
        internalType: "struct Listings.Listing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "class",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Assets.AssetId",
        name: "warpedAssetId",
        type: "tuple",
      },
    ],
    name: "assetRentalStatus",
    outputs: [
      {
        internalType: "enum Rentings.RentalStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Accounts.Balance[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "warpedCollectionId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
    ],
    name: "collectionRentedValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "delistAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "warper",
            type: "address",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "rentalPeriod",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
        ],
        internalType: "struct Rentings.Params",
        name: "rentingParams",
        type: "tuple",
      },
    ],
    name: "estimateRent",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "total",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "protocolFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listerBaseFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listerPremium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "universeBaseFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "universePremium",
            type: "uint256",
          },
        ],
        internalType: "struct Rentings.RentalFees",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IWarperManager",
            name: "warperManager",
            type: "address",
          },
          {
            internalType: "contract IListingStrategyRegistry",
            name: "listingStrategyRegistry",
            type: "address",
          },
          {
            internalType: "contract IUniverseRegistry",
            name: "universeRegistry",
            type: "address",
          },
          {
            internalType: "contract IAssetClassRegistry",
            name: "assetClassRegistry",
            type: "address",
          },
          {
            internalType: "contract IACL",
            name: "acl",
            type: "address",
          },
          {
            internalType: "contract IERC20Upgradeable",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "rentalFeePercent",
            type: "uint16",
          },
        ],
        internalType: "struct Metahub.MetahubInitParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isWarperAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "strategy",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Listings.Params",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint32",
        name: "maxLockPeriod",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "immediatePayout",
        type: "bool",
      },
    ],
    name: "listAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "listingGroupId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "strategyId",
        type: "bytes4",
      },
    ],
    name: "listingController",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listingCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "listingInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "lister",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "maxLockPeriod",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lockedTill",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "immediatePayout",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "delisted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "groupId",
            type: "uint256",
          },
        ],
        internalType: "struct Listings.Listing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "lister",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "maxLockPeriod",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lockedTill",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "immediatePayout",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "delisted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "groupId",
            type: "uint256",
          },
        ],
        internalType: "struct Listings.Listing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "pauseListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "protocolBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolBalances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Accounts.Balance[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolRentalFeePercent",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetClass",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "original",
        type: "address",
      },
    ],
    name: "registerAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "warper",
            type: "address",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "rentalPeriod",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
        ],
        internalType: "struct Rentings.Params",
        name: "rentingParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxPaymentAmount",
        type: "uint256",
      },
    ],
    name: "rent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rentalId",
        type: "uint256",
      },
    ],
    name: "rentalAgreementInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "warpedAsset",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "collectionId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "startTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "endTime",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "listingParams",
            type: "tuple",
          },
        ],
        internalType: "struct Rentings.Agreement",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rentalFeePercent",
        type: "uint16",
      },
    ],
    name: "setProtocolRentalFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedAssetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "supportedAssets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "contract IAssetController",
            name: "controller",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "contract IAssetVault",
            name: "vault",
            type: "address",
          },
        ],
        internalType: "struct Assets.AssetConfig[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "universeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
    ],
    name: "universeBalances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Accounts.Balance[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "unpauseListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lister",
        type: "address",
      },
    ],
    name: "userListingCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lister",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "userListings",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "lister",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "maxLockPeriod",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lockedTill",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "immediatePayout",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "delisted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "groupId",
            type: "uint256",
          },
        ],
        internalType: "struct Listings.Listing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "userRentalAgreements",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "warpedAsset",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "collectionId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "startTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "endTime",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "listingParams",
            type: "tuple",
          },
        ],
        internalType: "struct Rentings.Agreement[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
    ],
    name: "userRentalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "warperController",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "withdrawAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawProtocolFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawUniverseFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b5060006200002460016200008b565b905080156200003d576000805461ff0019166101001790555b801562000084576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50620001ac565b60008054610100900460ff161562000124578160ff166001148015620000c45750620000c2306200019d60201b6200281b1760201c565b155b6200011c5760405162461bcd60e51b815260206004820152602e6024820152600080516020620056b283398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b506000919050565b60005460ff808416911610620001835760405162461bcd60e51b815260206004820152602e6024820152600080516020620056b283398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000113565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b6080516154ce620001e4600039600081816110ca01528181611113015281816113b0015281816113f0015261151701526154ce6000f3fe60806040526004361061025c5760003560e01c806361b25b9111610144578063a5c5ad11116100b6578063b995dbae1161007a578063b995dbae14610797578063c55dae63146107b7578063c7b01560146107d5578063d6324606146107f5578063ebf03f4914610815578063f1f56a1f1461083557600080fd5b8063a5c5ad11146106f8578063a75ea55d1461070d578063a9b07c261461072d578063ae07477f14610742578063b203bb991461077757600080fd5b80637299413511610108578063729941351461061a57806378a2c9cd14610648578063882080d31461066857806388b22ef4146106985780638c2c4714146106b85780638d92fdf3146106d857600080fd5b806361b25b9114610547578063662c1ff8146105675780636e32d3d3146105945780636eabf0bb146105cc578063719a3d0b146105fa57600080fd5b806339b1ea38116101dd5780634f1ef286116101a15780634f1ef2861461049957806350f77156146104ac57806352d1902d146104cc57806354fd4d50146104e1578063553b01091461051257806360ca93501461052757600080fd5b806339b1ea38146103eb57806343d7c7781461040b57806347c6b45e1461042b5780634bd22a1b1461044b5780634d3084d31461046b57600080fd5b806327e235e31161022457806327e235e31461032457806328df75961461035157806332756bcf1461037e57806333a932031461039e5780633659cfe6146103cb57600080fd5b80630e540ec01461026157806312cd849a146102835780631e347878146102b657806320ffc53d146102d6578063255829cf146102f6575b600080fd5b34801561026d57600080fd5b5061028161027c3660046138d9565b610862565b005b34801561028f57600080fd5b506102a361029e366004613904565b6108fa565b6040519081526020015b60405180910390f35b3480156102c257600080fd5b506102a36102d1366004613944565b610ca8565b3480156102e257600080fd5b506102816102f136600461398a565b610d3c565b34801561030257600080fd5b50609854600160a01b900461ffff1660405161ffff90911681526020016102ad565b34801561033057600080fd5b5061034461033f3660046139b8565b610e06565b6040516102ad91906139d5565b34801561035d57600080fd5b5061037161036c366004613a2d565b610e2a565b6040516102ad9190613a49565b34801561038a57600080fd5b50610281610399366004613a8c565b610f71565b3480156103aa57600080fd5b506103be6103b9366004613ac2565b611042565b6040516102ad9190613b14565b3480156103d757600080fd5b506102816103e63660046139b8565b6110c0565b3480156103f757600080fd5b506102a36104063660046139b8565b6111a8565b34801561041757600080fd5b506102816104263660046138d9565b6111b5565b34801561043757600080fd5b50610281610446366004613b2e565b611281565b34801561045757600080fd5b506102a36104663660046139b8565b611302565b34801561047757600080fd5b5061048b610486366004613b70565b61130f565b6040516102ad929190613d44565b6102816104a7366004613f4c565b6113a6565b3480156104b857600080fd5b506102816104c73660046138d9565b611472565b3480156104d857600080fd5b506102a361150a565b3480156104ed57600080fd5b5060408051808201825260028152612b1960f11b602082015290516102ad9190613f9b565b34801561051e57600080fd5b506102a36115bd565b34801561053357600080fd5b506102a36105423660046139b8565b6115ce565b34801561055357600080fd5b506103446105623660046138d9565b6115db565b34801561057357600080fd5b506105876105823660046138d9565b6115f5565b6040516102ad9190614022565b3480156105a057600080fd5b506105b46105af366004614035565b61185e565b6040516001600160a01b0390911681526020016102ad565b3480156105d857600080fd5b506105ec6105e7366004614052565b61186b565b6040516102ad929190614087565b34801561060657600080fd5b5061048b610615366004614052565b6118ff565b34801561062657600080fd5b5061063a610635366004613b70565b611987565b6040516102ad9291906140ea565b34801561065457600080fd5b506102a3610663366004613944565b611a12565b34801561067457600080fd5b5061068861068336600461419a565b611a2a565b60405190151581526020016102ad565b3480156106a457600080fd5b506102a36106b33660046139b8565b611aa1565b3480156106c457600080fd5b506102816106d33660046141b8565b611aae565b3480156106e457600080fd5b506102816106f33660046138d9565b611c87565b34801561070457600080fd5b5061034461204e565b34801561071957600080fd5b50610281610728366004613b2e565b61205a565b34801561073957600080fd5b506102a3612112565b34801561074e57600080fd5b5061076261075d3660046141ea565b61211e565b604080519283526020830191909152016102ad565b34801561078357600080fd5b506102a361079236600461419a565b61236c565b3480156107a357600080fd5b5061048b6107b2366004614052565b61238e565b3480156107c357600080fd5b506098546001600160a01b03166105b4565b3480156107e157600080fd5b506102816107f0366004614272565b6123d1565b34801561080157600080fd5b506105b4610810366004614035565b6124c4565b34801561082157600080fd5b506105b46108303660046139b8565b61253c565b34801561084157600080fd5b506108556108503660046138d9565b61256f565b6040516102ad91906142b1565b8061086e60a48261282a565b600082815260a8602052604090206005015482906001600160a01b0316336001600160a01b0316146108b357604051636523fa7f60e11b815260040160405180910390fd5b600083815260a8602052604090206108ca90612863565b60405183907f62c9649045e00f9c2e96e4e578db9430301ac82a17718531f90e97e6a69202e490600090a2505050565b60a354604051636007b38960e11b815260009173__$e5879ada6f69714d7fc0d88dbcc568b31e$__9163c00f67129161094791879160989160a4916001600160a01b031690600401614336565b60006040518083038186803b15801561095f57600080fd5b505af4158015610973573d6000803e3d6000fd5b50600092508291506109a79050853561099260408801602089016139b8565b6109a26060890160408a016139b8565b61289f565b8635600081815260a860209081526040808320815160e08101835286815292830187905282820194909452949650929450429360039092019290916060808301916109f6918c01908c016139b8565b6001600160a01b0316815263ffffffff85166020820152604001610a2060808b0160608c01614369565b610a2a908661439c565b63ffffffff16815260408051808201909152845460e01b6001600160e01b0319168152600185018054602093840193879290840191610a68906143c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610a94906143c4565b8015610ae15780601f10610ab657610100808354040283529160200191610ae1565b820191906000526020600020905b815481529060010190602001808311610ac457829003601f168201915b50505091909252505050905260405163a3f3af0760e01b815290915060009073__$e5879ada6f69714d7fc0d88dbcc568b31e$__9063a3f3af0790610b2d9060ad9086906004016143f8565b602060405180830381865af4158015610b4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6e919061447f565b60a08301518a35600090815260a860205260409020919250610b909190612a94565b73__$e5879ada6f69714d7fc0d88dbcc568b31e$__63c017140260ad610bbc60608d0160408e016139b8565b8960026040518563ffffffff1660e01b8152600401610bde9493929190614498565b60006040518083038186803b158015610bf657600080fd5b505af4158015610c0a573d6000803e3d6000fd5b505050506000610c218a610c1b3390565b8b612adc565b9050610c3e610c3660408c0160208d016139b8565b838584612dab565b826040015183606001516001600160a01b0316837f76f9ffd08d0be80de00e3be8630a8aef939934c79fec4eedfb31e823e3be27bf866000015187608001518860a00151604051610c91939291906144bc565b60405180910390a450955050505050505b92915050565b60405163ab5d399360e01b815260ad60048201526001600160a01b03821660248201526044810183905260009073__$e5879ada6f69714d7fc0d88dbcc568b31e$__9063ab5d399390606401602060405180830381865af4158015610d11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d35919061447f565b9392505050565b60a3546001600160a01b0316336001600160a01b031614610d705760405163ccad962160e01b815260040160405180910390fd5b610d7b609f82612e3c565b610e0257604051635fbd140f60e01b8152609f60048201526001600160e01b0319831660248201526001600160a01b038216604482015273__$48805a21cd2d79ca776bf2c16e4893ad10$__90635fbd140f9060640160006040518083038186803b158015610de957600080fd5b505af4158015610dfd573d6000803e3d6000fd5b505050505b5050565b6001600160a01b0381166000908152609d60205260409020606090610ca290612e4b565b610e636040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60a354604051636007b38960e11b815273__$e5879ada6f69714d7fc0d88dbcc568b31e$__9163c00f671291610eaf91869160989160a4916001600160a01b0390911690600401614336565b60006040518083038186803b158015610ec757600080fd5b505af4158015610edb573d6000803e3d6000fd5b505060a354609e54604051630e5c810360e11b815273__$e5879ada6f69714d7fc0d88dbcc568b31e$__9450631cb902069350610f3092879260989260a4926001600160a01b039081169216906004016144ec565b60c060405180830381865af4158015610f4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca29190614528565b6097546001600160a01b03166001600160a01b03166312d9a6ad6000336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b158015610fd357600080fd5b505afa158015610fe7573d6000803e3d6000fd5b50506098805461ffff60a01b1916600160a01b61ffff8616908102919091179091556040519081527f1b1669b1469af2b2bb8295fdaf1c1ff4cd9d41c56dc31e80d6c67e05854f9e209250602001905060405180910390a150565b60405163029d842960e21b815260009073__$e5879ada6f69714d7fc0d88dbcc568b31e$__90630a7610a49061107f9060ad908690600401614630565b602060405180830381865af415801561109c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca29190614649565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036111115760405162461bcd60e51b81526004016111089061466a565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661115a600080516020615452833981519152546001600160a01b031690565b6001600160a01b0316146111805760405162461bcd60e51b8152600401611108906146b6565b61118981612f30565b604080516000808252602082019092526111a591839190612fad565b50565b6000610ca260a48361311d565b806111c160a48261282a565b600082815260a8602052604090206005015482906001600160a01b0316336001600160a01b03161461120657604051636523fa7f60e11b815260040160405180910390fd5b600083815260a86020908152604091829020600581018054600160e81b60ff60e81b19821617918290559351600160c01b90910463ffffffff16815290926001600160a01b03169186917fc0c0619fe5bf378f25472067afca13995576b95e1351cefa4bce7c45929abe27910160405180910390a350505050565b336000908152609d60205260409081902090516334e3db7f60e21b815273__$f64f2ddc230f4d0d284eef95d6ec5afa1e$__9163d38f6dfc916112cd9190879087908790600401614702565b60006040518083038186803b1580156112e557600080fd5b505af41580156112f9573d6000803e3d6000fd5b50505050505050565b6000610ca2609983613140565b604051631d823e1d60e21b815260a460048201526024810183905260448101829052606090819073__$23c70d15f703c3ae387c840540427b8a00$__90637608f87490606401600060405180830381865af4158015611372573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261139a91908101906148b9565b915091505b9250929050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036113ee5760405162461bcd60e51b81526004016111089061466a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611437600080516020615452833981519152546001600160a01b031690565b6001600160a01b03161461145d5760405162461bcd60e51b8152600401611108906146b6565b61146682612f30565b610e0282826001612fad565b8061147e60a48261282a565b600082815260a8602052604090206005015482906001600160a01b0316336001600160a01b0316146114c357604051636523fa7f60e11b815260040160405180910390fd5b600083815260a8602052604090206114da90613156565b60405183907fccf05f4102545965ec08932c92c4db5980b2c27c5fc913e64756615f59e8e68990600090a2505050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146115aa5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401611108565b5060008051602061545283398151915290565b60006115c9609f613199565b905090565b6000610ca260a4836131a7565b6000818152609c60205260409020606090610ca290612e4b565b6116636040805161016081018252600061012082018181526060610140840181905260e08401918252610100840183905290835260208084018390528385018390528184018390526080840183905260a084018390528451808601909552918452908301529060c082015290565b600082815260ae6020526040908190208151610160810190925280546001600160e01b031960e091821b16610120840190815260018301805485938401928592849284916101408801916116b6906143c4565b80601f01602080910402602001604051908101604052809291908181526020018280546116e2906143c4565b801561172f5780601f106117045761010080835404028352916020019161172f565b820191906000526020600020905b81548152906001019060200180831161171257829003601f168201915b50505091909252505050815260029190910154602091820152908252600383015482820152600483015460408084019190915260058401546001600160a01b0381166060850152600160a01b810463ffffffff9081166080860152600160c01b9091041660a0840152805180820190915260068401805460e01b6001600160e01b031916825260078501805460c09095019492939192918401916117d2906143c4565b80601f01602080910402602001604051908101604052809291908181526020018280546117fe906143c4565b801561184b5780601f106118205761010080835404028352916020019161184b565b820191906000526020600020905b81548152906001019060200180831161182e57829003601f168201915b5050509190925250505090525092915050565b6000610ca2609f836131ca565b604051634cf7b3fb60e01b8152606090819073__$e5879ada6f69714d7fc0d88dbcc568b31e$__90634cf7b3fb906118ae9060ad90899089908990600401614498565b600060405180830381865af41580156118cb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118f39190810190614a60565b91509150935093915050565b60405163f7596f9960e01b8152606090819073__$23c70d15f703c3ae387c840540427b8a00$__9063f7596f99906119429060a490899089908990600401614498565b600060405180830381865af415801561195f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118f391908101906148b9565b6040516376946fcf60e01b8152609f60048201526024810183905260448101829052606090819073__$48805a21cd2d79ca776bf2c16e4893ad10$__906376946fcf90606401600060405180830381865af41580156119ea573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261139a9190810190614c76565b6000828152609c60205260408120610d359083613140565b60a35460405163882080d360e01b81526001600160a01b0384811660048301528381166024830152600092169063882080d390604401602060405180830381865afa158015611a7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d359190614d30565b6000610ca260ad8361324a565b6000611aba600161326d565b90508015611ad2576000805461ff0019166101001790555b611ada6132fa565b611aea60a08301608084016139b8565b609780546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915280611b2560c0850160a086016139b8565b6001600160a01b03168152602001611b4360e0850160c08601613a8c565b61ffff908116909152815160988054602094850151909316600160a01b026001600160b01b03199093166001600160a01b0390921691909117919091179055611b8e908301836139b8565b60a380546001600160a01b0319166001600160a01b0392909216919091179055611bbe60608301604084016139b8565b609e80546001600160a01b0319166001600160a01b0392909216919091179055611bee60808301606084016139b8565b609f80546001600160a01b0319166001600160a01b0392909216919091179055611c1e60408301602084016139b8565b60a580546001600160a01b0319166001600160a01b03929092169190911790558015610e02576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b600081815260a8602052604090206005015481906001600160a01b0316336001600160a01b031614611ccc57604051636523fa7f60e11b815260040160405180910390fd5b600082815260a8602052604080822081516101a08101909252805460e01b6001600160e01b031916610160830190815260018201805484926101208401928592849291849161018088019190611d21906143c4565b80601f0160208091040260200160405190810160405280929190818152602001828054611d4d906143c4565b8015611d9a5780601f10611d6f57610100808354040283529160200191611d9a565b820191906000526020600020905b815481529060010190602001808311611d7d57829003601f168201915b50505050508152505081526020016002820154815250508152602001600382016040518060400160405290816000820160009054906101000a900460e01b6001600160e01b0319166001600160e01b0319168152602001600182018054611e00906143c4565b80601f0160208091040260200160405190810160405280929190818152602001828054611e2c906143c4565b8015611e795780601f10611e4e57610100808354040283529160200191611e79565b820191906000526020600020905b815481529060010190602001808311611e5c57829003601f168201915b50505091909252505050815260058201546001600160a01b038116602083015263ffffffff600160a01b820481166040840152600160c01b82048116606084015260ff600160e01b830481161515608080860191909152600160e81b84048216151560a0860152600160f01b90930416151560c084015260069093015460e090920191909152820151919250908116429091161015611f2b5760405163dcfbeafb60e01b815260040160405180910390fd5b604051633598a33560e21b815260a460048201526024810184905273__$23c70d15f703c3ae387c840540427b8a00$__9063d6628cd49060440160006040518083038186803b158015611f7d57600080fd5b505af4158015611f91573d6000803e3d6000fd5b5050825160405163221efb0360e11b815273__$48805a21cd2d79ca776bf2c16e4893ad10$__935063443df6069250611fcf91609f91600401614d4d565b60006040518083038186803b158015611fe757600080fd5b505af4158015611ffb573d6000803e3d6000fd5b5050505080604001516001600160a01b0316837f1e5a15ab85db192d73c1e02de45c46144e19ffe3bd2ece777303173365ecb9b383600001516040516120419190614d66565b60405180910390a3505050565b60606115c96099612e4b565b6097546001600160a01b03166001600160a01b03166312d9a6ad6000336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b1580156120bc57600080fd5b505afa1580156120d0573d6000803e3d6000fd5b50506040516334e3db7f60e21b815273__$f64f2ddc230f4d0d284eef95d6ec5afa1e$__925063d38f6dfc91506112cd90609990879087908790600401614702565b60006115c960a4613367565b60a35460009081906001600160a01b031663b8e2992261214561214089614dd3565b613375565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160006040518083038186803b15801561218457600080fd5b505afa158015612198573d6000803e3d6000fd5b506121b692506121ae9150506020870187614035565b60a490613393565b6000604051806101200160405280886121ce90614dd3565b81526020016121dc88614e23565b8152602001336001600160a01b0316815263ffffffff871660208201526000604080830182905287151560608401526080830182905260a0830182905260c09092015251637bc13e0160e01b815290915073__$23c70d15f703c3ae387c840540427b8a00$__90637bc13e019061225a9060a4908590600401614e2f565b6040805180830381865af4158015612276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061229a9190614ef9565b604051631daa22cf60e11b8152919450925073__$48805a21cd2d79ca776bf2c16e4893ad10$__90633b54459e906122db90609f908b903390600401614f1d565b60006040518083038186803b1580156122f357600080fd5b505af4158015612307573d6000803e3d6000fd5b5050505080604001516001600160a01b031682847f809e27e1d600ea0c78bebfbb5d2e4faec3e2da6289019072014cf21c44e0ef8984600001518560200151866060015160405161235a93929190614f78565b60405180910390a45094509492505050565b6001600160a01b0382166000908152609d60205260408120610d359083613140565b6040516337c5f58760e11b8152606090819073__$23c70d15f703c3ae387c840540427b8a00$__90636f8beb0e906119429060a490899089908990600401614498565b609e5484906001600160a01b0316637dc330dc82336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b15801561242b57600080fd5b505afa15801561243f573d6000803e3d6000fd5b5050506000868152609c60205260409081902090516334e3db7f60e21b815273__$f64f2ddc230f4d0d284eef95d6ec5afa1e$__925063d38f6dfc9161248d91889088908890600401614702565b60006040518083038186803b1580156124a557600080fd5b505af41580156124b9573d6000803e3d6000fd5b505050505050505050565b60a554604051636b19230360e11b81526001600160e01b0319831660048201526000916001600160a01b03169063d6324606906024015b602060405180830381865afa158015612518573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca29190614fb4565b60a35460405163ebf03f4960e01b81526001600160a01b038381166004830152600092169063ebf03f49906024016124fb565b612577613845565b6040516368ec67e760e01b815260a4600482015260248101839052829073__$23c70d15f703c3ae387c840540427b8a00$__906368ec67e79060440160006040518083038186803b1580156125cb57600080fd5b505af41580156125df573d6000803e3d6000fd5b505050600084815260a860205260409081902081516101a08101909252805460e01b6001600160e01b0319166101608301908152600182018054939450919284926101208401928592849284916101808801919061263c906143c4565b80601f0160208091040260200160405190810160405280929190818152602001828054612668906143c4565b80156126b55780601f1061268a576101008083540402835291602001916126b5565b820191906000526020600020905b81548152906001019060200180831161269857829003601f168201915b50505050508152505081526020016002820154815250508152602001600382016040518060400160405290816000820160009054906101000a900460e01b6001600160e01b0319166001600160e01b031916815260200160018201805461271b906143c4565b80601f0160208091040260200160405190810160405280929190818152602001828054612747906143c4565b80156127945780601f1061276957610100808354040283529160200191612794565b820191906000526020600020905b81548152906001019060200180831161277757829003601f168201915b50505091909252505050815260058201546001600160a01b038116602083015263ffffffff600160a01b820481166040840152600160c01b820416606083015260ff600160e01b8204811615156080840152600160e81b82048116151560a0840152600160f01b90910416151560c082015260069091015460e09091015291505b50919050565b6001600160a01b03163b151590565b6000818152600483016020526040902061284390613434565b610e025760405163068bb67560e51b815260048101829052602401611108565b6005810154600160f01b900460ff1661288f5760405163b42960fd60e01b815260040160405180910390fd5b600501805460ff60f01b19169055565b604080516080810182526000918101828152606080830152815260208101829052600085815260a860205260408082208151608081018352815460e01b6001600160e01b0319169281019283526001820180549193849290918491606085019190612909906143c4565b80601f0160208091040260200160405190810160405280929190818152602001828054612935906143c4565b80156129825780601f1061295757610100808354040283529160200191612982565b820191906000526020600020905b81548152906001019060200180831161296557829003601f168201915b5050509190925250505081526002919091015460209091015260a35460405163ebf03f4960e01b81526001600160a01b0388811660048301529293506000929091169063ebf03f4990602401602060405180830381865afa1580156129eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a0f9190614fb4565b9050612a7363c95eb64d60e01b838888604051602401612a3193929190614fd1565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526001600160a01b03831690613461565b806020019051810190612a869190615004565b909890975095505050505050565b600582015463ffffffff808316600160c01b9092041610612ab3575050565b6005909101805463ffffffff909216600160c01b0263ffffffff60c01b19909216919091179055565b612b276040518060c0016040528060608152602001600081526020016000815260200160006001600160a01b031681526020016000815260200160006001600160a01b031681525090565b60a354609e54604051630e5c810360e11b815260009273__$e5879ada6f69714d7fc0d88dbcc568b31e$__92631cb9020692612b7b928a9260989260a4926001600160a01b039081169216906004016144ec565b60c060405180830381865af4158015612b98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bbc9190614528565b60a3546040516373facbe360e11b815291925073__$f64f2ddc230f4d0d284eef95d6ec5afa1e$__9163e7f597c691612c0f916099918a9187918b918b916001600160a01b03169060a490600401615040565b600060405180830381865af4158015612c2c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612c5491908101906150c0565b915060005b825151811015612d0757600083600001518281518110612c7b57612c7b615219565b6020026020010151905080606001516001600160a01b031681600001516000811115612ca957612ca9613afe565b82602001516001600160a01b03167fbf41aad4c3074058a613f4e88cea850e86e57d902b608bb02fb715b64929a40f8460400151604051612cec91815260200190565b60405180910390a45080612cff8161522f565b915050612c59565b5081606001516001600160a01b031682602001517fd0d3e2b6da184374c29ef6b5894d81d6a59fb7e85ee392823a4f18bcfb6c40bd8460400151604051612d5091815260200190565b60405180910390a38160a001516001600160a01b03167f89b3c2ca51e9018064501bde534fc91ebacdce4784a91350b4e0759fc6f286fc8360800151604051612d9b91815260200190565b60405180910390a2509392505050565b60a35460405163ebf03f4960e01b81526001600160a01b038681166004830152600092169063ebf03f4990602401602060405180830381865afa158015612df6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e1a9190614fb4565b9050610dfd63997f621360e01b858585604051602401612a3193929190615248565b6000610d356001840183613486565b60606000612e58836134a8565b90506000816001600160401b03811115612e7457612e74613db6565b604051908082528060200260200182016040528015612eb957816020015b6040805180820190915260008082526020820152815260200190600190039081612e925790505b50905060005b82811015612f2857600080612ed487846134b3565b915091506040518060400160405280836001600160a01b0316815260200182815250848481518110612f0857612f08615219565b602002602001018190525050508080612f209061522f565b915050612ebf565b509392505050565b6097546001600160a01b03166001600160a01b03166312d9a6ad6000336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b158015612f9257600080fd5b505afa158015612fa6573d6000803e3d6000fd5b5050505050565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615612fe557612fe0836134cf565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561303f575060408051601f3d908101601f1916820190925261303c9181019061447f565b60015b6130a25760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401611108565b60008051602061545283398151915281146131115760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401611108565b50612fe083838361356b565b6001600160a01b03811660009081526005830160205260408120610d3590613596565b60008061314d84846135a0565b95945050505050565b6005810154600160f01b900460ff161561318357604051637892dcf360e01b815260040160405180910390fd5b600501805460ff60f01b1916600160f01b179055565b6000610ca282600101613596565b6001600160a01b03811660009081526006830160205260408120610d3590613596565b8154604051630b42144760e41b81526001600160e01b0319831660048201526000916001600160a01b03169063b4214470906024016040805180830381865afa15801561321b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061323f9190615343565b602001519392505050565b6001600160a01b03811660009081526002830160205260408120610d3590613596565b60008054610100900460ff16156132b4578160ff1660011480156132905750303b155b6132ac5760405162461bcd60e51b8152600401611108906153a1565b506000919050565b60005460ff8084169116106132db5760405162461bcd60e51b8152600401611108906153a1565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166133655760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401611108565b565b6000610ca282600201613596565b6000816000015160200151806020019051810190610ca29190614fb4565b6001820154604051631582016d60e01b81526001600160e01b0319831660048201526001600160a01b0390911690631582016d90602401602060405180830381865afa1580156133e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061340b9190614d30565b610e02576040516380f3229160e01b81526001600160e01b031982166004820152602401611108565b60058101546000906001600160a01b031615801590610ca257505060050154600160e81b900460ff161590565b6060610d358383604051806060016040528060278152602001615472602791396135b8565b6001600160a01b03811660009081526001830160205260408120541515610d35565b6000610ca282613656565b60008080806134c28686613661565b9097909650945050505050565b6001600160a01b0381163b61353c5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401611108565b60008051602061545283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6135748361368c565b6000825111806135815750805b15612fe05761359083836136cc565b50505050565b6000610ca2825490565b60008080806134c2866001600160a01b038716613778565b60606001600160a01b0384163b6135e15760405162461bcd60e51b8152600401611108906153ef565b600080856001600160a01b0316856040516135fc9190615435565b600060405180830381855af49150503d8060008114613637576040519150601f19603f3d011682016040523d82523d6000602084013e61363c565b606091505b509150915061364c8282866137b2565b9695505050505050565b6000610ca282613596565b6000808061366f85856137eb565b600081815260029690960160205260409095205494959350505050565b613695816134cf565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6136f55760405162461bcd60e51b8152600401611108906153ef565b600080846001600160a01b0316846040516137109190615435565b600060405180830381855af49150503d806000811461374b576040519150601f19603f3d011682016040523d82523d6000602084013e613750565b606091505b509150915061314d8282604051806060016040528060278152602001615472602791396137b2565b60008181526002830160205260408120548190806137a75761379a85856137f7565b92506000915061139f9050565b60019250905061139f565b606083156137c1575081610d35565b8251156137d15782518084602001fd5b8160405162461bcd60e51b81526004016111089190613f9b565b6000610d358383613803565b6000610d35838361382d565b600082600001828154811061381a5761381a615219565b9060005260206000200154905092915050565b60008181526001830160205260408120541515610d35565b604080516101a081019091526000610160820181815260606101808401526101208301908152610140830191909152819081526020016138a2604051806040016040528060006001600160e01b0319168152602001606081525090565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c0820181905260e09091015290565b6000602082840312156138eb57600080fd5b5035919050565b600060a0828403121561281557600080fd5b60008060c0838503121561391757600080fd5b61392184846138f2565b9460a0939093013593505050565b6001600160a01b03811681146111a557600080fd5b6000806040838503121561395757600080fd5b8235915060208301356139698161392f565b809150509250929050565b6001600160e01b0319811681146111a557600080fd5b6000806040838503121561399d57600080fd5b82356139a881613974565b915060208301356139698161392f565b6000602082840312156139ca57600080fd5b8135610d358161392f565b602080825282518282018190526000919060409081850190868401855b82811015613a2057815180516001600160a01b031685528601518685015292840192908501906001016139f2565b5091979650505050505050565b600060a08284031215613a3f57600080fd5b610d3583836138f2565b60c08101610ca28284805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b600060208284031215613a9e57600080fd5b813561ffff81168114610d3557600080fd5b60006040828403121561281557600080fd5b600060208284031215613ad457600080fd5b81356001600160401b03811115613aea57600080fd5b613af684828501613ab0565b949350505050565b634e487b7160e01b600052602160045260246000fd5b6020810160038310613b2857613b28613afe565b91905290565b600080600060608486031215613b4357600080fd5b8335613b4e8161392f565b9250602084013591506040840135613b658161392f565b809150509250925092565b60008060408385031215613b8357600080fd5b50508035926020909101359150565b600081518084526020808501945080840160005b83811015613bc257815187529582019590820190600101613ba6565b509495945050505050565b60005b83811015613be8578181015183820152602001613bd0565b838111156135905750506000910152565b60008151808452613c11816020860160208601613bcd565b601f01601f19169290920160200192915050565b63ffffffff60e01b81511682526000602082015160406020850152613af66040850182613bf9565b6000815160408452613c626040850182613c25565b602093840151949093019390935250919050565b60006101208251818552613c8c82860182613c4d565b91505060208301518482036020860152613ca68282613c25565b9150506040830151613cc360408601826001600160a01b03169052565b506060830151613cdb606086018263ffffffff169052565b506080830151613cf3608086018263ffffffff169052565b5060a0830151613d0760a086018215159052565b5060c0830151613d1b60c086018215159052565b5060e0830151613d2f60e086018215159052565b50610100928301519390920192909252919050565b604081526000613d576040830185613b92565b6020838203818501528185518084528284019150828160051b85010183880160005b83811015613da757601f19878403018552613d95838351613c76565b94860194925090850190600101613d79565b50909998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715613dee57613dee613db6565b60405290565b60405161012081016001600160401b0381118282101715613dee57613dee613db6565b60405160e081016001600160401b0381118282101715613dee57613dee613db6565b604051606081016001600160401b0381118282101715613dee57613dee613db6565b60405160c081016001600160401b0381118282101715613dee57613dee613db6565b604051608081016001600160401b0381118282101715613dee57613dee613db6565b604051601f8201601f191681016001600160401b0381118282101715613ec757613ec7613db6565b604052919050565b60006001600160401b03821115613ee857613ee8613db6565b50601f01601f191660200190565b600082601f830112613f0757600080fd5b8135613f1a613f1582613ecf565b613e9f565b818152846020838601011115613f2f57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215613f5f57600080fd5b8235613f6a8161392f565b915060208301356001600160401b03811115613f8557600080fd5b613f9185828601613ef6565b9150509250929050565b602081526000610d356020830184613bf9565b6000815160e08452613fc360e0850182613c4d565b9050602083015160208501526040830151604085015260018060a01b036060840151166060850152608083015163ffffffff80821660808701528060a08601511660a0870152505060c083015184820360c086015261314d8282613c25565b602081526000610d356020830184613fae565b60006020828403121561404757600080fd5b8135610d3581613974565b60008060006060848603121561406757600080fd5b83356140728161392f565b95602085013595506040909401359392505050565b60408152600061409a6040830185613b92565b6020838203818501528185518084528284019150828160051b85010183880160005b83811015613da757601f198784030185526140d8838351613fae565b948601949250908501906001016140bc565b6040808252835182820181905260009190606090818501906020808901865b8381101561412e5781516001600160a01b031685529382019390820190600101614109565b5050868303818801528751808452888201938201925060005b8181101561418b57845180516001600160a01b039081168652848201516001600160e01b031916858701529088015116878501529382019392850192600101614147565b50919998505050505050505050565b600080604083850312156141ad57600080fd5b82356139a88161392f565b600060e0828403121561281557600080fd5b63ffffffff811681146111a557600080fd5b80151581146111a557600080fd5b6000806000806080858703121561420057600080fd5b84356001600160401b038082111561421757600080fd5b61422388838901613ab0565b9550602087013591508082111561423957600080fd5b5061424687828801613ab0565b9350506040850135614257816141ca565b91506060850135614267816141dc565b939692955090935050565b6000806000806080858703121561428857600080fd5b84359350602085013561429a8161392f565b92506040850135915060608501356142678161392f565b602081526000610d356020830184613c76565b8035825260208101356142d68161392f565b6001600160a01b0390811660208401526040820135906142f58261392f565b908116604084015260608201359061430c826141ca565b63ffffffff82166060850152608083013591506143288261392f565b808216608085015250505050565b610100810161434582876142c4565b60a082019490945260c08101929092526001600160a01b031660e090910152919050565b60006020828403121561437b57600080fd5b8135610d35816141ca565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff8083168185168083038211156143bb576143bb614386565b01949350505050565b600181811c908216806143d857607f821691505b60208210810361281557634e487b7160e01b600052602260045260246000fd5b828152604060208201526000825160e0604084015261441b610120840182613c4d565b9050602084015160608401526040840151608084015260018060a01b0360608501511660a0840152608084015163ffffffff80821660c08601528060a08701511660e0860152505060c0840151603f198483030161010085015261364c8282613c25565b60006020828403121561449157600080fd5b5051919050565b9384526001600160a01b039290921660208401526040830152606082015260800190565b6060815260006144cf6060830186613c4d565b63ffffffff94851660208401529290931660409091015292915050565b61012081016144fb82886142c4565b60a082019590955260c08101939093526001600160a01b0391821660e08401521661010090910152919050565b600060c0828403121561453a57600080fd5b60405160c081018181106001600160401b038211171561455c5761455c613db6565b8060405250825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b600081356145ae81613974565b6001600160e01b0319168352602082013536839003601e190181126145d257600080fd5b820180356001600160401b038111156145ea57600080fd5b8036038413156145f957600080fd5b60406020860152806040860152806020830160608701376000606082870101526060601f19601f8301168601019250505092915050565b828152604060208201526000613af660408301846145a1565b60006020828403121561465b57600080fd5b815160038110610d3557600080fd5b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b9384526001600160a01b039283166020850152604084019190915216606082015260800190565b60006001600160401b0382111561474257614742613db6565b5060051b60200190565b600082601f83011261475d57600080fd5b8151602061476d613f1583614729565b82815260059290921b8401810191818101908684111561478c57600080fd5b8286015b848110156147a75780518352918301918301614790565b509695505050505050565b6000604082840312156147c457600080fd5b6147cc613dcc565b905081516147d981613974565b815260208201516001600160401b038111156147f457600080fd5b8201601f8101841361480557600080fd5b8051614813613f1582613ecf565b81815285602083850101111561482857600080fd5b614839826020830160208601613bcd565b602084015250909392505050565b60006040828403121561485957600080fd5b614861613dcc565b905081516001600160401b0381111561487957600080fd5b614885848285016147b2565b8252506020820151602082015292915050565b80516132f58161392f565b80516132f5816141ca565b80516132f5816141dc565b600080604083850312156148cc57600080fd5b82516001600160401b03808211156148e357600080fd5b6148ef8683870161474c565b935060209150818501518181111561490657600080fd5b8501601f8101871361491757600080fd5b8051614925613f1582614729565b81815260059190911b8201840190848101908983111561494457600080fd5b8584015b83811015614a4f578051868111156149605760008081fd5b8501610120818d03601f19018113156149795760008081fd5b614981613df4565b89830151898111156149935760008081fd5b6149a18f8c83870101614847565b8252506040830151898111156149b75760008081fd5b6149c58f8c838701016147b2565b8b8301525060606149d7818501614898565b604083015260806149e98186016148a3565b8284015260a091506149fc8286016148a3565b9083015260c0614a0d8582016148ae565b8284015260e09150614a208286016148ae565b90830152610100614a328582016148ae565b918301919091529190920151908201528352918601918601614948565b508096505050505050509250929050565b60008060408385031215614a7357600080fd5b82516001600160401b0380821115614a8a57600080fd5b614a968683870161474c565b9350602091508185015181811115614aad57600080fd5b8501601f81018713614abe57600080fd5b8051614acc613f1582614729565b81815260059190911b82018401908481019089831115614aeb57600080fd5b8584015b83811015614a4f57805186811115614b0657600080fd5b850160e0818d03601f19011215614b1d5760008081fd5b614b25613e17565b8882015188811115614b375760008081fd5b614b458e8b83860101614847565b82525060408201518982015260608083015160408301526080614b69818501614898565b8284015260a09150614b7c8285016148a3565b9083015260c0614b8d8482016148a3565b8284015260e0840151915089821115614ba65760008081fd5b614bb48f8c848701016147b2565b9083015250845250918601918601614aef565b600082601f830112614bd857600080fd5b81516020614be8613f1583614729565b82815260609283028501820192828201919087851115614c0757600080fd5b8387015b85811015614c695781818a031215614c235760008081fd5b614c2b613e39565b8151614c368161392f565b815281860151614c4581613974565b81870152604082810151614c588161392f565b908201528452928401928101614c0b565b5090979650505050505050565b60008060408385031215614c8957600080fd5b82516001600160401b0380821115614ca057600080fd5b818501915085601f830112614cb457600080fd5b81516020614cc4613f1583614729565b82815260059290921b84018101918181019089841115614ce357600080fd5b948201945b83861015614d0a578551614cfb8161392f565b82529482019490820190614ce8565b91880151919650909350505080821115614d2357600080fd5b50613f9185828601614bc7565b600060208284031215614d4257600080fd5b8151610d35816141dc565b828152604060208201526000613af66040830184613c4d565b602081526000610d356020830184613c4d565b600060408284031215614d8b57600080fd5b614d93613dcc565b90508135614da081613974565b815260208201356001600160401b03811115614dbb57600080fd5b614dc784828501613ef6565b60208301525092915050565b600060408236031215614de557600080fd5b614ded613dcc565b82356001600160401b03811115614e0357600080fd5b614e0f36828601614d79565b825250602092830135928101929092525090565b6000610ca23683614d79565b8281526040602082015260008251610120806040850152614e54610160850183613c4d565b91506020850151603f19858403016060860152614e718382613c25565b9250506040850151614e8e60808601826001600160a01b03169052565b50606085015163ffffffff811660a086015250608085015163ffffffff811660c08601525060a085015180151560e08601525060c0850151610100614ed68187018315159052565b60e087015115159286019290925250909301516101409092019190915250919050565b60008060408385031215614f0c57600080fd5b505080516020909101519092909150565b8381526060602082015260008335603e19853603018112614f3d57600080fd5b60406060840152614f5360a084018683016145a1565b60209590950135608084015250506001600160a01b0391909116604090910152919050565b606081526000614f8b6060830186613c4d565b8281036020840152614f9d8186613c25565b91505063ffffffff83166040830152949350505050565b600060208284031215614fc657600080fd5b8151610d358161392f565b606081526000614fe46060830186613c4d565b6001600160a01b0394851660208401529290931660409091015292915050565b6000806040838503121561501757600080fd5b8251915060208301516001600160401b0381111561503457600080fd5b613f9185828601614847565b878152610200810161505560208301896142c4565b865160c0830152602087015160e083015260408701516101008301526060870151610120830152608087015161014083015260a0909601516101608201526001600160a01b039485166101808201526101a081019390935292166101c08201526101e0015292915050565b600060208083850312156150d357600080fd5b82516001600160401b03808211156150ea57600080fd5b9084019060c082870312156150fe57600080fd5b615106613e5b565b82518281111561511557600080fd5b83019150601f8201871361512857600080fd5b8151615136613f1582614729565b81815260079190911b8301850190858101908983111561515557600080fd5b938601935b828510156151cd576080858b0312156151735760008081fd5b61517b613e7d565b85516001811061518b5760008081fd5b81528588015161519a8161392f565b81890152604086810151908201526060808701516151b78161392f565b908201528252608094909401939086019061515a565b835250508284015184820152604080840151908201526151ef60608401614898565b60608201526080830151608082015261520a60a08401614898565b60a08201529695505050505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161524157615241614386565b5060010190565b600060608583526020818185015261526282850187613fae565b60408582038187015260c08201875160c0845281815180845260e0860191508683019350600092505b808310156152e35783518051600181106152a7576152a7613afe565b8352808801516001600160a01b03908116898501528682015187850152908901511688830152928601926001929092019160809091019061528b565b50858a015186860152838a015184860152868a0151955061530e878601876001600160a01b03169052565b60808a0151608086015260a08a0151965061533460a08601886001600160a01b03169052565b9b9a5050505050505050505050565b60006040828403121561535557600080fd5b604051604081018181106001600160401b038211171561537757615377613db6565b60405282516153858161392f565b815260208301516153958161392f565b60208201529392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526026908201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6040820152651b9d1c9858dd60d21b606082015260800190565b60008251615447818460208701613bcd565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c17a9c77572274ea0ce671a535c23c6bdfa528fbd1d9d7a5b32d83e9ddc29a0964736f6c634300080d0033496e697469616c697a61626c653a20636f6e747261637420697320616c726561";

type MetahubV2MockConstructorParams =
  | [linkLibraryAddresses: MetahubV2MockLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MetahubV2MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class MetahubV2Mock__factory extends ContractFactory {
  constructor(...args: MetahubV2MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        MetahubV2Mock__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: MetahubV2MockLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e5879ada6f69714d7fc0d88dbcc568b31e\\$__", "g"),
      linkLibraryAddresses["contracts/renting/Rentings.sol:Rentings"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$48805a21cd2d79ca776bf2c16e4893ad10\\$__", "g"),
      linkLibraryAddresses["contracts/asset/Assets.sol:Assets"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$f64f2ddc230f4d0d284eef95d6ec5afa1e\\$__", "g"),
      linkLibraryAddresses["contracts/accounting/Accounts.sol:Accounts"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$23c70d15f703c3ae387c840540427b8a00\\$__", "g"),
      linkLibraryAddresses["contracts/listing/Listings.sol:Listings"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MetahubV2Mock> {
    return super.deploy(overrides || {}) as Promise<MetahubV2Mock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MetahubV2Mock {
    return super.attach(address) as MetahubV2Mock;
  }
  override connect(signer: Signer): MetahubV2Mock__factory {
    return super.connect(signer) as MetahubV2Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetahubV2MockInterface {
    return new utils.Interface(_abi) as MetahubV2MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetahubV2Mock {
    return new Contract(address, _abi, signerOrProvider) as MetahubV2Mock;
  }
}

export interface MetahubV2MockLibraryAddresses {
  ["contracts/renting/Rentings.sol:Rentings"]: string;
  ["contracts/asset/Assets.sol:Assets"]: string;
  ["contracts/accounting/Accounts.sol:Accounts"]: string;
  ["contracts/listing/Listings.sol:Listings"]: string;
}
