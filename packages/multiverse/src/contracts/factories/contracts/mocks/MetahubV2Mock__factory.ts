/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MetahubV2Mock,
  MetahubV2MockInterface,
} from "../../../contracts/mocks/MetahubV2Mock";

const _abi = [
  {
    inputs: [],
    name: "AssetIsLocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotAssetLister",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotRenter",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidWarperInterface",
    type: "error",
  },
  {
    inputs: [],
    name: "ListingIsNotPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "ListingIsPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "NotListed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "UnsupportedAsset",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetClass",
        type: "bytes4",
      },
    ],
    name: "UnsupportedAssetClass",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "strategyId",
        type: "bytes4",
      },
    ],
    name: "UnsupportedListingStrategy",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provided",
        type: "address",
      },
      {
        internalType: "address",
        name: "required",
        type: "address",
      },
    ],
    name: "WarperHasIncorrectMetahubReference",
    type: "error",
  },
  {
    inputs: [],
    name: "WarperIsNotPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "WarperIsNotRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "WarperIsPaused",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lister",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "unlocksAt",
        type: "uint32",
      },
    ],
    name: "AssetDelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lister",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "strategy",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Listings.Params",
        name: "params",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "maxLockPeriod",
        type: "uint32",
      },
    ],
    name: "AssetListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "rentalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Assets.Asset",
        name: "warpedAsset",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "startTime",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "endTime",
        type: "uint32",
      },
    ],
    name: "AssetRented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lister",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
    ],
    name: "AssetWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "ListingPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "ListingUnpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ProtocolEarned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "rentalFeePercent",
        type: "uint16",
      },
    ],
    name: "ProtocolRentalFeeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UniverseEarned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum IPaymentManager.EarningType",
        name: "earningType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserEarned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "WarperDeregistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "WarperPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "warper",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "original",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "assetClass",
        type: "bytes4",
      },
    ],
    name: "WarperRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "WarperUnpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "original",
        type: "address",
      },
    ],
    name: "assetListingCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "original",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "assetListings",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "lister",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "maxLockPeriod",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lockedTill",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "immediatePayout",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "delisted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
        ],
        internalType: "struct Listings.Listing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "class",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Assets.AssetId",
        name: "warpedAssetId",
        type: "tuple",
      },
    ],
    name: "assetRentalStatus",
    outputs: [
      {
        internalType: "enum Rentings.RentalStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "original",
        type: "address",
      },
    ],
    name: "assetWarperCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "original",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "assetWarpers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "original",
            type: "address",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
          {
            internalType: "contract IWarperController",
            name: "controller",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "universeId",
            type: "uint256",
          },
        ],
        internalType: "struct Warpers.Warper[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Accounts.Balance[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "warpedCollectionId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
    ],
    name: "collectionRentedValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "delistAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "deregisterWarper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "warper",
            type: "address",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "rentalPeriod",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
        ],
        internalType: "struct Rentings.Params",
        name: "rentingParams",
        type: "tuple",
      },
    ],
    name: "estimateRent",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "total",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "protocolFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listerBaseFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listerPremium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "universeBaseFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "universePremium",
            type: "uint256",
          },
        ],
        internalType: "struct Rentings.RentalFees",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IWarperPresetFactory",
            name: "warperPresetFactory",
            type: "address",
          },
          {
            internalType: "contract IAssetClassRegistry",
            name: "assetClassRegistry",
            type: "address",
          },
          {
            internalType: "contract IListingStrategyRegistry",
            name: "listingStrategyRegistry",
            type: "address",
          },
          {
            internalType: "contract IUniverseRegistry",
            name: "universeRegistry",
            type: "address",
          },
          {
            internalType: "contract IACL",
            name: "acl",
            type: "address",
          },
          {
            internalType: "contract IERC20Upgradeable",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "rentalFeePercent",
            type: "uint16",
          },
        ],
        internalType: "struct Metahub.MetahubInitParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isWarperAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Assets.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "strategy",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Listings.Params",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint32",
        name: "maxLockPeriod",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "immediatePayout",
        type: "bool",
      },
    ],
    name: "listAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "listingCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "listingInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "lister",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "maxLockPeriod",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lockedTill",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "immediatePayout",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "delisted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
        ],
        internalType: "struct Listings.Listing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "lister",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "maxLockPeriod",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lockedTill",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "immediatePayout",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "delisted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
        ],
        internalType: "struct Listings.Listing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "pauseListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "pauseWarper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "protocolBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolBalances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Accounts.Balance[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolRentalFeePercent",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "universeId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
        ],
        internalType: "struct IWarperManager.WarperRegistrationParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "registerWarper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "warper",
            type: "address",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "rentalPeriod",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
        ],
        internalType: "struct Rentings.Params",
        name: "rentingParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxPaymentAmount",
        type: "uint256",
      },
    ],
    name: "rent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rentalId",
        type: "uint256",
      },
    ],
    name: "rentalAgreementInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "warpedAsset",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "collectionId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "startTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "endTime",
            type: "uint32",
          },
        ],
        internalType: "struct Rentings.Agreement",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rentalFeePercent",
        type: "uint16",
      },
    ],
    name: "setProtocolRentalFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedAssetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "supportedAssets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "contract IAssetController",
            name: "controller",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "contract IAssetVault",
            name: "vault",
            type: "address",
          },
        ],
        internalType: "struct Assets.AssetConfig[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "universeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
    ],
    name: "universeBalances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Accounts.Balance[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
    ],
    name: "universeWarperCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "universeWarpers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "original",
            type: "address",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
          {
            internalType: "contract IWarperController",
            name: "controller",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "universeId",
            type: "uint256",
          },
        ],
        internalType: "struct Warpers.Warper[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "unpauseListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "unpauseWarper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lister",
        type: "address",
      },
    ],
    name: "userListingCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lister",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "userListings",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "lister",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "maxLockPeriod",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lockedTill",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "immediatePayout",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "delisted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
        ],
        internalType: "struct Listings.Listing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "userRentalAgreements",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "warpedAsset",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "collectionId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "startTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "endTime",
            type: "uint32",
          },
        ],
        internalType: "struct Rentings.Agreement[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
    ],
    name: "userRentalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "warperController",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warper",
        type: "address",
      },
    ],
    name: "warperInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "original",
            type: "address",
          },
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
          {
            internalType: "contract IWarperController",
            name: "controller",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "universeId",
            type: "uint256",
          },
        ],
        internalType: "struct Warpers.Warper",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "warperPresetFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "withdrawAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawProtocolFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawUniverseFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b5060006200002460016200008b565b905080156200003d576000805461ff0019166101001790555b801562000084576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50620001ac565b60008054610100900460ff161562000124578160ff166001148015620000c45750620000c2306200019d60201b62002e341760201c565b155b6200011c5760405162461bcd60e51b815260206004820152602e602482015260008051602062005fef83398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b506000919050565b60005460ff808416911610620001835760405162461bcd60e51b815260206004820152602e602482015260008051602062005fef83398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000113565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b608051615e0b620001e4600039600081816110e801528181611131015281816113ce0152818161140e015261159d0152615e0b6000f3fe6080604052600436106102c95760003560e01c80636eabf0bb11610175578063a75ea55d116100dc578063c55dae6311610095578063ebf03f491161006f578063ebf03f4914610922578063f1f56a1f14610942578063f4ba20461461096f578063fee5f37f1461098f57600080fd5b8063c55dae63146108c4578063c7b01560146108e2578063e528b0811461090257600080fd5b8063a75ea55d1461080f578063a9b07c261461082f578063ae07477f14610844578063b203bb9914610864578063b995dbae14610884578063c1e58a21146108a457600080fd5b806388b22ef41161012e57806388b22ef41461073a5780638c2c47141461075a5780638d92fdf31461077a5780638f36001f1461079a578063a0d18bb3146107cc578063a5c5ad11146107fa57600080fd5b80636eabf0bb1461064e578063719a3d0b1461067c578063729941351461069c57806378a2c9cd146106ca5780638468d228146106ea578063882080d31461070a57600080fd5b806347c6b45e1161023457806352d1902d116101ed57806355431024116101c757806355431024146105b457806360ca9350146105e157806361b25b9114610601578063662c1ff81461062157600080fd5b806352d1902d1461055957806354fd4d501461056e578063553b01091461059f57600080fd5b806347c6b45e146104985780634bd22a1b146104b85780634d3084d3146104d85780634f1ef28614610506578063506cf01e1461051957806350f771561461053957600080fd5b80633253d503116102865780633253d503146103cb57806332756bcf146103eb57806333a932031461040b5780633659cfe61461043857806339b1ea381461045857806343d7c7781461047857600080fd5b80630e540ec0146102ce57806312cd849a146102f05780631e34787814610323578063255829cf1461034357806327e235e31461037157806328df75961461039e575b600080fd5b3480156102da57600080fd5b506102ee6102e93660046140de565b6109af565b005b3480156102fc57600080fd5b5061031061030b366004614109565b610a47565b6040519081526020015b60405180910390f35b34801561032f57600080fd5b5061031061033e366004614149565b610d3c565b34801561034f57600080fd5b50609854600160a01b900461ffff1660405161ffff909116815260200161031a565b34801561037d57600080fd5b5061039161038c366004614179565b610dd0565b60405161031a9190614196565b3480156103aa57600080fd5b506103be6103b93660046141ee565b610df4565b60405161031a919061420a565b3480156103d757600080fd5b506102ee6103e6366004614179565b610f2b565b3480156103f757600080fd5b506102ee61040636600461424d565b610f8f565b34801561041757600080fd5b5061042b610426366004614283565b611060565b60405161031a91906142cd565b34801561044457600080fd5b506102ee610453366004614179565b6110de565b34801561046457600080fd5b50610310610473366004614179565b6111c6565b34801561048457600080fd5b506102ee6104933660046140de565b6111d3565b3480156104a457600080fd5b506102ee6104b33660046142f5565b61129f565b3480156104c457600080fd5b506103106104d3366004614179565b611320565b3480156104e457600080fd5b506104f86104f3366004614337565b61132d565b60405161031a9291906144e5565b6102ee6105143660046146cc565b6113c4565b34801561052557600080fd5b506102ee610534366004614179565b611494565b34801561054557600080fd5b506102ee6105543660046140de565b6114f8565b34801561056557600080fd5b50610310611590565b34801561057a57600080fd5b5060408051808201825260028152612b1960f11b6020820152905161031a919061471b565b3480156105ab57600080fd5b50610310611643565b3480156105c057600080fd5b506105d46105cf366004614179565b611654565b60405161031a9190614798565b3480156105ed57600080fd5b506103106105fc366004614179565b6117a5565b34801561060d57600080fd5b5061039161061c3660046140de565b6117b2565b34801561062d57600080fd5b5061064161063c3660046140de565b6117cc565b60405161031a9190614812565b34801561065a57600080fd5b5061066e610669366004614825565b611958565b60405161031a92919061485a565b34801561068857600080fd5b506104f8610697366004614825565b6119ec565b3480156106a857600080fd5b506106bc6106b7366004614337565b611a74565b60405161031a9291906148f6565b3480156106d657600080fd5b506103106106e5366004614149565b611aff565b3480156106f657600080fd5b506103106107053660046140de565b611b17565b34801561071657600080fd5b5061072a610725366004614978565b611b24565b604051901515815260200161031a565b34801561074657600080fd5b50610310610755366004614179565b611bc5565b34801561076657600080fd5b506102ee6107753660046149a6565b611bd2565b34801561078657600080fd5b506102ee6107953660046140de565b611dab565b3480156107a657600080fd5b5060a3546001600160a01b03165b6040516001600160a01b03909116815260200161031a565b3480156107d857600080fd5b506107ec6107e7366004614825565b612169565b60405161031a9291906149b8565b34801561080657600080fd5b506103916121f1565b34801561081b57600080fd5b506102ee61082a3660046142f5565b6121fd565b34801561083b57600080fd5b506103106122b5565b34801561085057600080fd5b5061031061085f366004614a3b565b6122c1565b34801561087057600080fd5b5061031061087f366004614978565b6124a7565b34801561089057600080fd5b506104f861089f366004614825565b6124c9565b3480156108b057600080fd5b506102ee6108bf366004614179565b61250c565b3480156108d057600080fd5b506098546001600160a01b03166107b4565b3480156108ee57600080fd5b506102ee6108fd366004614ac3565b6125c1565b34801561090e57600080fd5b506102ee61091d366004614b02565b6126b4565b34801561092e57600080fd5b506107b461093d366004614179565b612b02565b34801561094e57600080fd5b5061096261095d3660046140de565b612b33565b60405161031a9190614b4d565b34801561097b57600080fd5b5061031061098a366004614179565b612dd5565b34801561099b57600080fd5b506107ec6109aa366004614b60565b612de2565b806109bb60a982612e43565b600082815260ad602052604090206005015482906001600160a01b0316336001600160a01b031614610a0057604051636523fa7f60e11b815260040160405180910390fd5b600083815260ad60205260409020610a1790612e7c565b60405183907f62c9649045e00f9c2e96e4e578db9430301ac82a17718531f90e97e6a69202e490600090a2505050565b6000610a596060840160408501614179565b6001600160a01b0316336001600160a01b031614610a8a57604051635f4ecea960e11b815260040160405180910390fd5b604051630199f13960e01b815273__$e5879ada6f69714d7fc0d88dbcc568b31e$__90630199f13990610aca90869060989060a99060a390600401614bfe565b60006040518083038186803b158015610ae257600080fd5b505af4158015610af6573d6000803e3d6000fd5b50505050610b0b83610b053390565b84612eb8565b600080610b388535610b236040880160208901614179565b610b336060890160408a01614179565b6130ed565b91509150600042905060006040518060c0016040528084815260200185815260200188600001358152602001886040016020810190610b779190614179565b6001600160a01b0316815263ffffffff84166020820152604001610ba160808a0160608b01614c28565b610bab9085614c5b565b63ffffffff16905260405163a3f3af0760e01b815290915060009073__$e5879ada6f69714d7fc0d88dbcc568b31e$__9063a3f3af0790610bf39060b0908690600401614c83565b602060405180830381865af4158015610c10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c349190614cf9565b60a08301518935600090815260ad60205260409020919250610c569190613291565b73__$e5879ada6f69714d7fc0d88dbcc568b31e$__63c017140260b0610c8260608c0160408d01614179565b8860026040518563ffffffff1660e01b8152600401610ca49493929190614d12565b60006040518083038186803b158015610cbc57600080fd5b505af4158015610cd0573d6000803e3d6000fd5b50505050816040015182606001516001600160a01b0316827f76f9ffd08d0be80de00e3be8630a8aef939934c79fec4eedfb31e823e3be27bf856000015186608001518760a00151604051610d2793929190614d36565b60405180910390a49450505050505b92915050565b60405163ab5d399360e01b815260b060048201526001600160a01b03821660248201526044810183905260009073__$e5879ada6f69714d7fc0d88dbcc568b31e$__9063ab5d399390606401602060405180830381865af4158015610da5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc99190614cf9565b9392505050565b6001600160a01b0381166000908152609d60205260409020606090610d36906132d9565b610e2d6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051630199f13960e01b815273__$e5879ada6f69714d7fc0d88dbcc568b31e$__90630199f13990610e6d90859060989060a99060a390600401614bfe565b60006040518083038186803b158015610e8557600080fd5b505af4158015610e99573d6000803e3d6000fd5b5050609e54604051639dd6945b60e01b815273__$e5879ada6f69714d7fc0d88dbcc568b31e$__9350639dd6945b9250610eea91869160989160a99160a3916001600160a01b031690600401614d66565b60c060405180830381865af4158015610f07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d369190614da2565b80610f3681336133be565b6001600160a01b038216600090815260a860205260409020610f579061343c565b6040516001600160a01b038316907f2a08260ffc9feb9cd743cb3dd526a959666260abda15ed904061f3babce487ba90600090a25050565b6097546001600160a01b03166001600160a01b03166312d9a6ad6000336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b158015610ff157600080fd5b505afa158015611005573d6000803e3d6000fd5b50506098805461ffff60a01b1916600160a01b61ffff8616908102919091179091556040519081527f1b1669b1469af2b2bb8295fdaf1c1ff4cd9d41c56dc31e80d6c67e05854f9e209250602001905060405180910390a150565b60405163029d842960e21b815260009073__$e5879ada6f69714d7fc0d88dbcc568b31e$__90630a7610a49061109d9060b0908690600401614ec0565b602060405180830381865af41580156110ba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d369190614ed9565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361112f5760405162461bcd60e51b815260040161112690614efa565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611178600080516020615d8f833981519152546001600160a01b031690565b6001600160a01b03161461119e5760405162461bcd60e51b815260040161112690614f46565b6111a781613479565b604080516000808252602082019092526111c3918391906134f6565b50565b6000610d3660a983613666565b806111df60a982612e43565b600082815260ad602052604090206005015482906001600160a01b0316336001600160a01b03161461122457604051636523fa7f60e11b815260040160405180910390fd5b600083815260ad6020908152604091829020600581018054600160e81b60ff60e81b19821617918290559351600160c01b90910463ffffffff16815290926001600160a01b03169186917fc0c0619fe5bf378f25472067afca13995576b95e1351cefa4bce7c45929abe27910160405180910390a350505050565b336000908152609d60205260409081902090516334e3db7f60e21b815273__$f64f2ddc230f4d0d284eef95d6ec5afa1e$__9163d38f6dfc916112eb9190879087908790600401614f92565b60006040518083038186803b15801561130357600080fd5b505af4158015611317573d6000803e3d6000fd5b50505050505050565b6000610d36609983613689565b604051631d823e1d60e21b815260a960048201526024810183905260448101829052606090819073__$23c70d15f703c3ae387c840540427b8a00$__90637608f87490606401600060405180830381865af4158015611390573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113b89190810190615152565b915091505b9250929050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361140c5760405162461bcd60e51b815260040161112690614efa565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611455600080516020615d8f833981519152546001600160a01b031690565b6001600160a01b03161461147b5760405162461bcd60e51b815260040161112690614f46565b61148482613479565b611490828260016134f6565b5050565b8061149f81336133be565b6001600160a01b038216600090815260a8602052604090206114c09061369f565b6040516001600160a01b038316907f1eaf28a93e1ad5dabb8e3983d0abb01359e7eafa0982af55e81d715704d25f4e90600090a25050565b8061150460a982612e43565b600082815260ad602052604090206005015482906001600160a01b0316336001600160a01b03161461154957604051636523fa7f60e11b815260040160405180910390fd5b600083815260ad60205260409020611560906136d5565b60405183907fccf05f4102545965ec08932c92c4db5980b2c27c5fc913e64756615f59e8e68990600090a2505050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146116305760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401611126565b50600080516020615d8f83398151915290565b600061164f609f613718565b905090565b6040805160c0810182526000808252602082018190529181018290526060808201839052608082015260a08101919091528161169160a382613726565b6001600160a01b03838116600090815260a86020908152604091829020825160c081018452815460e081901b6001600160e01b03191682526401000000008104861693820193909352600160c01b90920460ff1615159282019290925260018201549092166060830152600281018054608084019190611710906152ec565b80601f016020809104026020016040519081016040528092919081815260200182805461173c906152ec565b80156117895780601f1061175e57610100808354040283529160200191611789565b820191906000526020600020905b81548152906001019060200180831161176c57829003601f168201915b5050505050815260200160038201548152505091505b50919050565b6000610d3660a983613758565b6000818152609c60205260409020606090610d36906132d9565b6040805161014081018252600061010082018181526060610120840181905260c0840191825260e08401839052908352602083018290529282018190529181018290526080810182905260a0810191909152600082815260b160205260409081902081516101408101909252805460e01b6001600160e01b0319166101008301908152600182018054849260c08401928592849291849161012088019190611873906152ec565b80601f016020809104026020016040519081016040528092919081815260200182805461189f906152ec565b80156118ec5780601f106118c1576101008083540402835291602001916118ec565b820191906000526020600020905b8154815290600101906020018083116118cf57829003601f168201915b50505091909252505050815260029190910154602091820152908252600383015490820152600482015460408201526005909101546001600160a01b038116606083015263ffffffff600160a01b820481166080840152600160c01b9091041660a09091015292915050565b604051634cf7b3fb60e01b8152606090819073__$e5879ada6f69714d7fc0d88dbcc568b31e$__90634cf7b3fb9061199b9060b090899089908990600401614d12565b600060405180830381865af41580156119b8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119e09190810190615320565b91509150935093915050565b60405163f7596f9960e01b8152606090819073__$23c70d15f703c3ae387c840540427b8a00$__9063f7596f9990611a2f9060a990899089908990600401614d12565b600060405180830381865af4158015611a4c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119e09190810190615152565b6040516376946fcf60e01b8152609f60048201526024810183905260448101829052606090819073__$48805a21cd2d79ca776bf2c16e4893ad10$__906376946fcf90606401600060405180830381865af4158015611ad7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113b891908101906154ce565b6000828152609c60205260408120610dc99083613689565b6000610d3660a38361377b565b600082611b3260a382613726565b609e546001600160a01b03858116600090815260a860205260409081902060030154905163c8cb083f60e01b81526004810191909152858216602482015291169063c8cb083f90604401602060405180830381865afa158015611b99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bbd91906155bf565b949350505050565b6000610d3660b083613794565b6000611bde60016137b7565b90508015611bf6576000805461ff0019166101001790555b611bfe613844565b611c0e60a0830160808401614179565b609780546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915280611c4960c0850160a08601614179565b6001600160a01b03168152602001611c6760e0850160c0860161424d565b61ffff908116909152815160988054602094850151909316600160a01b026001600160b01b03199093166001600160a01b0390921691909117919091179055611cb290830183614179565b60a380546001600160a01b0319166001600160a01b0392909216919091179055611ce26040830160208401614179565b609f80546001600160a01b0319166001600160a01b0392909216919091179055611d126060830160408401614179565b60aa80546001600160a01b0319166001600160a01b0392909216919091179055611d426080830160608401614179565b609e80546001600160a01b0319166001600160a01b03929092169190911790558015611490576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b600081815260ad602052604090206005015481906001600160a01b0316336001600160a01b031614611df057604051636523fa7f60e11b815260040160405180910390fd5b600082815260ad602052604080822081516101808101909252805460e01b6001600160e01b031916610140830190815260018201805484926101008401928592849291849161016088019190611e45906152ec565b80601f0160208091040260200160405190810160405280929190818152602001828054611e71906152ec565b8015611ebe5780601f10611e9357610100808354040283529160200191611ebe565b820191906000526020600020905b815481529060010190602001808311611ea157829003601f168201915b50505050508152505081526020016002820154815250508152602001600382016040518060400160405290816000820160009054906101000a900460e01b6001600160e01b0319166001600160e01b0319168152602001600182018054611f24906152ec565b80601f0160208091040260200160405190810160405280929190818152602001828054611f50906152ec565b8015611f9d5780601f10611f7257610100808354040283529160200191611f9d565b820191906000526020600020905b815481529060010190602001808311611f8057829003601f168201915b505050919092525050508152600591909101546001600160a01b038116602083015263ffffffff600160a01b820481166040840152600160c01b82048116606084015260ff600160e01b830481161515608080860191909152600160e81b84048216151560a0860152600160f01b90930416151560c0909301929092528201519192509081164290911610156120465760405163dcfbeafb60e01b815260040160405180910390fd5b604051633598a33560e21b815260a960048201526024810184905273__$23c70d15f703c3ae387c840540427b8a00$__9063d6628cd49060440160006040518083038186803b15801561209857600080fd5b505af41580156120ac573d6000803e3d6000fd5b5050825160405163221efb0360e11b815273__$48805a21cd2d79ca776bf2c16e4893ad10$__935063443df60692506120ea91609f916004016155dc565b60006040518083038186803b15801561210257600080fd5b505af4158015612116573d6000803e3d6000fd5b5050505080604001516001600160a01b0316837f1e5a15ab85db192d73c1e02de45c46144e19ffe3bd2ece777303173365ecb9b3836000015160405161215c91906155f5565b60405180910390a3505050565b604051632277a89360e11b8152606090819073__$f390c19a6588bf1782f680f4e6750cf906$__906344ef5126906121ac9060a390899089908990600401614d12565b600060405180830381865af41580156121c9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119e09190810190615628565b606061164f60996132d9565b6097546001600160a01b03166001600160a01b03166312d9a6ad6000336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b15801561225f57600080fd5b505afa158015612273573d6000803e3d6000fd5b50506040516334e3db7f60e21b815273__$f64f2ddc230f4d0d284eef95d6ec5afa1e$__925063d38f6dfc91506112eb90609990879087908790600401614f92565b600061164f60a96138b1565b60006122df6122d76122d2876157c2565b6138bf565b60a3906138dd565b6122f76122ef6020860186615812565b60a99061390f565b604051631daa22cf60e11b815273__$48805a21cd2d79ca776bf2c16e4893ad10$__90633b54459e9061233390609f908990339060040161582f565b60006040518083038186803b15801561234b57600080fd5b505af415801561235f573d6000803e3d6000fd5b5050505060006040518061010001604052808761237b906157c2565b81526020016123898761588a565b8152602001336001600160a01b0316815263ffffffff861660208201526000604080830182905286151560608401526080830182905260a09092018190529051637bc13e0160e01b81529192509073__$23c70d15f703c3ae387c840540427b8a00$__90637bc13e01906124049060a9908690600401615896565b602060405180830381865af4158015612421573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124459190614cf9565b905081604001516001600160a01b0316817f2aeb4abaf0fe7ca83b75bc43cd2fb6c99366bc042383e06da11e1a268b47d8ce84600001518560200151866060015160405161249593929190615947565b60405180910390a39695505050505050565b6001600160a01b0382166000908152609d60205260408120610dc99083613689565b6040516337c5f58760e11b8152606090819073__$23c70d15f703c3ae387c840540427b8a00$__90636f8beb0e90611a2f9060a990899089908990600401614d12565b8061251781336133be565b604051635e327ed560e01b815260a360048201526001600160a01b038316602482015273__$f390c19a6588bf1782f680f4e6750cf906$__90635e327ed59060440160006040518083038186803b15801561257157600080fd5b505af4158015612585573d6000803e3d6000fd5b50506040516001600160a01b03851692507f752612ff761620ec780457bda227d89213d24d8914934d4e45c16bcb4d2b158c9150600090a25050565b609e5484906001600160a01b0316637dc330dc82336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b15801561261b57600080fd5b505afa15801561262f573d6000803e3d6000fd5b5050506000868152609c60205260409081902090516334e3db7f60e21b815273__$f64f2ddc230f4d0d284eef95d6ec5afa1e$__925063d38f6dfc9161267d91889088908890600401614f92565b60006040518083038186803b15801561269557600080fd5b505af41580156126a9573d6000803e3d6000fd5b505050505050505050565b609e546020820135906001600160a01b0316637dc330dc82336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b15801561271257600080fd5b505afa158015612726573d6000803e3d6000fd5b505050506001600160a01b0383163b158061275857506127566001600160a01b038416630b3888fd60e31b6139a1565b155b156127795760405160016217fc1360e31b0319815260040160405180910390fd5b6000836001600160a01b031663e846a5a96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156127b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127dd9190615983565b90506127ea609f826139bd565b6000846001600160a01b0316635a70a2836040518163ffffffff1660e01b8152600401602060405180830381865afa15801561282a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061284e91906159a0565b90506001600160a01b038116301461288a57604051630391492160e41b81526001600160a01b0382166004820152306024820152604401611126565b6000612897609f84613a4c565b90506000866001600160a01b031663f46c73c66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156128d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128fd91906159a0565b905060a373__$f390c19a6588bf1782f680f4e6750cf906$__63c73a080a9091896040518060c00160405280896001600160e01b0319168152602001866001600160a01b031681526020018b604001602081019061295b91906159bd565b151581526001600160a01b038816602082015260400161297b8c806159da565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525060208c8101359101526040516001600160e01b031960e086901b1681526129de93929190600401615a20565b60006040518083038186803b1580156129f657600080fd5b505af4158015612a0a573d6000803e3d6000fd5b50505050612a2281609f613ac790919063ffffffff16565b612aa957604051635fbd140f60e01b8152609f60048201526001600160e01b0319851660248201526001600160a01b038216604482015273__$48805a21cd2d79ca776bf2c16e4893ad10$__90635fbd140f9060640160006040518083038186803b158015612a9057600080fd5b505af4158015612aa4573d6000803e3d6000fd5b505050505b806001600160a01b0316876001600160a01b031687602001357fa6cbfe7c4f79b32395aff92e401d4d426b6a28e6eee944f19634791ad32dd2fd87604051612af19190615aa3565b60405180910390a450505050505050565b600081612b1060a382613726565b50506001600160a01b03908116600090815260a860205260409020600101541690565b612b3b614051565b6040516368ec67e760e01b815260a9600482015260248101839052829073__$23c70d15f703c3ae387c840540427b8a00$__906368ec67e79060440160006040518083038186803b158015612b8f57600080fd5b505af4158015612ba3573d6000803e3d6000fd5b505050600084815260ad60205260409081902081516101808101909252805460e01b6001600160e01b03191661014083019081526001820180549394509192849261010084019285928492849161016088019190612c00906152ec565b80601f0160208091040260200160405190810160405280929190818152602001828054612c2c906152ec565b8015612c795780601f10612c4e57610100808354040283529160200191612c79565b820191906000526020600020905b815481529060010190602001808311612c5c57829003601f168201915b50505050508152505081526020016002820154815250508152602001600382016040518060400160405290816000820160009054906101000a900460e01b6001600160e01b0319166001600160e01b0319168152602001600182018054612cdf906152ec565b80601f0160208091040260200160405190810160405280929190818152602001828054612d0b906152ec565b8015612d585780601f10612d2d57610100808354040283529160200191612d58565b820191906000526020600020905b815481529060010190602001808311612d3b57829003601f168201915b505050919092525050508152600591909101546001600160a01b038116602083015263ffffffff600160a01b820481166040840152600160c01b820416606083015260ff600160e01b8204811615156080840152600160e81b82048116151560a0840152600160f01b90910416151560c090910152915050919050565b6000610d3660a383613ad6565b60405163ef6c202d60e01b815260a36004820152602481018490526044810183905260648101829052606090819073__$f390c19a6588bf1782f680f4e6750cf906$__9063ef6c202d906084016121ac565b6001600160a01b03163b151590565b60008181526004830160205260409020612e5c90613af9565b6114905760405163068bb67560e51b815260048101829052602401611126565b6005810154600160f01b900460ff16612ea85760405163b42960fd60e01b815260040160405180910390fd5b600501805460ff60f01b19169055565b609e54604051639dd6945b60e01b815260009173__$e5879ada6f69714d7fc0d88dbcc568b31e$__91639dd6945b91612f0a91889160989160a99160a3916001600160a01b0390911690600401614d66565b60c060405180830381865af4158015612f27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f4b9190614da2565b604051638e1fb5d960e01b815290915060009073__$f64f2ddc230f4d0d284eef95d6ec5afa1e$__90638e1fb5d990612f9790609990899087908a908a9060a39060a990600401615ab8565b61012060405180830381865af4158015612fb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fd99190615b48565b905080604001516001600160a01b031681606001516000811115612fff57612fff6142b7565b82600001516001600160a01b03167fbf41aad4c3074058a613f4e88cea850e86e57d902b608bb02fb715b64929a40f846020015160405161304291815260200190565b60405180910390a48060c001516001600160a01b031681608001517fd0d3e2b6da184374c29ef6b5894d81d6a59fb7e85ee392823a4f18bcfb6c40bd8360a0015160405161309291815260200190565b60405180910390a38061010001516001600160a01b03167f89b3c2ca51e9018064501bde534fc91ebacdce4784a91350b4e0759fc6f286fc8260e001516040516130de91815260200190565b60405180910390a25050505050565b604080516080810182526000918101828152606080830152815260208101829052600085815260ad60205260408082208151608081018352815460e01b6001600160e01b0319169281019283526001820180549193849290918491606085019190613157906152ec565b80601f0160208091040260200160405190810160405280929190818152602001828054613183906152ec565b80156131d05780601f106131a5576101008083540402835291602001916131d0565b820191906000526020600020905b8154815290600101906020018083116131b357829003601f168201915b505050919092525050508152600291909101546020918201526001600160a01b03808816600090815260a890925260409182902060010154915192935016906132709063c95eb64d60e01b9061322e9085908a908a90602401615be2565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526001600160a01b03831690613b26565b8060200190518101906132839190615c15565b909890975095505050505050565b600582015463ffffffff808316600160c01b90920416106132b0575050565b6005909101805463ffffffff909216600160c01b0263ffffffff60c01b19909216919091179055565b606060006132e683613b4b565b90506000816001600160401b0381111561330257613302614557565b60405190808252806020026020018201604052801561334757816020015b60408051808201909152600080825260208201528152602001906001900390816133205790505b50905060005b828110156133b6576000806133628784613b56565b915091506040518060400160405280836001600160a01b031681526020018281525084848151811061339657613396615c51565b6020026020010181905250505080806133ae90615c67565b91505061334d565b509392505050565b609e546001600160a01b03838116600090815260a8602052604090819020600301549051631f70cc3760e21b815260048101919091528382166024820152911690637dc330dc9060440160006040518083038186803b15801561342057600080fd5b505afa158015613434573d6000803e3d6000fd5b505050505050565b8054600160c01b900460ff16156134665760405163651c69e160e01b815260040160405180910390fd5b805460ff60c01b1916600160c01b179055565b6097546001600160a01b03166001600160a01b03166312d9a6ad6000336040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b1580156134db57600080fd5b505afa1580156134ef573d6000803e3d6000fd5b5050505050565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561352e5761352983613b72565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015613588575060408051601f3d908101601f1916820190925261358591810190614cf9565b60015b6135eb5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401611126565b600080516020615d8f833981519152811461365a5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401611126565b50613529838383613c0e565b6001600160a01b03811660009081526005830160205260408120610dc990613c39565b6000806136968484613c43565b95945050505050565b8054600160c01b900460ff166136c857604051633587233b60e11b815260040160405180910390fd5b805460ff60c01b19169055565b6005810154600160f01b900460ff161561370257604051637892dcf360e01b815260040160405180910390fd5b600501805460ff60f01b1916600160f01b179055565b6000610d3682600101613c39565b6137308282613ac7565b61149057604051634f59bc1f60e11b81526001600160a01b0382166004820152602401611126565b6001600160a01b03811660009081526006830160205260408120610dc990613c39565b60008181526003830160205260408120610dc990613c39565b6001600160a01b03811660009081526002830160205260408120610dc990613c39565b60008054610100900460ff16156137fe578160ff1660011480156137da5750303b155b6137f65760405162461bcd60e51b815260040161112690615c80565b506000919050565b60005460ff8084169116106138255760405162461bcd60e51b815260040161112690615c80565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166138af5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401611126565b565b6000610d3682600201613c39565b6000816000015160200151806020019051810190610d3691906159a0565b6138e78282613c5b565b6114905760405163ee84f40b60e01b81526001600160a01b0382166004820152602401611126565b6001820154604051631582016d60e01b81526001600160a01b0390911690631582016d90613941908490600401615aa3565b602060405180830381865afa15801561395e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061398291906155bf565b61149057806040516380f3229160e01b81526004016111269190615aa3565b60006139ac83613c88565b8015610dc95750610dc98383613cbb565b81546040516303de1a5960e51b81526001600160a01b0390911690637bc34b20906139ec908490600401615aa3565b602060405180830381865afa158015613a09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a2d91906155bf565b611490578060405163191e817360e21b81526004016111269190615aa3565b8154604051630b42144760e41b81526000916001600160a01b03169063b421447090613a7c908590600401615aa3565b6040805180830381865afa158015613a98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613abc9190615cce565b602001519392505050565b6000610dc96001840183613dac565b6001600160a01b03811660009081526004830160205260408120610dc990613c39565b60058101546000906001600160a01b031615801590610d3657505060050154600160e81b900460ff161590565b6060610dc98383604051806060016040528060278152602001615daf60279139613dce565b6000610d3682613e62565b6000808080613b658686613e6d565b9097909650945050505050565b6001600160a01b0381163b613bdf5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401611126565b600080516020615d8f83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b613c1783613e98565b600082511180613c245750805b1561352957613c338383613ed8565b50505050565b6000610d36825490565b6000808080613b65866001600160a01b038716613f84565b6001600160a01b038116600090815260048301602052604081208190613c8090613c39565b119392505050565b6000613c9b826301ffc9a760e01b613cbb565b8015610d365750613cb4826001600160e01b0319613cbb565b1592915050565b6000806301ffc9a760e01b83604051602401613cd79190615aa3565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080856001600160a01b031661753084604051613d2a9190615d2c565b6000604051808303818686fa925050503d8060008114613d66576040519150601f19603f3d011682016040523d82523d6000602084013e613d6b565b606091505b5091509150602081511015613d865760009350505050610d36565b818015613da2575080806020019051810190613da291906155bf565b9695505050505050565b6001600160a01b03811660009081526001830160205260408120541515610dc9565b60606001600160a01b0384163b613df75760405162461bcd60e51b815260040161112690615d48565b600080856001600160a01b031685604051613e129190615d2c565b600060405180830381855af49150503d8060008114613e4d576040519150601f19603f3d011682016040523d82523d6000602084013e613e52565b606091505b5091509150613da2828286613fbe565b6000610d3682613c39565b60008080613e7b8585613ff7565b600081815260029690960160205260409095205494959350505050565b613ea181613b72565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b613f015760405162461bcd60e51b815260040161112690615d48565b600080846001600160a01b031684604051613f1c9190615d2c565b600060405180830381855af49150503d8060008114613f57576040519150601f19603f3d011682016040523d82523d6000602084013e613f5c565b606091505b50915091506136968282604051806060016040528060278152602001615daf60279139613fbe565b6000818152600283016020526040812054819080613fb357613fa68585614003565b9250600091506113bd9050565b6001925090506113bd565b60608315613fcd575081610dc9565b825115613fdd5782518084602001fd5b8160405162461bcd60e51b8152600401611126919061471b565b6000610dc9838361400f565b6000610dc98383614039565b600082600001828154811061402657614026615c51565b9060005260206000200154905092915050565b60008181526001830160205260408120541515610dc9565b6040805161018081019091526000610140820181815260606101608401526101008301908152610120830191909152819081526020016140ae604051806040016040528060006001600160e01b0319168152602001606081525090565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c09091015290565b6000602082840312156140f057600080fd5b5035919050565b600060a0828403121561179f57600080fd5b60008060c0838503121561411c57600080fd5b61412684846140f7565b9460a0939093013593505050565b6001600160a01b03811681146111c357600080fd5b6000806040838503121561415c57600080fd5b82359150602083013561416e81614134565b809150509250929050565b60006020828403121561418b57600080fd5b8135610dc981614134565b602080825282518282018190526000919060409081850190868401855b828110156141e157815180516001600160a01b031685528601518685015292840192908501906001016141b3565b5091979650505050505050565b600060a0828403121561420057600080fd5b610dc983836140f7565b60c08101610d368284805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b60006020828403121561425f57600080fd5b813561ffff81168114610dc957600080fd5b60006040828403121561179f57600080fd5b60006020828403121561429557600080fd5b81356001600160401b038111156142ab57600080fd5b611bbd84828501614271565b634e487b7160e01b600052602160045260246000fd5b60208101600383106142ef57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060006060848603121561430a57600080fd5b833561431581614134565b925060208401359150604084013561432c81614134565b809150509250925092565b6000806040838503121561434a57600080fd5b50508035926020909101359150565b600081518084526020808501945080840160005b838110156143895781518752958201959082019060010161436d565b509495945050505050565b60005b838110156143af578181015183820152602001614397565b83811115613c335750506000910152565b600081518084526143d8816020860160208601614394565b601f01601f19169290920160200192915050565b63ffffffff60e01b81511682526000602082015160406020850152611bbd60408501826143c0565b600081516040845261442960408501826143ec565b602093840151949093019390935250919050565b6000610100825181855261445382860182614414565b9150506020830151848203602086015261446d82826143ec565b91505060018060a01b03604084015116604085015263ffffffff606084015116606085015260808301516144a9608086018263ffffffff169052565b5060a08301516144bd60a086018215159052565b5060c08301516144d160c086018215159052565b5060e08301516133b660e086018215159052565b6040815260006144f86040830185614359565b6020838203818501528185518084528284019150828160051b85010183880160005b8381101561454857601f1987840301855261453683835161443d565b9486019492509085019060010161451a565b50909998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171561458f5761458f614557565b60405290565b60405161010081016001600160401b038111828210171561458f5761458f614557565b60405160c081016001600160401b038111828210171561458f5761458f614557565b604051606081016001600160401b038111828210171561458f5761458f614557565b60405161012081016001600160401b038111828210171561458f5761458f614557565b604051601f8201601f191681016001600160401b038111828210171561464757614647614557565b604052919050565b60006001600160401b0382111561466857614668614557565b50601f01601f191660200190565b600082601f83011261468757600080fd5b813561469a6146958261464f565b61461f565b8181528460208386010111156146af57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156146df57600080fd5b82356146ea81614134565b915060208301356001600160401b0381111561470557600080fd5b61471185828601614676565b9150509250929050565b602081526000610dc960208301846143c0565b63ffffffff60e01b81511682526000602082015160018060a01b0380821660208601526040840151151560408601528060608501511660608601525050608082015160c0608085015261478460c08501826143c0565b60a093840151949093019390935250919050565b602081526000610dc9602083018461472e565b6000815160c084526147c060c0850182614414565b9050602083015160208501526040830151604085015260018060a01b036060840151166060850152608083015163ffffffff80821660808701528060a08601511660a087015250508091505092915050565b602081526000610dc960208301846147ab565b60008060006060848603121561483a57600080fd5b833561484581614134565b95602085013595506040909401359392505050565b60408152600061486d6040830185614359565b6020838203818501528185518084528284019150828160051b85010183880160005b8381101561454857601f198784030185526148ab8383516147ab565b9486019492509085019060010161488f565b600081518084526020808501945080840160005b838110156143895781516001600160a01b0316875295820195908201906001016148d1565b60006040808352614909818401866148bd565b83810360208581019190915285518083528682019282019060005b8181101561496a57845180516001600160a01b039081168552858201516001600160e01b0319168686015290870151168684015293830193606090920191600101614924565b509098975050505050505050565b6000806040838503121561498b57600080fd5b823561499681614134565b9150602083013561416e81614134565b600060e0828403121561179f57600080fd5b6040815260006149cb60408301856148bd565b6020838203818501528185518084528284019150828160051b85010183880160005b8381101561454857601f19878403018552614a0983835161472e565b948601949250908501906001016149ed565b63ffffffff811681146111c357600080fd5b80151581146111c357600080fd5b60008060008060808587031215614a5157600080fd5b84356001600160401b0380821115614a6857600080fd5b614a7488838901614271565b95506020870135915080821115614a8a57600080fd5b50614a9787828801614271565b9350506040850135614aa881614a1b565b91506060850135614ab881614a2d565b939692955090935050565b60008060008060808587031215614ad957600080fd5b843593506020850135614aeb81614134565b9250604085013591506060850135614ab881614134565b60008060408385031215614b1557600080fd5b8235614b2081614134565b915060208301356001600160401b03811115614b3b57600080fd5b83016060818603121561416e57600080fd5b602081526000610dc9602083018461443d565b600080600060608486031215614b7557600080fd5b505081359360208301359350604090920135919050565b803582526020810135614b9e81614134565b6001600160a01b039081166020840152604082013590614bbd82614134565b9081166040840152606082013590614bd482614a1b565b63ffffffff8216606085015260808301359150614bf082614134565b808216608085015250505050565b6101008101614c0d8287614b8c565b8460a08301528360c08301528260e083015295945050505050565b600060208284031215614c3a57600080fd5b8135610dc981614a1b565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff808316818516808303821115614c7a57614c7a614c45565b01949350505050565b828152604060208201526000825160c06040840152614ca6610100840182614414565b9050602084015160608401526040840151608084015260018060a01b0360608501511660a0840152608084015163ffffffff80821660c08601528060a08701511660e08601525050809150509392505050565b600060208284031215614d0b57600080fd5b5051919050565b9384526001600160a01b039290921660208401526040830152606082015260800190565b606081526000614d496060830186614414565b63ffffffff94851660208401529290931660409091015292915050565b6101208101614d758288614b8c565b60a082019590955260c081019390935260e08301919091526001600160a01b031661010090910152919050565b600060c08284031215614db457600080fd5b60405160c081018181106001600160401b0382111715614dd657614dd6614557565b8060405250825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b6001600160e01b0319811681146111c357600080fd5b60008135614e3e81614e1b565b6001600160e01b0319168352602082013536839003601e19018112614e6257600080fd5b820180356001600160401b03811115614e7a57600080fd5b803603841315614e8957600080fd5b60406020860152806040860152806020830160608701376000606082870101526060601f19601f8301168601019250505092915050565b828152604060208201526000611bbd6040830184614e31565b600060208284031215614eeb57600080fd5b815160038110610dc957600080fd5b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b9384526001600160a01b039283166020850152604084019190915216606082015260800190565b60006001600160401b03821115614fd257614fd2614557565b5060051b60200190565b600082601f830112614fed57600080fd5b81516020614ffd61469583614fb9565b82815260059290921b8401810191818101908684111561501c57600080fd5b8286015b848110156150375780518352918301918301615020565b509695505050505050565b60006150506146958461464f565b905082815283838301111561506457600080fd5b610dc9836020830184614394565b60006040828403121561508457600080fd5b61508c61456d565b9050815161509981614e1b565b815260208201516001600160401b038111156150b457600080fd5b8201601f810184136150c557600080fd5b6150d484825160208401615042565b60208301525092915050565b6000604082840312156150f257600080fd5b6150fa61456d565b905081516001600160401b0381111561511257600080fd5b61511e84828501615072565b8252506020820151602082015292915050565b805161383f81614134565b805161383f81614a1b565b805161383f81614a2d565b6000806040838503121561516557600080fd5b82516001600160401b038082111561517c57600080fd5b61518886838701614fdc565b935060209150818501518181111561519f57600080fd5b8501601f810187136151b057600080fd5b80516151be61469582614fb9565b81815260059190911b820184019084810190898311156151dd57600080fd5b8584015b838110156152db578051868111156151f95760008081fd5b8501610100818d03601f19018113156152125760008081fd5b61521a614595565b898301518981111561522c5760008081fd5b61523a8f8c838701016150e0565b8252506040830151898111156152505760008081fd5b61525e8f8c83870101615072565b8b830152506060615270818501615131565b6040830152608061528281860161513c565b8284015260a0915061529582860161513c565b9083015260c06152a6858201615147565b8284015260e091506152b9828601615147565b908301526152c8848401615147565b90820152855250509186019186016151e1565b508096505050505050509250929050565b600181811c9082168061530057607f821691505b60208210810361179f57634e487b7160e01b600052602260045260246000fd5b6000806040838503121561533357600080fd5b82516001600160401b038082111561534a57600080fd5b61535686838701614fdc565b935060209150818501518181111561536d57600080fd5b8501601f8101871361537e57600080fd5b805161538c61469582614fb9565b81815260059190911b820184019084810190898311156153ab57600080fd5b8584015b838110156152db578051868111156153c75760008081fd5b850160c0818d03601f19018113156153df5760008081fd5b6153e76145b8565b89830151898111156153f95760008081fd5b6154078f8c838701016150e0565b82525060408301518a820152606080840151604083015260808085015161542d81614134565b80838501525060a091508185015161544481614a1b565b90830152928201519261545684614a1b565b8101929092525083529186019186016153af565b600082601f83011261547b57600080fd5b8151602061548b61469583614fb9565b82815260059290921b840181019181810190868411156154aa57600080fd5b8286015b848110156150375780516154c181614134565b83529183019183016154ae565b60008060408084860312156154e257600080fd5b83516001600160401b03808211156154f957600080fd5b6155058783880161546a565b945060209150818601518181111561551c57600080fd5b86019050601f8101871361552f57600080fd5b805161553d61469582614fb9565b8181526060918202830184019184820191908a84111561555c57600080fd5b938501935b838510156152db5780858c0312156155795760008081fd5b6155816145da565b855161558c81614134565b81528587015161559b81614e1b565b81880152858801516155ac81614134565b8189015283529384019391850191615561565b6000602082840312156155d157600080fd5b8151610dc981614a2d565b828152604060208201526000611bbd6040830184614414565b602081526000610dc96020830184614414565b600082601f83011261561957600080fd5b610dc983835160208501615042565b6000806040838503121561563b57600080fd5b82516001600160401b038082111561565257600080fd5b61565e8683870161546a565b935060209150818501518181111561567557600080fd5b8501601f8101871361568657600080fd5b805161569461469582614fb9565b81815260059190911b820184019084810190898311156156b357600080fd5b8584015b838110156152db578051868111156156ce57600080fd5b850160c0818d03601f190112156156e457600080fd5b6156ec6145b8565b888201516156f981614e1b565b8152604082015161570981614134565b818a0152606082015161571b81614a2d565b604082015261572c60808301615131565b606082015260a080830151898111156157455760008081fd5b6157538f8c83870101615608565b60808401525060c092909201519181019190915283529186019186016156b7565b60006040828403121561578657600080fd5b61578e61456d565b9050813561579b81614e1b565b815260208201356001600160401b038111156157b657600080fd5b6150d484828501614676565b6000604082360312156157d457600080fd5b6157dc61456d565b82356001600160401b038111156157f257600080fd5b6157fe36828601615774565b825250602092830135928101929092525090565b60006020828403121561582457600080fd5b8135610dc981614e1b565b8381526060602082015260008335603e1985360301811261584f57600080fd5b6040606084015261586560a08401868301614e31565b60209590950135608084015250506001600160a01b0391909116604090910152919050565b6000610d363683615774565b82815260406020820152600082516101008060408501526158bb610140850183614414565b91506020850151603f198584030160608601526158d883826143ec565b60408701516001600160a01b03166080870152606087015163ffffffff811660a0880152909350905050608085015163ffffffff811660c08601525060a085015180151560e08601525060c085015180151585830152505060e084015180151561012085015250949350505050565b60608152600061595a6060830186614414565b828103602084015261596c81866143ec565b91505063ffffffff83166040830152949350505050565b60006020828403121561599557600080fd5b8151610dc981614e1b565b6000602082840312156159b257600080fd5b8151610dc981614134565b6000602082840312156159cf57600080fd5b8135610dc981614a2d565b6000808335601e198436030181126159f157600080fd5b8301803591506001600160401b03821115615a0b57600080fd5b6020019150368190038213156113bd57600080fd5b838152600060018060a01b0380851660208401526060604084015263ffffffff60e01b84511660608401528060208501511660808401526040840151151560a08401528060608501511660c084015250608083015160c060e0840152615a8a6101208401826143c0565b905060a084015161010084015280915050949350505050565b6001600160e01b031991909116815260200190565b8781526102008101615acd6020830189614b8c565b865160c0830152602087015160e083015260408701516101008301526060870151610120830152608087015161014083015260a0909601516101608201526001600160a01b03949094166101808501526101a08401929092526101c08301526101e09091015292915050565b80516001811061383f57600080fd5b60006101208284031215615b5b57600080fd5b615b636145fc565b615b6c83615131565b815260208301516020820152615b8460408401615131565b6040820152615b9560608401615b39565b60608201526080830151608082015260a083015160a0820152615bba60c08401615131565b60c082015260e083015160e0820152610100615bd7818501615131565b908201529392505050565b606081526000615bf56060830186614414565b6001600160a01b0394851660208401529290931660409091015292915050565b60008060408385031215615c2857600080fd5b8251915060208301516001600160401b03811115615c4557600080fd5b614711858286016150e0565b634e487b7160e01b600052603260045260246000fd5b600060018201615c7957615c79614c45565b5060010190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600060408284031215615ce057600080fd5b604051604081018181106001600160401b0382111715615d0257615d02614557565b6040528251615d1081614134565b81526020830151615d2081614134565b60208201529392505050565b60008251615d3e818460208701614394565b9190910192915050565b60208082526026908201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6040820152651b9d1c9858dd60d21b60608201526080019056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122041b00547a2aae0635bb62280af6a14ab7ba208fa2dd4c73ec2810c638e65a3a864736f6c634300080d0033496e697469616c697a61626c653a20636f6e747261637420697320616c726561";

type MetahubV2MockConstructorParams =
  | [linkLibraryAddresses: MetahubV2MockLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MetahubV2MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class MetahubV2Mock__factory extends ContractFactory {
  constructor(...args: MetahubV2MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        MetahubV2Mock__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: MetahubV2MockLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e5879ada6f69714d7fc0d88dbcc568b31e\\$__", "g"),
      linkLibraryAddresses["contracts/renting/Rentings.sol:Rentings"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$f64f2ddc230f4d0d284eef95d6ec5afa1e\\$__", "g"),
      linkLibraryAddresses["contracts/accounting/Accounts.sol:Accounts"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$23c70d15f703c3ae387c840540427b8a00\\$__", "g"),
      linkLibraryAddresses["contracts/listing/Listings.sol:Listings"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$48805a21cd2d79ca776bf2c16e4893ad10\\$__", "g"),
      linkLibraryAddresses["contracts/asset/Assets.sol:Assets"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$f390c19a6588bf1782f680f4e6750cf906\\$__", "g"),
      linkLibraryAddresses["contracts/warper/Warpers.sol:Warpers"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MetahubV2Mock> {
    return super.deploy(overrides || {}) as Promise<MetahubV2Mock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MetahubV2Mock {
    return super.attach(address) as MetahubV2Mock;
  }
  override connect(signer: Signer): MetahubV2Mock__factory {
    return super.connect(signer) as MetahubV2Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetahubV2MockInterface {
    return new utils.Interface(_abi) as MetahubV2MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetahubV2Mock {
    return new Contract(address, _abi, signerOrProvider) as MetahubV2Mock;
  }
}

export interface MetahubV2MockLibraryAddresses {
  ["contracts/renting/Rentings.sol:Rentings"]: string;
  ["contracts/accounting/Accounts.sol:Accounts"]: string;
  ["contracts/listing/Listings.sol:Listings"]: string;
  ["contracts/asset/Assets.sol:Assets"]: string;
  ["contracts/warper/Warpers.sol:Warpers"]: string;
}
