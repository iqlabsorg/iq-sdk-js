/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WarperWithRenting,
  WarperWithRentingInterface,
} from "../../../../contracts/mocks/WarperRentalHook.sol/WarperWithRenting";

const _abi = [
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "CallForwardToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotMetahub",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotWarperAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractIsAlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractIsNotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "original",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "requiredInterfaceId",
        type: "bytes4",
      },
    ],
    name: "InvalidOriginalTokenInterface",
    type: "error",
  },
  {
    inputs: [],
    name: "MethodNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToTheZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "OperatorQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "RentingHookError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenIsAlreadyMinted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToTheZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "__assetClass",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "original",
        type: "address",
      },
      {
        internalType: "address",
        name: "metahub",
        type: "address",
      },
    ],
    name: "__initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "__metahub",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rentalId_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "class",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Assets.AssetId",
                name: "id",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Assets.Asset",
            name: "warpedAsset",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "collectionId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "startTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "endTime",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes4",
                name: "strategy",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Listings.Params",
            name: "listingParams",
            type: "tuple",
          },
        ],
        internalType: "struct Rentings.Agreement",
        name: "rentalAgreement_",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "enum IPaymentManager.EarningType",
                name: "earningType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct Accounts.UserEarning[]",
            name: "userEarnings",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "universeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "universeEarningValue",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "universeEarningToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "protocolEarningValue",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "protocolEarningToken",
            type: "address",
          },
        ],
        internalType: "struct Accounts.RentalEarnings",
        name: "rentalEarnings_",
        type: "tuple",
      },
    ],
    name: "__onRent",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "string",
        name: "errorMessage",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "__original",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "interfaceIds",
        type: "bytes4[]",
      },
    ],
    name: "__supportedInterfaces",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "amount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rentalAgreement",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "class",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Assets.AssetId",
            name: "id",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Assets.Asset",
        name: "warpedAsset",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "collectionId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "startTime",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "endTime",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "strategy",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Listings.Params",
        name: "listingParams",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rentalEarnings",
    outputs: [
      {
        internalType: "uint256",
        name: "universeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "universeEarningValue",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "universeEarningToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "protocolEarningValue",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "protocolEarningToken",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rentalId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "successState_",
        type: "bool",
      },
    ],
    name: "setSuccessState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "successState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526012805460ff1916600117905534801561001d57600080fd5b506123ff8061002d6000396000f3fe60806040526004361061016a5760003560e01c80636352211e116100d1578063ac9650d81161008a578063caf9e19111610064578063caf9e191146104ad578063e846a5a9146104cd578063e985e9c5146104ef578063f46c73c61461050f57610179565b8063ac9650d814610432578063b88d4fde1461045f578063c8b3ad1a1461047f57610179565b80636352211e1461038b57806370a08231146103ab57806394d008ef146103cb5780639f5079d0146103eb578063a22cb46514610401578063aa8c217c1461041c57610179565b806323b872dd1161012357806323b872dd146102c65780633d0ffcf6146102e657806342842e0e1461030e5780634f192bda1461032e5780635a70a2831461034857806362bc508a1461035d57610179565b806301ffc9a714610181578063081812fc146101b6578063095ea7b3146101ee57806313cde4321461020e57806317d70f7c146102755780631f9e33041461029957610179565b3661017957610177610524565b005b610177610524565b34801561018d57600080fd5b506101a161019c3660046116c2565b610536565b60405190151581526020015b60405180910390f35b3480156101c257600080fd5b506101d66101d13660046116df565b610561565b6040516001600160a01b0390911681526020016101ad565b3480156101fa57600080fd5b5061017761020936600461170d565b6105b8565b34801561021a57600080fd5b50600d54600e54600f546010546011546102419493926001600160a01b0390811692911685565b6040805195865260208601949094526001600160a01b0392831693850193909352606084015216608082015260a0016101ad565b34801561028157600080fd5b5061028b60025481565b6040519081526020016101ad565b3480156102a557600080fd5b506102b96102b4366004611780565b6105d1565b6040516101ad9190611832565b3480156102d257600080fd5b506101776102e1366004611878565b6105dd565b3480156102f257600080fd5b506102fb6105ed565b6040516101ad9796959493929190611939565b34801561031a57600080fd5b50610177610329366004611878565b6107b3565b34801561033a57600080fd5b506012546101a19060ff1681565b34801561035457600080fd5b506101d66107ce565b34801561036957600080fd5b506101776103783660046119c1565b6012805460ff1916911515919091179055565b34801561039757600080fd5b506101d66103a63660046116df565b6107dd565b3480156103b757600080fd5b5061028b6103c63660046119de565b61087b565b3480156103d757600080fd5b506101776103e6366004611a6b565b61093d565b3480156103f757600080fd5b5061028b60015481565b34801561040d57600080fd5b50610177610209366004611ac4565b34801561042857600080fd5b5061028b60035481565b34801561043e57600080fd5b5061045261044d366004611afd565b610a32565b6040516101ad9190611b72565b34801561046b57600080fd5b5061017761047a366004611bd4565b610b27565b34801561048b57600080fd5b5061049f61049a366004611c40565b610b39565b6040516101ad929190611cd0565b3480156104b957600080fd5b506101776104c8366004611ceb565b610baa565b3480156104d957600080fd5b506040516339d690a360e11b81526020016101ad565b3480156104fb57600080fd5b506101a161050a366004611ceb565b610d09565b34801561051b57600080fd5b506101d6610d2f565b61053461052f610d35565b610d74565b565b60006001600160e01b03198216636459d68d60e11b148061055b575061055b82610dc1565b92915050565b60008061056d83610e01565b9050600081600281111561058357610583611d19565b036105a95760405163e4c0734760e01b8152600481018490526024015b60405180910390fd5b6105b1610e9a565b9392505050565b6040516341f8b8eb60e11b815260040160405180910390fd5b606061055b3083610eca565b6105e8838383610f8d565b505050565b604080516080810182526004805460e01b6001600160e01b03191692820192835260058054919384928492849160608501919061062990611d2f565b80601f016020809104026020016040519081016040528092919081815260200182805461065590611d2f565b80156106a25780601f10610677576101008083540402835291602001916106a2565b820191906000526020600020905b81548152906001019060200180831161068557829003601f168201915b505050919092525050508152600291909101546020918201526003830154600484015460058501546040805180820190915260068701805460e01b6001600160e01b03191682526007880180549798959794966001600160a01b03851696600160a01b860463ffffffff90811697600160c01b909704169590949392918401919061072c90611d2f565b80601f016020809104026020016040519081016040528092919081815260200182805461075890611d2f565b80156107a55780601f1061077a576101008083540402835291602001916107a5565b820191906000526020600020905b81548152906001019060200180831161078857829003601f168201915b505050505081525050905087565b6105e883838360405180602001604052806000815250610b27565b60006107d8610e9a565b905090565b6000806107e983610e01565b905060008160028111156107ff576107ff611d19565b036108205760405163e4c0734760e01b8152600481018490526024016105a0565b600181600281111561083457610834611d19565b03610841576105b1610e9a565b506000828152602081905260409020546001600160a01b03168061055b5760405163e4c0734760e01b8152600481018490526024016105a0565b60006001600160a01b0382166108a4576040516323d3ad8160e21b815260040160405180910390fd5b60006108ae611053565b9050806001600160a01b031663bfe0af996108c7610e9a565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201523060248201529086166044820152606401602060405180830381865afa158015610919573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b19190611d69565b6001600160a01b0383166109645760405163c96c2a0b60e01b815260040160405180910390fd5b6000828152602081905260409020546001600160a01b03161561099d576040516376b78f6560e01b8152600481018390526024016105a0565b6109a9600084846110c7565b60008281526020819052604080822080546001600160a01b0319166001600160a01b03871690811790915590518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4610a0b6000848484611100565b6105e85760405162aae5b760e01b81526001600160a01b03841660048201526024016105a0565b60608167ffffffffffffffff811115610a4d57610a4d611739565b604051908082528060200260200182016040528015610a8057816020015b6060815260200190600190039081610a6b5790505b50905060005b82811015610b2057610af030858584818110610aa457610aa4611d82565b9050602002810190610ab69190611d98565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061120c92505050565b828281518110610b0257610b02611d82565b60200260200101819052508080610b1890611dfc565b915050610a86565b5092915050565b610b3384848484611231565b50505050565b60018590556002849055600383905560006060836004610b598282611fd7565b50839050600c610b6982826121fb565b505060125460408051808201909152601381527254686572652077617320616e206572726f722160681b602082015260ff9091169890975095505050505050565b6000610bcb610bc860016000805160206123aa83398151915261229b565b90565b5460ff16610c0b57610c01610bc860017f37e69e8e563db672cb7e105d3e1915d10ef53975d285d458a13e70818bf53d2761229b565b5460ff1615610c0f565b303b155b1590508015610c305760405162ea7fe560e71b815260040160405180910390fd5b6000610c4e610bc860016000805160206123aa83398151915261229b565b5460ff161590508015610cc6576001610c78610bc8826000805160206123aa83398151915261229b565b805460ff19169115159190911790556001610cb6610bc8827f37e69e8e563db672cb7e105d3e1915d10ef53975d285d458a13e70818bf53d2761229b565b805460ff19169115159190911790555b610cd0848461126f565b8015610b33576000610cf4610bc860016000805160206123aa83398151915261229b565b805460ff191691151591909117905550505050565b6000610d13610e9a565b6001600160a01b0316826001600160a01b031614905092915050565b60006107d85b6000610d65610bc860017f1cd3cead3f33d5ed74fb83a237e17d126ef505cbae350d3d0ffce421e3a1d14461229b565b546001600160a01b0316919050565b6001600160a01b038116610d9b5760405163eb0308d160e01b815260040160405180910390fd5b34366000803760008036600084865af13d6000803e808015610dbc573d6000f35b3d6000fd5b60006001600160e01b031982166394d008ef60e01b1480610df257506001600160e01b031982166380ac58cd60e01b145b8061055b575061055b826112cb565b600080610e0c611053565b9050806001600160a01b0316633f09518c610e25610e9a565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260448101869052606401602060405180830381865afa158015610e76573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b191906122b2565b6000610d65610bc860017fc57d320c8f1e45a5114285d6f31191434d3d45422aff570b70ab6787e45bcf0061229b565b60606000825167ffffffffffffffff811115610ee857610ee8611739565b604051908082528060200260200182016040528015610f11578160200160208202803683370190505b509050610f1d8461131d565b156105b15760005b8351811015610f8557610f5185858381518110610f4457610f44611d82565b6020026020010151611350565b828281518110610f6357610f63611d82565b9115156020928302919091019091015280610f7d81611dfc565b915050610f25565b509392505050565b6000818152602081905260409020546001600160a01b0316610fc55760405163074fede760e51b8152600481018290526024016105a0565b6001600160a01b038216610fec5760405163671d1add60e11b815260040160405180910390fd5b610ff78383836110c7565b60008181526020819052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600061105d610e9a565b60405163ebf03f4960e01b81523060048201526001600160a01b03919091169063ebf03f4990602401602060405180830381865afa1580156110a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d891906122d3565b6110cf610e9a565b6001600160a01b0316336001600160a01b0316146105e85760405163323b4eed60e11b815260040160405180910390fd5b60006001600160a01b0384163b61111957506001611204565b604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061114b9033908990889088906004016122f0565b6020604051808303816000875af1925050508015611186575060408051601f3d908101601f1916820190925261118391810190612323565b60015b6111ee573d8080156111b4576040519150601f19603f3d011682016040523d82523d6000602084013e6111b9565b606091505b5080516000036111e65760405162aae5b760e01b81526001600160a01b03861660048201526024016105a0565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b60606105b1838360405180606001604052806027815260200161238360279139611439565b61123c848484610f8d565b61124884848484611100565b610b335760405162aae5b760e01b81526001600160a01b03841660048201526024016105a0565b61128b610bc860016000805160206123aa83398151915261229b565b5460ff166112ac576040516369be8d9360e11b815260040160405180910390fd5b6112b58261150c565b6112be8261155e565b6112c7816115eb565b5050565b60006001600160e01b03198216630b3888fd60e31b14806112fc57506001600160e01b031982166301ffc9a760e01b145b8061055b575061055b8261130e610d35565b6001600160a01b031690611657565b6000611330826301ffc9a760e01b611350565b801561055b5750611349826001600160e01b0319611350565b1592915050565b604080516001600160e01b0319831660248083019190915282518083039091018152604490910182526020810180516001600160e01b03166301ffc9a760e01b179052905160009190829081906001600160a01b03871690617530906113b7908690612340565b6000604051808303818686fa925050503d80600081146113f3576040519150601f19603f3d011682016040523d82523d6000602084013e6113f8565b606091505b5091509150602081511015611413576000935050505061055b565b81801561142f57508080602001905181019061142f9190612352565b9695505050505050565b60606001600160a01b0384163b6114a15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016105a0565b600080856001600160a01b0316856040516114bc9190612340565b600060405180830381855af49150503d80600081146114f7576040519150601f19603f3d011682016040523d82523d6000602084013e6114fc565b606091505b509150915061142f828286611673565b6115266001600160a01b038216635b5e139f60e01b611657565b61155b5760405163c30175c560e01b81526001600160a01b0382166004820152635b5e139f60e01b60248201526044016105a0565b50565b61157a610bc860016000805160206123aa83398151915261229b565b5460ff1661159b576040516369be8d9360e11b815260040160405180910390fd5b806115ca610bc860017f1cd3cead3f33d5ed74fb83a237e17d126ef505cbae350d3d0ffce421e3a1d14461229b565b80546001600160a01b0319166001600160a01b039290921691909117905550565b611607610bc860016000805160206123aa83398151915261229b565b5460ff16611628576040516369be8d9360e11b815260040160405180910390fd5b806115ca610bc860017fc57d320c8f1e45a5114285d6f31191434d3d45422aff570b70ab6787e45bcf0061229b565b60006116628361131d565b80156105b157506105b18383611350565b606083156116825750816105b1565b8251156116925782518084602001fd5b8160405162461bcd60e51b81526004016105a0919061236f565b6001600160e01b03198116811461155b57600080fd5b6000602082840312156116d457600080fd5b81356105b1816116ac565b6000602082840312156116f157600080fd5b5035919050565b6001600160a01b038116811461155b57600080fd5b6000806040838503121561172057600080fd5b823561172b816116f8565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561177857611778611739565b604052919050565b6000602080838503121561179357600080fd5b823567ffffffffffffffff808211156117ab57600080fd5b818501915085601f8301126117bf57600080fd5b8135818111156117d1576117d1611739565b8060051b91506117e284830161174f565b81815291830184019184810190888411156117fc57600080fd5b938501935b838510156118265784359250611816836116ac565b8282529385019390850190611801565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561186c57835115158352928401929184019160010161184e565b50909695505050505050565b60008060006060848603121561188d57600080fd5b8335611898816116f8565b925060208401356118a8816116f8565b929592945050506040919091013590565b60005b838110156118d45781810151838201526020016118bc565b83811115610b335750506000910152565b600081518084526118fd8160208601602086016118b9565b601f01601f19169290920160200192915050565b63ffffffff60e01b8151168252600060208201516040602085015261120460408501826118e5565b60e0815260008851604060e0840152611956610120840182611911565b60208b81015161010086015284018a9052604084018990526001600160a01b038816606085015263ffffffff8781166080860152861660a085015283810360c085015290506119a58185611911565b9a9950505050505050505050565b801515811461155b57600080fd5b6000602082840312156119d357600080fd5b81356105b1816119b3565b6000602082840312156119f057600080fd5b81356105b1816116f8565b600082601f830112611a0c57600080fd5b813567ffffffffffffffff811115611a2657611a26611739565b611a39601f8201601f191660200161174f565b818152846020838601011115611a4e57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215611a8057600080fd5b8335611a8b816116f8565b925060208401359150604084013567ffffffffffffffff811115611aae57600080fd5b611aba868287016119fb565b9150509250925092565b60008060408385031215611ad757600080fd5b8235611ae2816116f8565b91506020830135611af2816119b3565b809150509250929050565b60008060208385031215611b1057600080fd5b823567ffffffffffffffff80821115611b2857600080fd5b818501915085601f830112611b3c57600080fd5b813581811115611b4b57600080fd5b8660208260051b8501011115611b6057600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611bc757603f19888603018452611bb58583516118e5565b94509285019290850190600101611b99565b5092979650505050505050565b60008060008060808587031215611bea57600080fd5b8435611bf5816116f8565b93506020850135611c05816116f8565b925060408501359150606085013567ffffffffffffffff811115611c2857600080fd5b611c34878288016119fb565b91505092959194509250565b600080600080600060a08688031215611c5857600080fd5b853594506020860135935060408601359250606086013567ffffffffffffffff80821115611c8557600080fd5b9087019060e0828a031215611c9957600080fd5b90925060808701359080821115611caf57600080fd5b50860160c08189031215611cc257600080fd5b809150509295509295909350565b821515815260406020820152600061120460408301846118e5565b60008060408385031215611cfe57600080fd5b8235611d09816116f8565b91506020830135611af2816116f8565b634e487b7160e01b600052602160045260246000fd5b600181811c90821680611d4357607f821691505b602082108103611d6357634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611d7b57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611daf57600080fd5b83018035915067ffffffffffffffff821115611dca57600080fd5b602001915036819003821315611ddf57600080fd5b9250929050565b634e487b7160e01b600052601160045260246000fd5b600060018201611e0e57611e0e611de6565b5060010190565b60008235603e19833603018112611e2b57600080fd5b9190910192915050565b601f8211156105e857600081815260208120601f850160051c81016020861015611e5c5750805b601f850160051c820191505b81811015611e7b57828155600101611e68565b505050505050565b8135611e8e816116ac565b8060e01c63ffffffff19835416178255506001808201602080850135601e19863603018112611ebc57600080fd5b8501803567ffffffffffffffff811115611ed557600080fd5b8036038383011315611ee657600080fd5b611efa81611ef48654611d2f565b86611e35565b6000601f821160018114611f305760008315611f1857508382018501355b600019600385901b1c1916600184901b178655611f89565b600086815260209020601f19841690835b82811015611f6057868501880135825593870193908901908701611f41565b5084821015611f7f5760001960f88660031b161c198785880101351681555b50508683881b0186555b505050505050505050565b6000813561055b816116f8565b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000813563ffffffff8116811461055b57600080fd5b611fe18283611e15565b611ff4611fee8283611e15565b83611e83565b6020908101356002830155820135600382015560408201356004820155600581016060830135612023816116f8565b61202d8183611fa1565b5061203a60808401611fc1565b815463ffffffff60a01b191660a091821b63ffffffff60a01b1617825561208a90612066908501611fc1565b82805463ffffffff60c01b191660c09290921b63ffffffff60c01b16919091179055565b506112c761209b60c0840184611e15565b60068301611e83565b8135600181106120b357600080fd5b815460ff821691508160ff19821617835560208401356120d2816116f8565b6001600160a81b03199190911690911760089190911b610100600160a81b031617815560408201356001820155606082013561210d816116f8565b6105e88160028401611fa1565b6801000000000000000083111561213357612133611739565b8054838255808410156121c6577f5555555555555555555555555555555555555555555555555555555555555555600181831181161561217557612175611de6565b600382871182161561218957612189611de6565b600085815260208120909350878202810190828602015b808210156121c057848255848483015584600283015582820191506121a0565b50505050505b5060008181526020812083915b85811015611e7b576121e583836120a4565b60809290920191600391909101906001016121d3565b8135601e1983360301811261220f57600080fd5b8201803567ffffffffffffffff81111561222857600080fd5b6020820191508060071b360382131561224057600080fd5b61224b81838561211a565b5050602082013560018201556040820135600282015561227961227060608401611f94565b60038301611fa1565b608082013560048201556112c761229260a08401611f94565b60058301611fa1565b6000828210156122ad576122ad611de6565b500390565b6000602082840312156122c457600080fd5b8151600381106105b157600080fd5b6000602082840312156122e557600080fd5b81516105b1816116f8565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061142f908301846118e5565b60006020828403121561233557600080fd5b81516105b1816116ac565b60008251611e2b8184602087016118b9565b60006020828403121561236457600080fd5b81516105b1816119b3565b6020815260006105b160208301846118e556fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564c2221768d9692f01d28cc433c84b2dc197fbcc867663b61d61e17ca4877697faa2646970667358221220e6ba481cf1bd38f05b9c61e8c7e065f6d7ae7f2f404de2633723e0e864f6207264736f6c634300080d0033";

type WarperWithRentingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WarperWithRentingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WarperWithRenting__factory extends ContractFactory {
  constructor(...args: WarperWithRentingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WarperWithRenting> {
    return super.deploy(overrides || {}) as Promise<WarperWithRenting>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WarperWithRenting {
    return super.attach(address) as WarperWithRenting;
  }
  override connect(signer: Signer): WarperWithRenting__factory {
    return super.connect(signer) as WarperWithRenting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WarperWithRentingInterface {
    return new utils.Interface(_abi) as WarperWithRentingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WarperWithRenting {
    return new Contract(address, _abi, signerOrProvider) as WarperWithRenting;
  }
}
